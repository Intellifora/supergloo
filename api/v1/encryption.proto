syntax = "proto3";
package supergloo.solo.io;
option go_package = "github.com/solo-io/supergloo/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/ref.proto";

message Encryption {
    // If set to true, TLS is enabled across the entire mesh.
    bool tls_enabled = 1;
    // This is a ref to a secret that should have at least ca-cert.pem and ca-key.pem fields.
    // The expected format is the same as defined in
    // github.com/solo-io/supergloo/pkg/api/external/istio/encryption/v1/secret.proto
    // If deploying to Consul, Consul Connect requires that the cert and key are generated using ec, not rsa.
    // If tlsEnabled is not true, this won't be used. 
    core.solo.io.ResourceRef secret = 2;

    enum MtlsMode {
        // Allow HTTP/Unencrypted traffic to connect to pods. Available where supported (Istio)
        STRICT = 0;
        // Only allow HTTPS/Encrpyted traffic to connect to pods
        PERMISSIVE = 1;
    }
    // incidcate whether mtls is enforced strictly, or plaintext http communication is permitted
    MtlsMode mode = 3;
}
