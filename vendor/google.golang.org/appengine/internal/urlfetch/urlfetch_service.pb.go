// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/google.golang.org/appengine/internal/urlfetch/urlfetch_service.proto

package urlfetch

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type URLFetchServiceError_ErrorCode int32

const (
	URLFetchServiceError_OK                       URLFetchServiceError_ErrorCode = 0
	URLFetchServiceError_INVALID_URL              URLFetchServiceError_ErrorCode = 1
	URLFetchServiceError_FETCH_ERROR              URLFetchServiceError_ErrorCode = 2
	URLFetchServiceError_UNSPECIFIED_ERROR        URLFetchServiceError_ErrorCode = 3
	URLFetchServiceError_RESPONSE_TOO_LARGE       URLFetchServiceError_ErrorCode = 4
	URLFetchServiceError_DEADLINE_EXCEEDED        URLFetchServiceError_ErrorCode = 5
	URLFetchServiceError_SSL_CERTIFICATE_ERROR    URLFetchServiceError_ErrorCode = 6
	URLFetchServiceError_DNS_ERROR                URLFetchServiceError_ErrorCode = 7
	URLFetchServiceError_CLOSED                   URLFetchServiceError_ErrorCode = 8
	URLFetchServiceError_INTERNAL_TRANSIENT_ERROR URLFetchServiceError_ErrorCode = 9
	URLFetchServiceError_TOO_MANY_REDIRECTS       URLFetchServiceError_ErrorCode = 10
	URLFetchServiceError_MALFORMED_REPLY          URLFetchServiceError_ErrorCode = 11
	URLFetchServiceError_CONNECTION_ERROR         URLFetchServiceError_ErrorCode = 12
)

var URLFetchServiceError_ErrorCode_name = map[int32]string{
	0:  "OK",
	1:  "INVALID_URL",
	2:  "FETCH_ERROR",
	3:  "UNSPECIFIED_ERROR",
	4:  "RESPONSE_TOO_LARGE",
	5:  "DEADLINE_EXCEEDED",
	6:  "SSL_CERTIFICATE_ERROR",
	7:  "DNS_ERROR",
	8:  "CLOSED",
	9:  "INTERNAL_TRANSIENT_ERROR",
	10: "TOO_MANY_REDIRECTS",
	11: "MALFORMED_REPLY",
	12: "CONNECTION_ERROR",
}
var URLFetchServiceError_ErrorCode_value = map[string]int32{
	"OK":                       0,
	"INVALID_URL":              1,
	"FETCH_ERROR":              2,
	"UNSPECIFIED_ERROR":        3,
	"RESPONSE_TOO_LARGE":       4,
	"DEADLINE_EXCEEDED":        5,
	"SSL_CERTIFICATE_ERROR":    6,
	"DNS_ERROR":                7,
	"CLOSED":                   8,
	"INTERNAL_TRANSIENT_ERROR": 9,
	"TOO_MANY_REDIRECTS":       10,
	"MALFORMED_REPLY":          11,
	"CONNECTION_ERROR":         12,
}

func (x URLFetchServiceError_ErrorCode) Enum() *URLFetchServiceError_ErrorCode {
	p := new(URLFetchServiceError_ErrorCode)
	*p = x
	return p
}
func (x URLFetchServiceError_ErrorCode) String() string {
	return proto.EnumName(URLFetchServiceError_ErrorCode_name, int32(x))
}
func (x *URLFetchServiceError_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(URLFetchServiceError_ErrorCode_value, data, "URLFetchServiceError_ErrorCode")
	if err != nil {
		return err
	}
	*x = URLFetchServiceError_ErrorCode(value)
	return nil
}
func (URLFetchServiceError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{0, 0}
}

type URLFetchRequest_RequestMethod int32

const (
	URLFetchRequest_GET    URLFetchRequest_RequestMethod = 1
	URLFetchRequest_POST   URLFetchRequest_RequestMethod = 2
	URLFetchRequest_HEAD   URLFetchRequest_RequestMethod = 3
	URLFetchRequest_PUT    URLFetchRequest_RequestMethod = 4
	URLFetchRequest_DELETE URLFetchRequest_RequestMethod = 5
	URLFetchRequest_PATCH  URLFetchRequest_RequestMethod = 6
)

var URLFetchRequest_RequestMethod_name = map[int32]string{
	1: "GET",
	2: "POST",
	3: "HEAD",
	4: "PUT",
	5: "DELETE",
	6: "PATCH",
}
var URLFetchRequest_RequestMethod_value = map[string]int32{
	"GET":    1,
	"POST":   2,
	"HEAD":   3,
	"PUT":    4,
	"DELETE": 5,
	"PATCH":  6,
}

func (x URLFetchRequest_RequestMethod) Enum() *URLFetchRequest_RequestMethod {
	p := new(URLFetchRequest_RequestMethod)
	*p = x
	return p
}
func (x URLFetchRequest_RequestMethod) String() string {
	return proto.EnumName(URLFetchRequest_RequestMethod_name, int32(x))
}
func (x *URLFetchRequest_RequestMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(URLFetchRequest_RequestMethod_value, data, "URLFetchRequest_RequestMethod")
	if err != nil {
		return err
	}
	*x = URLFetchRequest_RequestMethod(value)
	return nil
}
func (URLFetchRequest_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{1, 0}
}

type URLFetchServiceError struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLFetchServiceError) Reset()         { *m = URLFetchServiceError{} }
func (m *URLFetchServiceError) String() string { return proto.CompactTextString(m) }
func (*URLFetchServiceError) ProtoMessage()    {}
func (*URLFetchServiceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{0}
}
func (m *URLFetchServiceError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLFetchServiceError.Unmarshal(m, b)
}
func (m *URLFetchServiceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLFetchServiceError.Marshal(b, m, deterministic)
}
func (dst *URLFetchServiceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLFetchServiceError.Merge(dst, src)
}
func (m *URLFetchServiceError) XXX_Size() int {
	return xxx_messageInfo_URLFetchServiceError.Size(m)
}
func (m *URLFetchServiceError) XXX_DiscardUnknown() {
	xxx_messageInfo_URLFetchServiceError.DiscardUnknown(m)
}

var xxx_messageInfo_URLFetchServiceError proto.InternalMessageInfo

type URLFetchRequest struct {
	Method                        *URLFetchRequest_RequestMethod `protobuf:"varint,1,req,name=Method,enum=appengine.URLFetchRequest_RequestMethod" json:"Method,omitempty"`
	Url                           *string                        `protobuf:"bytes,2,req,name=Url" json:"Url,omitempty"`
	Header                        []*URLFetchRequest_Header      `protobuf:"group,3,rep,name=Header,json=header" json:"header,omitempty"`
	Payload                       []byte                         `protobuf:"bytes,6,opt,name=Payload" json:"Payload,omitempty"`
	FollowRedirects               *bool                          `protobuf:"varint,7,opt,name=FollowRedirects,def=1" json:"FollowRedirects,omitempty"`
	Deadline                      *float64                       `protobuf:"fixed64,8,opt,name=Deadline" json:"Deadline,omitempty"`
	MustValidateServerCertificate *bool                          `protobuf:"varint,9,opt,name=MustValidateServerCertificate,def=1" json:"MustValidateServerCertificate,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                       `json:"-"`
	XXX_unrecognized              []byte                         `json:"-"`
	XXX_sizecache                 int32                          `json:"-"`
}

func (m *URLFetchRequest) Reset()         { *m = URLFetchRequest{} }
func (m *URLFetchRequest) String() string { return proto.CompactTextString(m) }
func (*URLFetchRequest) ProtoMessage()    {}
func (*URLFetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{1}
}
func (m *URLFetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLFetchRequest.Unmarshal(m, b)
}
func (m *URLFetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLFetchRequest.Marshal(b, m, deterministic)
}
func (dst *URLFetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLFetchRequest.Merge(dst, src)
}
func (m *URLFetchRequest) XXX_Size() int {
	return xxx_messageInfo_URLFetchRequest.Size(m)
}
func (m *URLFetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLFetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLFetchRequest proto.InternalMessageInfo

const Default_URLFetchRequest_FollowRedirects bool = true
const Default_URLFetchRequest_MustValidateServerCertificate bool = true

func (m *URLFetchRequest) GetMethod() URLFetchRequest_RequestMethod {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return URLFetchRequest_GET
}

func (m *URLFetchRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *URLFetchRequest) GetHeader() []*URLFetchRequest_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *URLFetchRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *URLFetchRequest) GetFollowRedirects() bool {
	if m != nil && m.FollowRedirects != nil {
		return *m.FollowRedirects
	}
	return Default_URLFetchRequest_FollowRedirects
}

func (m *URLFetchRequest) GetDeadline() float64 {
	if m != nil && m.Deadline != nil {
		return *m.Deadline
	}
	return 0
}

func (m *URLFetchRequest) GetMustValidateServerCertificate() bool {
	if m != nil && m.MustValidateServerCertificate != nil {
		return *m.MustValidateServerCertificate
	}
	return Default_URLFetchRequest_MustValidateServerCertificate
}

type URLFetchRequest_Header struct {
	Key                  *string  `protobuf:"bytes,4,req,name=Key" json:"Key,omitempty"`
	Value                *string  `protobuf:"bytes,5,req,name=Value" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLFetchRequest_Header) Reset()         { *m = URLFetchRequest_Header{} }
func (m *URLFetchRequest_Header) String() string { return proto.CompactTextString(m) }
func (*URLFetchRequest_Header) ProtoMessage()    {}
func (*URLFetchRequest_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{1, 0}
}
func (m *URLFetchRequest_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLFetchRequest_Header.Unmarshal(m, b)
}
func (m *URLFetchRequest_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLFetchRequest_Header.Marshal(b, m, deterministic)
}
func (dst *URLFetchRequest_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLFetchRequest_Header.Merge(dst, src)
}
func (m *URLFetchRequest_Header) XXX_Size() int {
	return xxx_messageInfo_URLFetchRequest_Header.Size(m)
}
func (m *URLFetchRequest_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_URLFetchRequest_Header.DiscardUnknown(m)
}

var xxx_messageInfo_URLFetchRequest_Header proto.InternalMessageInfo

func (m *URLFetchRequest_Header) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *URLFetchRequest_Header) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type URLFetchResponse struct {
	Content               []byte                     `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
	StatusCode            *int32                     `protobuf:"varint,2,req,name=StatusCode" json:"StatusCode,omitempty"`
	Header                []*URLFetchResponse_Header `protobuf:"group,3,rep,name=Header,json=header" json:"header,omitempty"`
	ContentWasTruncated   *bool                      `protobuf:"varint,6,opt,name=ContentWasTruncated,def=0" json:"ContentWasTruncated,omitempty"`
	ExternalBytesSent     *int64                     `protobuf:"varint,7,opt,name=ExternalBytesSent" json:"ExternalBytesSent,omitempty"`
	ExternalBytesReceived *int64                     `protobuf:"varint,8,opt,name=ExternalBytesReceived" json:"ExternalBytesReceived,omitempty"`
	FinalUrl              *string                    `protobuf:"bytes,9,opt,name=FinalUrl" json:"FinalUrl,omitempty"`
	ApiCpuMilliseconds    *int64                     `protobuf:"varint,10,opt,name=ApiCpuMilliseconds,def=0" json:"ApiCpuMilliseconds,omitempty"`
	ApiBytesSent          *int64                     `protobuf:"varint,11,opt,name=ApiBytesSent,def=0" json:"ApiBytesSent,omitempty"`
	ApiBytesReceived      *int64                     `protobuf:"varint,12,opt,name=ApiBytesReceived,def=0" json:"ApiBytesReceived,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                   `json:"-"`
	XXX_unrecognized      []byte                     `json:"-"`
	XXX_sizecache         int32                      `json:"-"`
}

func (m *URLFetchResponse) Reset()         { *m = URLFetchResponse{} }
func (m *URLFetchResponse) String() string { return proto.CompactTextString(m) }
func (*URLFetchResponse) ProtoMessage()    {}
func (*URLFetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{2}
}
func (m *URLFetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLFetchResponse.Unmarshal(m, b)
}
func (m *URLFetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLFetchResponse.Marshal(b, m, deterministic)
}
func (dst *URLFetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLFetchResponse.Merge(dst, src)
}
func (m *URLFetchResponse) XXX_Size() int {
	return xxx_messageInfo_URLFetchResponse.Size(m)
}
func (m *URLFetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_URLFetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_URLFetchResponse proto.InternalMessageInfo

const Default_URLFetchResponse_ContentWasTruncated bool = false
const Default_URLFetchResponse_ApiCpuMilliseconds int64 = 0
const Default_URLFetchResponse_ApiBytesSent int64 = 0
const Default_URLFetchResponse_ApiBytesReceived int64 = 0

func (m *URLFetchResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *URLFetchResponse) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *URLFetchResponse) GetHeader() []*URLFetchResponse_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *URLFetchResponse) GetContentWasTruncated() bool {
	if m != nil && m.ContentWasTruncated != nil {
		return *m.ContentWasTruncated
	}
	return Default_URLFetchResponse_ContentWasTruncated
}

func (m *URLFetchResponse) GetExternalBytesSent() int64 {
	if m != nil && m.ExternalBytesSent != nil {
		return *m.ExternalBytesSent
	}
	return 0
}

func (m *URLFetchResponse) GetExternalBytesReceived() int64 {
	if m != nil && m.ExternalBytesReceived != nil {
		return *m.ExternalBytesReceived
	}
	return 0
}

func (m *URLFetchResponse) GetFinalUrl() string {
	if m != nil && m.FinalUrl != nil {
		return *m.FinalUrl
	}
	return ""
}

func (m *URLFetchResponse) GetApiCpuMilliseconds() int64 {
	if m != nil && m.ApiCpuMilliseconds != nil {
		return *m.ApiCpuMilliseconds
	}
	return Default_URLFetchResponse_ApiCpuMilliseconds
}

func (m *URLFetchResponse) GetApiBytesSent() int64 {
	if m != nil && m.ApiBytesSent != nil {
		return *m.ApiBytesSent
	}
	return Default_URLFetchResponse_ApiBytesSent
}

func (m *URLFetchResponse) GetApiBytesReceived() int64 {
	if m != nil && m.ApiBytesReceived != nil {
		return *m.ApiBytesReceived
	}
	return Default_URLFetchResponse_ApiBytesReceived
}

type URLFetchResponse_Header struct {
	Key                  *string  `protobuf:"bytes,4,req,name=Key" json:"Key,omitempty"`
	Value                *string  `protobuf:"bytes,5,req,name=Value" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLFetchResponse_Header) Reset()         { *m = URLFetchResponse_Header{} }
func (m *URLFetchResponse_Header) String() string { return proto.CompactTextString(m) }
func (*URLFetchResponse_Header) ProtoMessage()    {}
func (*URLFetchResponse_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_urlfetch_service_fe2e7fd165deacd7, []int{2, 0}
}
func (m *URLFetchResponse_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLFetchResponse_Header.Unmarshal(m, b)
}
func (m *URLFetchResponse_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLFetchResponse_Header.Marshal(b, m, deterministic)
}
func (dst *URLFetchResponse_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLFetchResponse_Header.Merge(dst, src)
}
func (m *URLFetchResponse_Header) XXX_Size() int {
	return xxx_messageInfo_URLFetchResponse_Header.Size(m)
}
func (m *URLFetchResponse_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_URLFetchResponse_Header.DiscardUnknown(m)
}

var xxx_messageInfo_URLFetchResponse_Header proto.InternalMessageInfo

func (m *URLFetchResponse_Header) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *URLFetchResponse_Header) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*URLFetchServiceError)(nil), "appengine.URLFetchServiceError")
	proto.RegisterType((*URLFetchRequest)(nil), "appengine.URLFetchRequest")
	proto.RegisterType((*URLFetchRequest_Header)(nil), "appengine.URLFetchRequest.Header")
	proto.RegisterType((*URLFetchResponse)(nil), "appengine.URLFetchResponse")
	proto.RegisterType((*URLFetchResponse_Header)(nil), "appengine.URLFetchResponse.Header")
	proto.RegisterEnum("appengine.URLFetchServiceError_ErrorCode", URLFetchServiceError_ErrorCode_name, URLFetchServiceError_ErrorCode_value)
	proto.RegisterEnum("appengine.URLFetchRequest_RequestMethod", URLFetchRequest_RequestMethod_name, URLFetchRequest_RequestMethod_value)
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/google.golang.org/appengine/internal/urlfetch/urlfetch_service.proto", fileDescriptor_urlfetch_service_fe2e7fd165deacd7)
}

var fileDescriptor_urlfetch_service_fe2e7fd165deacd7 = []byte{
	// 801 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xdb, 0x46,
	0x13, 0xfd, 0x48, 0xea, 0x77, 0xec, 0x7c, 0xde, 0x6c, 0xec, 0x82, 0x0d, 0xd2, 0x42, 0x15, 0x50,
	0x40, 0x17, 0x8d, 0x94, 0x06, 0x05, 0x8a, 0xfa, 0xaa, 0x34, 0xb9, 0x8a, 0x59, 0x53, 0xa4, 0xb0,
	0xa4, 0xdc, 0xa6, 0x37, 0x04, 0x2b, 0x8e, 0x25, 0x02, 0x2c, 0x57, 0x25, 0x97, 0x6e, 0xfd, 0x1a,
	0x7d, 0x8d, 0xbe, 0x4f, 0x9f, 0xa6, 0x17, 0xc5, 0x4a, 0x94, 0x12, 0x3b, 0x46, 0x80, 0x5e, 0x69,
	0xe6, 0xcc, 0xd9, 0xd9, 0xd1, 0x39, 0xc3, 0x85, 0xf5, 0x2a, 0x93, 0xeb, 0xfa, 0x97, 0xf1, 0x52,
	0xfc, 0x3a, 0xa9, 0x44, 0x2e, 0x5e, 0x66, 0x62, 0x52, 0xd5, 0x1b, 0x2c, 0x57, 0xb9, 0x10, 0x93,
	0x5b, 0x2c, 0x52, 0x51, 0x4e, 0x56, 0x42, 0xac, 0x72, 0x1c, 0xaf, 0x44, 0x9e, 0x14, 0xab, 0xb1,
	0x28, 0x57, 0x93, 0x64, 0xb3, 0xc1, 0x62, 0x95, 0x15, 0x38, 0xc9, 0x0a, 0x89, 0x65, 0x91, 0xe4,
	0x93, 0xba, 0xcc, 0x6f, 0x50, 0x2e, 0xd7, 0x87, 0x20, 0xae, 0xb0, 0xbc, 0xcd, 0x96, 0x38, 0xde,
	0x94, 0x42, 0x0a, 0xda, 0x3f, 0x9c, 0x19, 0xfe, 0xa5, 0xc3, 0xe9, 0x82, 0x7b, 0x53, 0xc5, 0x0a,
	0x77, 0x24, 0x56, 0x96, 0xa2, 0x1c, 0xfe, 0xa9, 0x43, 0x7f, 0x1b, 0xd9, 0x22, 0x45, 0xda, 0x01,
	0x3d, 0xb8, 0x22, 0xff, 0xa3, 0x27, 0x70, 0xe4, 0xfa, 0xd7, 0x96, 0xe7, 0x3a, 0xf1, 0x82, 0x7b,
	0x44, 0x53, 0xc0, 0x94, 0x45, 0xf6, 0x65, 0xcc, 0x38, 0x0f, 0x38, 0xd1, 0xe9, 0x19, 0x3c, 0x5d,
	0xf8, 0xe1, 0x9c, 0xd9, 0xee, 0xd4, 0x65, 0x4e, 0x03, 0x1b, 0xf4, 0x13, 0xa0, 0x9c, 0x85, 0xf3,
	0xc0, 0x0f, 0x59, 0x1c, 0x05, 0x41, 0xec, 0x59, 0xfc, 0x0d, 0x23, 0x2d, 0x45, 0x77, 0x98, 0xe5,
	0x78, 0xae, 0xcf, 0x62, 0xf6, 0x93, 0xcd, 0x98, 0xc3, 0x1c, 0xd2, 0xa6, 0x9f, 0xc2, 0x59, 0x18,
	0x7a, 0xb1, 0xcd, 0x78, 0xe4, 0x4e, 0x5d, 0xdb, 0x8a, 0x58, 0xd3, 0xa9, 0x43, 0x9f, 0x40, 0xdf,
	0xf1, 0xc3, 0x26, 0xed, 0x52, 0x80, 0x8e, 0xed, 0x05, 0x21, 0x73, 0x48, 0x8f, 0xbe, 0x00, 0xd3,
	0xf5, 0x23, 0xc6, 0x7d, 0xcb, 0x8b, 0x23, 0x6e, 0xf9, 0xa1, 0xcb, 0xfc, 0xa8, 0x61, 0xf6, 0xd5,
	0x08, 0xea, 0xe6, 0x99, 0xe5, 0xbf, 0x8d, 0x39, 0x73, 0x5c, 0xce, 0xec, 0x28, 0x24, 0x40, 0x9f,
	0xc1, 0xc9, 0xcc, 0xf2, 0xa6, 0x01, 0x9f, 0x31, 0x27, 0xe6, 0x6c, 0xee, 0xbd, 0x25, 0x47, 0xf4,
	0x14, 0x88, 0x1d, 0xf8, 0x3e, 0xb3, 0x23, 0x37, 0xf0, 0x9b, 0x16, 0xc7, 0xc3, 0xbf, 0x0d, 0x38,
	0xd9, 0xab, 0xc5, 0xf1, 0xb7, 0x1a, 0x2b, 0x49, 0xbf, 0x87, 0xce, 0x0c, 0xe5, 0x5a, 0xa4, 0xa6,
	0x36, 0xd0, 0x47, 0xff, 0x7f, 0x3d, 0x1a, 0x1f, 0xd4, 0x1d, 0x3f, 0xe0, 0x8e, 0x9b, 0xdf, 0x1d,
	0x9f, 0x37, 0xe7, 0x28, 0x01, 0x63, 0x51, 0xe6, 0xa6, 0x3e, 0xd0, 0x47, 0x7d, 0xae, 0x42, 0xfa,
	0x1d, 0x74, 0xd6, 0x98, 0xa4, 0x58, 0x9a, 0xc6, 0xc0, 0x18, 0xc1, 0xeb, 0x2f, 0x3e, 0xd2, 0xf3,
	0x72, 0x4b, 0xe4, 0xcd, 0x01, 0xfa, 0x02, 0xba, 0xf3, 0xe4, 0x2e, 0x17, 0x49, 0x6a, 0x76, 0x06,
	0xda, 0xe8, 0xf8, 0x42, 0xef, 0x69, 0x7c, 0x0f, 0xd1, 0x31, 0x9c, 0x4c, 0x45, 0x9e, 0x8b, 0xdf,
	0x39, 0xa6, 0x59, 0x89, 0x4b, 0x59, 0x99, 0xdd, 0x81, 0x36, 0xea, 0x9d, 0xb7, 0x64, 0x59, 0x23,
	0x7f, 0x58, 0xa4, 0xcf, 0xa1, 0xe7, 0x60, 0x92, 0xe6, 0x59, 0x81, 0x66, 0x6f, 0xa0, 0x8d, 0x34,
	0x7e, 0xc8, 0xe9, 0x0f, 0xf0, 0xd9, 0xac, 0xae, 0xe4, 0x75, 0x92, 0x67, 0x69, 0x22, 0x51, 0x6d,
	0x0f, 0x96, 0x36, 0x96, 0x32, 0xbb, 0xc9, 0x96, 0x89, 0x44, 0xb3, 0xff, 0x5e, 0xe7, 0x8f, 0x53,
	0x9f, 0xbf, 0x82, 0xce, 0xee, 0x7f, 0x28, 0x31, 0xae, 0xf0, 0xce, 0x6c, 0xed, 0xc4, 0xb8, 0xc2,
	0x3b, 0x7a, 0x0a, 0xed, 0xeb, 0x24, 0xaf, 0xd1, 0x6c, 0x6f, 0xb1, 0x5d, 0x32, 0xf4, 0xe0, 0xc9,
	0x3d, 0x35, 0x69, 0x17, 0x8c, 0x37, 0x2c, 0x22, 0x1a, 0xed, 0x41, 0x6b, 0x1e, 0x84, 0x11, 0xd1,
	0x55, 0x74, 0xc9, 0x2c, 0x87, 0x18, 0xaa, 0x38, 0x5f, 0x44, 0xa4, 0xa5, 0xd6, 0xc5, 0x61, 0x1e,
	0x8b, 0x18, 0x69, 0xd3, 0x3e, 0xb4, 0xe7, 0x56, 0x64, 0x5f, 0x92, 0xce, 0xf0, 0x1f, 0x03, 0xc8,
	0x3b, 0x61, 0xab, 0x8d, 0x28, 0x2a, 0xa4, 0x26, 0x74, 0x6d, 0x51, 0x48, 0x2c, 0xa4, 0xa9, 0x29,
	0x29, 0xf9, 0x3e, 0xa5, 0x9f, 0x03, 0x84, 0x32, 0x91, 0x75, 0xa5, 0x3e, 0x8e, 0xad, 0x71, 0x6d,
	0xfe, 0x1e, 0x42, 0xcf, 0x1f, 0xf8, 0x37, 0x7c, 0xd4, 0xbf, 0xdd, 0x35, 0x0f, 0x0d, 0xfc, 0x16,
	0x9e, 0x35, 0xd7, 0xfc, 0x98, 0x54, 0x51, 0x59, 0x17, 0x4a, 0xa0, 0x9d, 0x99, 0xbd, 0xf3, 0xf6,
	0x4d, 0x92, 0x57, 0xc8, 0x1f, 0x63, 0xd0, 0xaf, 0xe0, 0x29, 0xfb, 0x63, 0xf7, 0x02, 0x5c, 0xdc,
	0x49, 0xac, 0x42, 0x35, 0xb8, 0x72, 0xd7, 0xe0, 0x1f, 0x16, 0xe8, 0x37, 0x70, 0x76, 0x0f, 0xe4,
	0xb8, 0xc4, 0xec, 0x16, 0xd3, 0xad, 0xcd, 0x06, 0x7f, 0xbc, 0xa8, 0xf6, 0x61, 0x9a, 0x15, 0x49,
	0xae, 0xf6, 0x55, 0xd9, 0xdb, 0xe7, 0x87, 0x9c, 0x7e, 0x0d, 0xd4, 0xda, 0x64, 0xf6, 0xa6, 0x9e,
	0x65, 0x79, 0x9e, 0x55, 0xb8, 0x14, 0x45, 0x5a, 0x99, 0xa0, 0xda, 0x9d, 0x6b, 0xaf, 0xf8, 0x23,
	0x45, 0xfa, 0x25, 0x1c, 0x5b, 0x9b, 0xec, 0xdd, 0xb4, 0x47, 0x7b, 0xf2, 0x3d, 0x98, 0xbe, 0x04,
	0xb2, 0xcf, 0x0f, 0x63, 0x1e, 0xef, 0xa9, 0x1f, 0x94, 0xfe, 0xfb, 0x32, 0x5d, 0xc0, 0xcf, 0xbd,
	0xfd, 0x53, 0xf9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x53, 0x8b, 0xfb, 0xed, 0x87, 0x05, 0x00,
	0x00,
}
