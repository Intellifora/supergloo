// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/github.com/openshift/api/security/v1/generated.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "k8s.io/api/core/v1"
import v11 "k8s.io/apimachinery/pkg/apis/meta/v1"
import _ "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"
import _ "k8s.io/apimachinery/pkg/util/intstr"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
type AllowedFlexVolume struct {
	// Driver is the name of the Flexvolume driver.
	Driver               *string  `protobuf:"bytes,1,opt,name=driver" json:"driver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllowedFlexVolume) Reset()         { *m = AllowedFlexVolume{} }
func (m *AllowedFlexVolume) String() string { return proto.CompactTextString(m) }
func (*AllowedFlexVolume) ProtoMessage()    {}
func (*AllowedFlexVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{0}
}
func (m *AllowedFlexVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllowedFlexVolume.Unmarshal(m, b)
}
func (m *AllowedFlexVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllowedFlexVolume.Marshal(b, m, deterministic)
}
func (dst *AllowedFlexVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllowedFlexVolume.Merge(dst, src)
}
func (m *AllowedFlexVolume) XXX_Size() int {
	return xxx_messageInfo_AllowedFlexVolume.Size(m)
}
func (m *AllowedFlexVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_AllowedFlexVolume.DiscardUnknown(m)
}

var xxx_messageInfo_AllowedFlexVolume proto.InternalMessageInfo

func (m *AllowedFlexVolume) GetDriver() string {
	if m != nil && m.Driver != nil {
		return *m.Driver
	}
	return ""
}

// FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
type FSGroupStrategyOptions struct {
	// Type is the strategy that will dictate what FSGroup is used in the SecurityContext.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Ranges are the allowed ranges of fs groups.  If you would like to force a single
	// fs group then supply a single range with the same start and end.
	Ranges               []*IDRange `protobuf:"bytes,2,rep,name=ranges" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FSGroupStrategyOptions) Reset()         { *m = FSGroupStrategyOptions{} }
func (m *FSGroupStrategyOptions) String() string { return proto.CompactTextString(m) }
func (*FSGroupStrategyOptions) ProtoMessage()    {}
func (*FSGroupStrategyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{1}
}
func (m *FSGroupStrategyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FSGroupStrategyOptions.Unmarshal(m, b)
}
func (m *FSGroupStrategyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FSGroupStrategyOptions.Marshal(b, m, deterministic)
}
func (dst *FSGroupStrategyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FSGroupStrategyOptions.Merge(dst, src)
}
func (m *FSGroupStrategyOptions) XXX_Size() int {
	return xxx_messageInfo_FSGroupStrategyOptions.Size(m)
}
func (m *FSGroupStrategyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_FSGroupStrategyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_FSGroupStrategyOptions proto.InternalMessageInfo

func (m *FSGroupStrategyOptions) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *FSGroupStrategyOptions) GetRanges() []*IDRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

// IDRange provides a min/max of an allowed range of IDs.
// TODO: this could be reused for UIDs.
type IDRange struct {
	// Min is the start of the range, inclusive.
	Min *int64 `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	// Max is the end of the range, inclusive.
	Max                  *int64   `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDRange) Reset()         { *m = IDRange{} }
func (m *IDRange) String() string { return proto.CompactTextString(m) }
func (*IDRange) ProtoMessage()    {}
func (*IDRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{2}
}
func (m *IDRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDRange.Unmarshal(m, b)
}
func (m *IDRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDRange.Marshal(b, m, deterministic)
}
func (dst *IDRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDRange.Merge(dst, src)
}
func (m *IDRange) XXX_Size() int {
	return xxx_messageInfo_IDRange.Size(m)
}
func (m *IDRange) XXX_DiscardUnknown() {
	xxx_messageInfo_IDRange.DiscardUnknown(m)
}

var xxx_messageInfo_IDRange proto.InternalMessageInfo

func (m *IDRange) GetMin() int64 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *IDRange) GetMax() int64 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

// PodSecurityPolicyReview checks which service accounts (not users, since that would be cluster-wide) can create the `PodTemplateSpec` in question.
type PodSecurityPolicyReview struct {
	// spec is the PodSecurityPolicy to check.
	Spec *PodSecurityPolicyReviewSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	// status represents the current information/status for the PodSecurityPolicyReview.
	Status               *PodSecurityPolicyReviewStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *PodSecurityPolicyReview) Reset()         { *m = PodSecurityPolicyReview{} }
func (m *PodSecurityPolicyReview) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicyReview) ProtoMessage()    {}
func (*PodSecurityPolicyReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{3}
}
func (m *PodSecurityPolicyReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicyReview.Unmarshal(m, b)
}
func (m *PodSecurityPolicyReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicyReview.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicyReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicyReview.Merge(dst, src)
}
func (m *PodSecurityPolicyReview) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicyReview.Size(m)
}
func (m *PodSecurityPolicyReview) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicyReview.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicyReview proto.InternalMessageInfo

func (m *PodSecurityPolicyReview) GetSpec() *PodSecurityPolicyReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PodSecurityPolicyReview) GetStatus() *PodSecurityPolicyReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview
type PodSecurityPolicyReviewSpec struct {
	// template is the PodTemplateSpec to check. The template.spec.serviceAccountName field is used
	// if serviceAccountNames is empty, unless the template.spec.serviceAccountName is empty,
	// in which case "default" is used.
	// If serviceAccountNames is specified, template.spec.serviceAccountName is ignored.
	Template *v1.PodTemplateSpec `protobuf:"bytes,1,opt,name=template" json:"template,omitempty"`
	// serviceAccountNames is an optional set of ServiceAccounts to run the check with.
	// If serviceAccountNames is empty, the template.spec.serviceAccountName is used,
	// unless it's empty, in which case "default" is used instead.
	// If serviceAccountNames is specified, template.spec.serviceAccountName is ignored.
	ServiceAccountNames  []string `protobuf:"bytes,2,rep,name=serviceAccountNames" json:"serviceAccountNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSecurityPolicyReviewSpec) Reset()         { *m = PodSecurityPolicyReviewSpec{} }
func (m *PodSecurityPolicyReviewSpec) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicyReviewSpec) ProtoMessage()    {}
func (*PodSecurityPolicyReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{4}
}
func (m *PodSecurityPolicyReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicyReviewSpec.Unmarshal(m, b)
}
func (m *PodSecurityPolicyReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicyReviewSpec.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicyReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicyReviewSpec.Merge(dst, src)
}
func (m *PodSecurityPolicyReviewSpec) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicyReviewSpec.Size(m)
}
func (m *PodSecurityPolicyReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicyReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicyReviewSpec proto.InternalMessageInfo

func (m *PodSecurityPolicyReviewSpec) GetTemplate() *v1.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *PodSecurityPolicyReviewSpec) GetServiceAccountNames() []string {
	if m != nil {
		return m.ServiceAccountNames
	}
	return nil
}

// PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview.
type PodSecurityPolicyReviewStatus struct {
	// allowedServiceAccounts returns the list of service accounts in *this* namespace that have the power to create the PodTemplateSpec.
	AllowedServiceAccounts []*ServiceAccountPodSecurityPolicyReviewStatus `protobuf:"bytes,1,rep,name=allowedServiceAccounts" json:"allowedServiceAccounts,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                       `json:"-"`
	XXX_unrecognized       []byte                                         `json:"-"`
	XXX_sizecache          int32                                          `json:"-"`
}

func (m *PodSecurityPolicyReviewStatus) Reset()         { *m = PodSecurityPolicyReviewStatus{} }
func (m *PodSecurityPolicyReviewStatus) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicyReviewStatus) ProtoMessage()    {}
func (*PodSecurityPolicyReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{5}
}
func (m *PodSecurityPolicyReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicyReviewStatus.Unmarshal(m, b)
}
func (m *PodSecurityPolicyReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicyReviewStatus.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicyReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicyReviewStatus.Merge(dst, src)
}
func (m *PodSecurityPolicyReviewStatus) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicyReviewStatus.Size(m)
}
func (m *PodSecurityPolicyReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicyReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicyReviewStatus proto.InternalMessageInfo

func (m *PodSecurityPolicyReviewStatus) GetAllowedServiceAccounts() []*ServiceAccountPodSecurityPolicyReviewStatus {
	if m != nil {
		return m.AllowedServiceAccounts
	}
	return nil
}

// PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can create the PodTemplateSpec
type PodSecurityPolicySelfSubjectReview struct {
	// spec defines specification the PodSecurityPolicySelfSubjectReview.
	Spec *PodSecurityPolicySelfSubjectReviewSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	// status represents the current information/status for the PodSecurityPolicySelfSubjectReview.
	Status               *PodSecurityPolicySubjectReviewStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *PodSecurityPolicySelfSubjectReview) Reset()         { *m = PodSecurityPolicySelfSubjectReview{} }
func (m *PodSecurityPolicySelfSubjectReview) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicySelfSubjectReview) ProtoMessage()    {}
func (*PodSecurityPolicySelfSubjectReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{6}
}
func (m *PodSecurityPolicySelfSubjectReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReview.Unmarshal(m, b)
}
func (m *PodSecurityPolicySelfSubjectReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReview.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicySelfSubjectReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicySelfSubjectReview.Merge(dst, src)
}
func (m *PodSecurityPolicySelfSubjectReview) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReview.Size(m)
}
func (m *PodSecurityPolicySelfSubjectReview) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicySelfSubjectReview.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicySelfSubjectReview proto.InternalMessageInfo

func (m *PodSecurityPolicySelfSubjectReview) GetSpec() *PodSecurityPolicySelfSubjectReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PodSecurityPolicySelfSubjectReview) GetStatus() *PodSecurityPolicySubjectReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview.
type PodSecurityPolicySelfSubjectReviewSpec struct {
	// template is the PodTemplateSpec to check.
	Template             *v1.PodTemplateSpec `protobuf:"bytes,1,opt,name=template" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PodSecurityPolicySelfSubjectReviewSpec) Reset() {
	*m = PodSecurityPolicySelfSubjectReviewSpec{}
}
func (m *PodSecurityPolicySelfSubjectReviewSpec) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicySelfSubjectReviewSpec) ProtoMessage()    {}
func (*PodSecurityPolicySelfSubjectReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{7}
}
func (m *PodSecurityPolicySelfSubjectReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec.Unmarshal(m, b)
}
func (m *PodSecurityPolicySelfSubjectReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicySelfSubjectReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec.Merge(dst, src)
}
func (m *PodSecurityPolicySelfSubjectReviewSpec) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec.Size(m)
}
func (m *PodSecurityPolicySelfSubjectReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicySelfSubjectReviewSpec proto.InternalMessageInfo

func (m *PodSecurityPolicySelfSubjectReviewSpec) GetTemplate() *v1.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

// PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can create the PodTemplateSpec.
type PodSecurityPolicySubjectReview struct {
	// spec defines specification for the PodSecurityPolicySubjectReview.
	Spec *PodSecurityPolicySubjectReviewSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	// status represents the current information/status for the PodSecurityPolicySubjectReview.
	Status               *PodSecurityPolicySubjectReviewStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *PodSecurityPolicySubjectReview) Reset()         { *m = PodSecurityPolicySubjectReview{} }
func (m *PodSecurityPolicySubjectReview) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicySubjectReview) ProtoMessage()    {}
func (*PodSecurityPolicySubjectReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{8}
}
func (m *PodSecurityPolicySubjectReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicySubjectReview.Unmarshal(m, b)
}
func (m *PodSecurityPolicySubjectReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicySubjectReview.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicySubjectReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicySubjectReview.Merge(dst, src)
}
func (m *PodSecurityPolicySubjectReview) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicySubjectReview.Size(m)
}
func (m *PodSecurityPolicySubjectReview) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicySubjectReview.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicySubjectReview proto.InternalMessageInfo

func (m *PodSecurityPolicySubjectReview) GetSpec() *PodSecurityPolicySubjectReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PodSecurityPolicySubjectReview) GetStatus() *PodSecurityPolicySubjectReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview
type PodSecurityPolicySubjectReviewSpec struct {
	// template is the PodTemplateSpec to check. If template.spec.serviceAccountName is empty it will not be defaulted.
	// If its non-empty, it will be checked.
	Template *v1.PodTemplateSpec `protobuf:"bytes,1,opt,name=template" json:"template,omitempty"`
	// user is the user you're testing for.
	// If you specify "user" but not "group", then is it interpreted as "What if user were not a member of any groups.
	// If user and groups are empty, then the check is performed using *only* the serviceAccountName in the template.
	User *string `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	// groups is the groups you're testing for.
	Groups               []string `protobuf:"bytes,3,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSecurityPolicySubjectReviewSpec) Reset()         { *m = PodSecurityPolicySubjectReviewSpec{} }
func (m *PodSecurityPolicySubjectReviewSpec) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicySubjectReviewSpec) ProtoMessage()    {}
func (*PodSecurityPolicySubjectReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{9}
}
func (m *PodSecurityPolicySubjectReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewSpec.Unmarshal(m, b)
}
func (m *PodSecurityPolicySubjectReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewSpec.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicySubjectReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicySubjectReviewSpec.Merge(dst, src)
}
func (m *PodSecurityPolicySubjectReviewSpec) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewSpec.Size(m)
}
func (m *PodSecurityPolicySubjectReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicySubjectReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicySubjectReviewSpec proto.InternalMessageInfo

func (m *PodSecurityPolicySubjectReviewSpec) GetTemplate() *v1.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *PodSecurityPolicySubjectReviewSpec) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *PodSecurityPolicySubjectReviewSpec) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

// PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview.
type PodSecurityPolicySubjectReviewStatus struct {
	// allowedBy is a reference to the rule that allows the PodTemplateSpec.
	// A rule can be a SecurityContextConstraint or a PodSecurityPolicy
	// A `nil`, indicates that it was denied.
	AllowedBy *v1.ObjectReference `protobuf:"bytes,1,opt,name=allowedBy" json:"allowedBy,omitempty"`
	// A machine-readable description of why this operation is in the
	// "Failure" status. If this value is empty there
	// is no information available.
	Reason *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	// template is the PodTemplateSpec after the defaulting is applied.
	Template             *v1.PodTemplateSpec `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PodSecurityPolicySubjectReviewStatus) Reset()         { *m = PodSecurityPolicySubjectReviewStatus{} }
func (m *PodSecurityPolicySubjectReviewStatus) String() string { return proto.CompactTextString(m) }
func (*PodSecurityPolicySubjectReviewStatus) ProtoMessage()    {}
func (*PodSecurityPolicySubjectReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{10}
}
func (m *PodSecurityPolicySubjectReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewStatus.Unmarshal(m, b)
}
func (m *PodSecurityPolicySubjectReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewStatus.Marshal(b, m, deterministic)
}
func (dst *PodSecurityPolicySubjectReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicySubjectReviewStatus.Merge(dst, src)
}
func (m *PodSecurityPolicySubjectReviewStatus) XXX_Size() int {
	return xxx_messageInfo_PodSecurityPolicySubjectReviewStatus.Size(m)
}
func (m *PodSecurityPolicySubjectReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicySubjectReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicySubjectReviewStatus proto.InternalMessageInfo

func (m *PodSecurityPolicySubjectReviewStatus) GetAllowedBy() *v1.ObjectReference {
	if m != nil {
		return m.AllowedBy
	}
	return nil
}

func (m *PodSecurityPolicySubjectReviewStatus) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *PodSecurityPolicySubjectReviewStatus) GetTemplate() *v1.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

// RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
type RunAsUserStrategyOptions struct {
	// Type is the strategy that will dictate what RunAsUser is used in the SecurityContext.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using
	// namespace/service account allocated uids.
	Uid *int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	// UIDRangeMin defines the min value for a strategy that allocates by range.
	UidRangeMin *int64 `protobuf:"varint,3,opt,name=uidRangeMin" json:"uidRangeMin,omitempty"`
	// UIDRangeMax defines the max value for a strategy that allocates by range.
	UidRangeMax          *int64   `protobuf:"varint,4,opt,name=uidRangeMax" json:"uidRangeMax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunAsUserStrategyOptions) Reset()         { *m = RunAsUserStrategyOptions{} }
func (m *RunAsUserStrategyOptions) String() string { return proto.CompactTextString(m) }
func (*RunAsUserStrategyOptions) ProtoMessage()    {}
func (*RunAsUserStrategyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{11}
}
func (m *RunAsUserStrategyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunAsUserStrategyOptions.Unmarshal(m, b)
}
func (m *RunAsUserStrategyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunAsUserStrategyOptions.Marshal(b, m, deterministic)
}
func (dst *RunAsUserStrategyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunAsUserStrategyOptions.Merge(dst, src)
}
func (m *RunAsUserStrategyOptions) XXX_Size() int {
	return xxx_messageInfo_RunAsUserStrategyOptions.Size(m)
}
func (m *RunAsUserStrategyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RunAsUserStrategyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RunAsUserStrategyOptions proto.InternalMessageInfo

func (m *RunAsUserStrategyOptions) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RunAsUserStrategyOptions) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *RunAsUserStrategyOptions) GetUidRangeMin() int64 {
	if m != nil && m.UidRangeMin != nil {
		return *m.UidRangeMin
	}
	return 0
}

func (m *RunAsUserStrategyOptions) GetUidRangeMax() int64 {
	if m != nil && m.UidRangeMax != nil {
		return *m.UidRangeMax
	}
	return 0
}

// SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy.
type SELinuxContextStrategyOptions struct {
	// Type is the strategy that will dictate what SELinux context is used in the SecurityContext.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// seLinuxOptions required to run as; required for MustRunAs
	SeLinuxOptions       *v1.SELinuxOptions `protobuf:"bytes,2,opt,name=seLinuxOptions" json:"seLinuxOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SELinuxContextStrategyOptions) Reset()         { *m = SELinuxContextStrategyOptions{} }
func (m *SELinuxContextStrategyOptions) String() string { return proto.CompactTextString(m) }
func (*SELinuxContextStrategyOptions) ProtoMessage()    {}
func (*SELinuxContextStrategyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{12}
}
func (m *SELinuxContextStrategyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SELinuxContextStrategyOptions.Unmarshal(m, b)
}
func (m *SELinuxContextStrategyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SELinuxContextStrategyOptions.Marshal(b, m, deterministic)
}
func (dst *SELinuxContextStrategyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SELinuxContextStrategyOptions.Merge(dst, src)
}
func (m *SELinuxContextStrategyOptions) XXX_Size() int {
	return xxx_messageInfo_SELinuxContextStrategyOptions.Size(m)
}
func (m *SELinuxContextStrategyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SELinuxContextStrategyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SELinuxContextStrategyOptions proto.InternalMessageInfo

func (m *SELinuxContextStrategyOptions) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *SELinuxContextStrategyOptions) GetSeLinuxOptions() *v1.SELinuxOptions {
	if m != nil {
		return m.SeLinuxOptions
	}
	return nil
}

// SecurityContextConstraints governs the ability to make requests that affect the SecurityContext
// that will be applied to a container.
// For historical reasons SCC was exposed under the core Kubernetes API group.
// That exposure is deprecated and will be removed in a future release - users
// should instead use the security.openshift.io group to manage
// SecurityContextConstraints.
type SecurityContextConstraints struct {
	// Standard object's metadata.
	// More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
	Metadata *v11.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Priority influences the sort order of SCCs when evaluating which SCCs to try first for
	// a given pod request based on access in the Users and Groups fields.  The higher the int, the
	// higher priority. An unset value is considered a 0 priority. If scores
	// for multiple SCCs are equal they will be sorted from most restrictive to
	// least restrictive. If both priorities and restrictions are equal the
	// SCCs will be sorted by name.
	Priority *int32 `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	// AllowPrivilegedContainer determines if a container can request to be run as privileged.
	AllowPrivilegedContainer *bool `protobuf:"varint,3,opt,name=allowPrivilegedContainer" json:"allowPrivilegedContainer,omitempty"`
	// DefaultAddCapabilities is the default set of capabilities that will be added to the container
	// unless the pod spec specifically drops the capability.  You may not list a capabiility in both
	// DefaultAddCapabilities and RequiredDropCapabilities.
	DefaultAddCapabilities []string `protobuf:"bytes,4,rep,name=defaultAddCapabilities" json:"defaultAddCapabilities,omitempty"`
	// RequiredDropCapabilities are the capabilities that will be dropped from the container.  These
	// are required to be dropped and cannot be added.
	RequiredDropCapabilities []string `protobuf:"bytes,5,rep,name=requiredDropCapabilities" json:"requiredDropCapabilities,omitempty"`
	// AllowedCapabilities is a list of capabilities that can be requested to add to the container.
	// Capabilities in this field maybe added at the pod author's discretion.
	// You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.
	// To allow all capabilities you may use '*'.
	AllowedCapabilities []string `protobuf:"bytes,6,rep,name=allowedCapabilities" json:"allowedCapabilities,omitempty"`
	// AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
	// +k8s:conversion-gen=false
	AllowHostDirVolumePlugin *bool `protobuf:"varint,7,opt,name=allowHostDirVolumePlugin" json:"allowHostDirVolumePlugin,omitempty"`
	// Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names
	// of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use "*".
	// To allow no volumes, set to ["none"].
	Volumes []string `protobuf:"bytes,8,rep,name=volumes" json:"volumes,omitempty"`
	// AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all
	// Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes
	// is allowed in the "Volumes" field.
	AllowedFlexVolumes []*AllowedFlexVolume `protobuf:"bytes,21,rep,name=allowedFlexVolumes" json:"allowedFlexVolumes,omitempty"`
	// AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	AllowHostNetwork *bool `protobuf:"varint,9,opt,name=allowHostNetwork" json:"allowHostNetwork,omitempty"`
	// AllowHostPorts determines if the policy allows host ports in the containers.
	AllowHostPorts *bool `protobuf:"varint,10,opt,name=allowHostPorts" json:"allowHostPorts,omitempty"`
	// AllowHostPID determines if the policy allows host pid in the containers.
	AllowHostPID *bool `protobuf:"varint,11,opt,name=allowHostPID" json:"allowHostPID,omitempty"`
	// AllowHostIPC determines if the policy allows host ipc in the containers.
	AllowHostIPC *bool `protobuf:"varint,12,opt,name=allowHostIPC" json:"allowHostIPC,omitempty"`
	// SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.
	SeLinuxContext *SELinuxContextStrategyOptions `protobuf:"bytes,13,opt,name=seLinuxContext" json:"seLinuxContext,omitempty"`
	// RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.
	RunAsUser *RunAsUserStrategyOptions `protobuf:"bytes,14,opt,name=runAsUser" json:"runAsUser,omitempty"`
	// SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
	SupplementalGroups *SupplementalGroupsStrategyOptions `protobuf:"bytes,15,opt,name=supplementalGroups" json:"supplementalGroups,omitempty"`
	// FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
	FsGroup *FSGroupStrategyOptions `protobuf:"bytes,16,opt,name=fsGroup" json:"fsGroup,omitempty"`
	// ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file
	// system.  If the container specifically requests to run with a non-read only root file system
	// the SCC should deny the pod.
	// If set to false the container may run with a read only root file system if it wishes but it
	// will not be forced to.
	ReadOnlyRootFilesystem *bool `protobuf:"varint,17,opt,name=readOnlyRootFilesystem" json:"readOnlyRootFilesystem,omitempty"`
	// The users who have permissions to use this security context constraints
	// +optional
	Users []string `protobuf:"bytes,18,rep,name=users" json:"users,omitempty"`
	// The groups that have permission to use this security context constraints
	// +optional
	Groups []string `protobuf:"bytes,19,rep,name=groups" json:"groups,omitempty"`
	// SeccompProfiles lists the allowed profiles that may be set for the pod or
	// container's seccomp annotations.  An unset (nil) or empty value means that no profiles may
	// be specifid by the pod or container.	The wildcard '*' may be used to allow all profiles.  When
	// used to generate a value for a pod the first non-wildcard profile will be used as
	// the default.
	SeccompProfiles      []string `protobuf:"bytes,20,rep,name=seccompProfiles" json:"seccompProfiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityContextConstraints) Reset()         { *m = SecurityContextConstraints{} }
func (m *SecurityContextConstraints) String() string { return proto.CompactTextString(m) }
func (*SecurityContextConstraints) ProtoMessage()    {}
func (*SecurityContextConstraints) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{13}
}
func (m *SecurityContextConstraints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityContextConstraints.Unmarshal(m, b)
}
func (m *SecurityContextConstraints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityContextConstraints.Marshal(b, m, deterministic)
}
func (dst *SecurityContextConstraints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityContextConstraints.Merge(dst, src)
}
func (m *SecurityContextConstraints) XXX_Size() int {
	return xxx_messageInfo_SecurityContextConstraints.Size(m)
}
func (m *SecurityContextConstraints) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityContextConstraints.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityContextConstraints proto.InternalMessageInfo

func (m *SecurityContextConstraints) GetMetadata() *v11.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SecurityContextConstraints) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *SecurityContextConstraints) GetAllowPrivilegedContainer() bool {
	if m != nil && m.AllowPrivilegedContainer != nil {
		return *m.AllowPrivilegedContainer
	}
	return false
}

func (m *SecurityContextConstraints) GetDefaultAddCapabilities() []string {
	if m != nil {
		return m.DefaultAddCapabilities
	}
	return nil
}

func (m *SecurityContextConstraints) GetRequiredDropCapabilities() []string {
	if m != nil {
		return m.RequiredDropCapabilities
	}
	return nil
}

func (m *SecurityContextConstraints) GetAllowedCapabilities() []string {
	if m != nil {
		return m.AllowedCapabilities
	}
	return nil
}

func (m *SecurityContextConstraints) GetAllowHostDirVolumePlugin() bool {
	if m != nil && m.AllowHostDirVolumePlugin != nil {
		return *m.AllowHostDirVolumePlugin
	}
	return false
}

func (m *SecurityContextConstraints) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *SecurityContextConstraints) GetAllowedFlexVolumes() []*AllowedFlexVolume {
	if m != nil {
		return m.AllowedFlexVolumes
	}
	return nil
}

func (m *SecurityContextConstraints) GetAllowHostNetwork() bool {
	if m != nil && m.AllowHostNetwork != nil {
		return *m.AllowHostNetwork
	}
	return false
}

func (m *SecurityContextConstraints) GetAllowHostPorts() bool {
	if m != nil && m.AllowHostPorts != nil {
		return *m.AllowHostPorts
	}
	return false
}

func (m *SecurityContextConstraints) GetAllowHostPID() bool {
	if m != nil && m.AllowHostPID != nil {
		return *m.AllowHostPID
	}
	return false
}

func (m *SecurityContextConstraints) GetAllowHostIPC() bool {
	if m != nil && m.AllowHostIPC != nil {
		return *m.AllowHostIPC
	}
	return false
}

func (m *SecurityContextConstraints) GetSeLinuxContext() *SELinuxContextStrategyOptions {
	if m != nil {
		return m.SeLinuxContext
	}
	return nil
}

func (m *SecurityContextConstraints) GetRunAsUser() *RunAsUserStrategyOptions {
	if m != nil {
		return m.RunAsUser
	}
	return nil
}

func (m *SecurityContextConstraints) GetSupplementalGroups() *SupplementalGroupsStrategyOptions {
	if m != nil {
		return m.SupplementalGroups
	}
	return nil
}

func (m *SecurityContextConstraints) GetFsGroup() *FSGroupStrategyOptions {
	if m != nil {
		return m.FsGroup
	}
	return nil
}

func (m *SecurityContextConstraints) GetReadOnlyRootFilesystem() bool {
	if m != nil && m.ReadOnlyRootFilesystem != nil {
		return *m.ReadOnlyRootFilesystem
	}
	return false
}

func (m *SecurityContextConstraints) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *SecurityContextConstraints) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *SecurityContextConstraints) GetSeccompProfiles() []string {
	if m != nil {
		return m.SeccompProfiles
	}
	return nil
}

// SecurityContextConstraintsList is a list of SecurityContextConstraints objects
type SecurityContextConstraintsList struct {
	// More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
	Metadata *v11.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of security context constraints.
	Items                []*SecurityContextConstraints `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SecurityContextConstraintsList) Reset()         { *m = SecurityContextConstraintsList{} }
func (m *SecurityContextConstraintsList) String() string { return proto.CompactTextString(m) }
func (*SecurityContextConstraintsList) ProtoMessage()    {}
func (*SecurityContextConstraintsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{14}
}
func (m *SecurityContextConstraintsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityContextConstraintsList.Unmarshal(m, b)
}
func (m *SecurityContextConstraintsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityContextConstraintsList.Marshal(b, m, deterministic)
}
func (dst *SecurityContextConstraintsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityContextConstraintsList.Merge(dst, src)
}
func (m *SecurityContextConstraintsList) XXX_Size() int {
	return xxx_messageInfo_SecurityContextConstraintsList.Size(m)
}
func (m *SecurityContextConstraintsList) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityContextConstraintsList.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityContextConstraintsList proto.InternalMessageInfo

func (m *SecurityContextConstraintsList) GetMetadata() *v11.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SecurityContextConstraintsList) GetItems() []*SecurityContextConstraints {
	if m != nil {
		return m.Items
	}
	return nil
}

// ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name and related review status
type ServiceAccountPodSecurityPolicyReviewStatus struct {
	PodSecurityPolicySubjectReviewStatus *PodSecurityPolicySubjectReviewStatus `protobuf:"bytes,1,opt,name=podSecurityPolicySubjectReviewStatus" json:"podSecurityPolicySubjectReviewStatus,omitempty"`
	// name contains the allowed and the denied ServiceAccount name
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAccountPodSecurityPolicyReviewStatus) Reset() {
	*m = ServiceAccountPodSecurityPolicyReviewStatus{}
}
func (m *ServiceAccountPodSecurityPolicyReviewStatus) String() string {
	return proto.CompactTextString(m)
}
func (*ServiceAccountPodSecurityPolicyReviewStatus) ProtoMessage() {}
func (*ServiceAccountPodSecurityPolicyReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{15}
}
func (m *ServiceAccountPodSecurityPolicyReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus.Unmarshal(m, b)
}
func (m *ServiceAccountPodSecurityPolicyReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus.Marshal(b, m, deterministic)
}
func (dst *ServiceAccountPodSecurityPolicyReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus.Merge(dst, src)
}
func (m *ServiceAccountPodSecurityPolicyReviewStatus) XXX_Size() int {
	return xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus.Size(m)
}
func (m *ServiceAccountPodSecurityPolicyReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccountPodSecurityPolicyReviewStatus proto.InternalMessageInfo

func (m *ServiceAccountPodSecurityPolicyReviewStatus) GetPodSecurityPolicySubjectReviewStatus() *PodSecurityPolicySubjectReviewStatus {
	if m != nil {
		return m.PodSecurityPolicySubjectReviewStatus
	}
	return nil
}

func (m *ServiceAccountPodSecurityPolicyReviewStatus) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.
type SupplementalGroupsStrategyOptions struct {
	// Type is the strategy that will dictate what supplemental groups is used in the SecurityContext.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Ranges are the allowed ranges of supplemental groups.  If you would like to force a single
	// supplemental group then supply a single range with the same start and end.
	Ranges               []*IDRange `protobuf:"bytes,2,rep,name=ranges" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SupplementalGroupsStrategyOptions) Reset()         { *m = SupplementalGroupsStrategyOptions{} }
func (m *SupplementalGroupsStrategyOptions) String() string { return proto.CompactTextString(m) }
func (*SupplementalGroupsStrategyOptions) ProtoMessage()    {}
func (*SupplementalGroupsStrategyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_c98ff0b66c4fd934, []int{16}
}
func (m *SupplementalGroupsStrategyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplementalGroupsStrategyOptions.Unmarshal(m, b)
}
func (m *SupplementalGroupsStrategyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplementalGroupsStrategyOptions.Marshal(b, m, deterministic)
}
func (dst *SupplementalGroupsStrategyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplementalGroupsStrategyOptions.Merge(dst, src)
}
func (m *SupplementalGroupsStrategyOptions) XXX_Size() int {
	return xxx_messageInfo_SupplementalGroupsStrategyOptions.Size(m)
}
func (m *SupplementalGroupsStrategyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplementalGroupsStrategyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SupplementalGroupsStrategyOptions proto.InternalMessageInfo

func (m *SupplementalGroupsStrategyOptions) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *SupplementalGroupsStrategyOptions) GetRanges() []*IDRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

func init() {
	proto.RegisterType((*AllowedFlexVolume)(nil), "github.com.openshift.api.security.v1.AllowedFlexVolume")
	proto.RegisterType((*FSGroupStrategyOptions)(nil), "github.com.openshift.api.security.v1.FSGroupStrategyOptions")
	proto.RegisterType((*IDRange)(nil), "github.com.openshift.api.security.v1.IDRange")
	proto.RegisterType((*PodSecurityPolicyReview)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicyReview")
	proto.RegisterType((*PodSecurityPolicyReviewSpec)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicyReviewSpec")
	proto.RegisterType((*PodSecurityPolicyReviewStatus)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicyReviewStatus")
	proto.RegisterType((*PodSecurityPolicySelfSubjectReview)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicySelfSubjectReview")
	proto.RegisterType((*PodSecurityPolicySelfSubjectReviewSpec)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicySelfSubjectReviewSpec")
	proto.RegisterType((*PodSecurityPolicySubjectReview)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicySubjectReview")
	proto.RegisterType((*PodSecurityPolicySubjectReviewSpec)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicySubjectReviewSpec")
	proto.RegisterType((*PodSecurityPolicySubjectReviewStatus)(nil), "github.com.openshift.api.security.v1.PodSecurityPolicySubjectReviewStatus")
	proto.RegisterType((*RunAsUserStrategyOptions)(nil), "github.com.openshift.api.security.v1.RunAsUserStrategyOptions")
	proto.RegisterType((*SELinuxContextStrategyOptions)(nil), "github.com.openshift.api.security.v1.SELinuxContextStrategyOptions")
	proto.RegisterType((*SecurityContextConstraints)(nil), "github.com.openshift.api.security.v1.SecurityContextConstraints")
	proto.RegisterType((*SecurityContextConstraintsList)(nil), "github.com.openshift.api.security.v1.SecurityContextConstraintsList")
	proto.RegisterType((*ServiceAccountPodSecurityPolicyReviewStatus)(nil), "github.com.openshift.api.security.v1.ServiceAccountPodSecurityPolicyReviewStatus")
	proto.RegisterType((*SupplementalGroupsStrategyOptions)(nil), "github.com.openshift.api.security.v1.SupplementalGroupsStrategyOptions")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/github.com/openshift/api/security/v1/generated.proto", fileDescriptor_generated_c98ff0b66c4fd934)
}

var fileDescriptor_generated_c98ff0b66c4fd934 = []byte{
	// 1192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x72, 0xdc, 0xc4,
	0x13, 0x2f, 0x65, 0xfd, 0xb5, 0xe3, 0xfc, 0x13, 0x67, 0x92, 0xbf, 0x51, 0x99, 0x4a, 0x2a, 0x08,
	0x57, 0xca, 0x45, 0xca, 0x52, 0x6c, 0xa8, 0x40, 0x51, 0x14, 0xb0, 0x59, 0xc7, 0x8e, 0x5d, 0x4e,
	0xbc, 0x68, 0x89, 0x8b, 0x82, 0x1c, 0x18, 0x4b, 0xbd, 0xeb, 0xc1, 0x92, 0x46, 0xcc, 0x8c, 0xd6,
	0xbb, 0x17, 0xb8, 0x70, 0xe1, 0x06, 0x2f, 0xc0, 0x0b, 0xf0, 0x16, 0x14, 0x57, 0x5e, 0x82, 0x23,
	0x17, 0x5e, 0x81, 0x9a, 0xd9, 0xd9, 0x0f, 0xed, 0x57, 0x14, 0xc7, 0x70, 0xd3, 0xf4, 0xf4, 0xef,
	0xd7, 0xdd, 0x33, 0x3d, 0xdd, 0x2d, 0xf4, 0x45, 0x93, 0xca, 0xd3, 0xec, 0xc4, 0x0d, 0x58, 0xec,
	0x09, 0x16, 0xb1, 0x4d, 0xca, 0x3c, 0x91, 0xa5, 0xc0, 0x9b, 0x11, 0x63, 0x5e, 0x0b, 0x92, 0x90,
	0x71, 0x6f, 0x48, 0x87, 0xa5, 0x90, 0x88, 0x53, 0xda, 0x90, 0x1e, 0x49, 0xa9, 0x27, 0x20, 0xc8,
	0x38, 0x95, 0x1d, 0xaf, 0xb5, 0xe5, 0x35, 0x21, 0x01, 0x4e, 0x24, 0x84, 0x6e, 0xca, 0x99, 0x64,
	0x78, 0x7d, 0x80, 0x72, 0xfb, 0x28, 0x97, 0xa4, 0xd4, 0xed, 0xa1, 0xdc, 0xd6, 0xd6, 0x9a, 0x73,
	0xf6, 0x81, 0x70, 0x29, 0xd3, 0x6c, 0x01, 0xe3, 0x30, 0x81, 0x69, 0xed, 0xbd, 0x81, 0x4e, 0x4c,
	0x82, 0x53, 0x9a, 0x00, 0xef, 0x78, 0xe9, 0x59, 0x53, 0x09, 0x84, 0x17, 0x83, 0x24, 0x93, 0x50,
	0xde, 0x34, 0x14, 0xcf, 0x12, 0x49, 0x63, 0x18, 0x03, 0x3c, 0x7c, 0x19, 0x40, 0x04, 0xa7, 0x10,
	0x93, 0x31, 0xdc, 0xbb, 0xd3, 0x70, 0x99, 0xa4, 0x91, 0x47, 0x13, 0x29, 0x24, 0x1f, 0x05, 0x39,
	0xf7, 0xd1, 0x8d, 0x4a, 0x14, 0xb1, 0x73, 0x08, 0x77, 0x23, 0x68, 0x1f, 0xb3, 0x28, 0x8b, 0x01,
	0xaf, 0xa2, 0x85, 0x90, 0xd3, 0x16, 0x70, 0xdb, 0xba, 0x6b, 0x6d, 0x94, 0x7d, 0xb3, 0x72, 0x04,
	0x5a, 0xdd, 0xad, 0xef, 0x71, 0x96, 0xa5, 0x75, 0xa9, 0x48, 0x9a, 0x9d, 0xa3, 0x54, 0x52, 0x96,
	0x08, 0x8c, 0xd1, 0x9c, 0xec, 0xa4, 0x60, 0xf4, 0xf5, 0x37, 0x7e, 0x8c, 0x16, 0x38, 0x49, 0x9a,
	0x20, 0xec, 0x2b, 0x77, 0x4b, 0x1b, 0xcb, 0xdb, 0x9b, 0x6e, 0x91, 0x9b, 0x70, 0xf7, 0x77, 0x7c,
	0x85, 0xf2, 0x0d, 0xd8, 0xd9, 0x44, 0x8b, 0x46, 0x84, 0x57, 0x50, 0x29, 0xa6, 0x89, 0x36, 0x52,
	0xf2, 0xd5, 0xa7, 0x96, 0x90, 0xb6, 0x7d, 0xc5, 0x48, 0x48, 0xdb, 0xf9, 0xc3, 0x42, 0x6f, 0xd4,
	0x58, 0x58, 0x37, 0x8c, 0x35, 0x16, 0xd1, 0xa0, 0xe3, 0x43, 0x8b, 0xc2, 0x39, 0x7e, 0x8e, 0xe6,
	0x44, 0x0a, 0x81, 0x26, 0x58, 0xde, 0xae, 0x14, 0xf3, 0x67, 0x0a, 0x59, 0x3d, 0x85, 0xc0, 0xd7,
	0x74, 0xf8, 0x2b, 0xb4, 0x20, 0x24, 0x91, 0x99, 0xd0, 0x7e, 0x2c, 0x6f, 0x57, 0x5f, 0x8f, 0x58,
	0x53, 0xf9, 0x86, 0xd2, 0xf9, 0xc9, 0x42, 0x6f, 0xce, 0x70, 0x01, 0x7f, 0x82, 0x96, 0x24, 0xc4,
	0x69, 0x44, 0x24, 0x98, 0xb8, 0xde, 0x76, 0xbb, 0x89, 0xa0, 0x0d, 0xaa, 0x5c, 0x36, 0xc6, 0x3e,
	0x37, 0x6a, 0xda, 0xf3, 0x3e, 0x08, 0x3f, 0x40, 0x37, 0x05, 0xf0, 0x16, 0x0d, 0xa0, 0x12, 0x04,
	0x2c, 0x4b, 0xe4, 0x33, 0x12, 0x9b, 0x3b, 0x2b, 0xfb, 0x93, 0xb6, 0x9c, 0x5f, 0x2d, 0x74, 0x7b,
	0xa6, 0xf3, 0xf8, 0x47, 0x0b, 0xad, 0x92, 0x6e, 0x5a, 0xd5, 0x73, 0x04, 0xc2, 0xb6, 0x74, 0x2e,
	0x7c, 0x56, 0xec, 0x88, 0xf2, 0xe0, 0xd9, 0x07, 0x36, 0xc5, 0xa0, 0xf3, 0x97, 0x85, 0x9c, 0x31,
	0x64, 0x1d, 0xa2, 0x46, 0x3d, 0x3b, 0xf9, 0x06, 0x02, 0x69, 0x72, 0xe3, 0xeb, 0x5c, 0x6e, 0x1c,
	0x5e, 0xf0, 0x0a, 0xc7, 0x78, 0x87, 0xd2, 0xe4, 0x64, 0x24, 0x4d, 0x0e, 0x2e, 0x6a, 0x23, 0xc7,
	0x9f, 0xcf, 0x16, 0x8a, 0xee, 0x15, 0xf3, 0xe9, 0xb5, 0xf3, 0xc6, 0xf9, 0xd3, 0x42, 0x77, 0x66,
	0xfb, 0x86, 0x5f, 0xe4, 0xce, 0xf4, 0xc9, 0xa5, 0xc4, 0xfb, 0xdf, 0x9e, 0xe7, 0xcf, 0x13, 0x93,
	0xe7, 0xd2, 0x0f, 0x53, 0xd5, 0xcf, 0x4c, 0x00, 0xd7, 0x91, 0x94, 0x7d, 0xfd, 0xad, 0xaa, 0x70,
	0x53, 0xd5, 0x5a, 0x61, 0x97, 0xf4, 0x5b, 0x34, 0x2b, 0xe7, 0x37, 0x0b, 0xad, 0x17, 0x09, 0x02,
	0x57, 0x50, 0xd9, 0xbc, 0x89, 0x47, 0x9d, 0x59, 0x6e, 0x1d, 0x19, 0x68, 0x03, 0x38, 0x24, 0x01,
	0xf8, 0x03, 0x94, 0xf2, 0x81, 0x03, 0x11, 0x2c, 0x31, 0x9e, 0x99, 0x55, 0x2e, 0xe0, 0xd2, 0x45,
	0xb2, 0xe7, 0x07, 0x0b, 0xd9, 0x7e, 0x96, 0x54, 0xc4, 0x73, 0x01, 0xbc, 0x48, 0x37, 0x59, 0x41,
	0xa5, 0x8c, 0x86, 0xbd, 0x4a, 0x9f, 0xd1, 0x10, 0xdf, 0x45, 0xcb, 0x19, 0x0d, 0x75, 0x67, 0x78,
	0x4a, 0x13, 0xed, 0x46, 0xc9, 0x1f, 0x16, 0xe5, 0x34, 0x48, 0xdb, 0x9e, 0x1b, 0xd1, 0x20, 0x6d,
	0xe7, 0x7b, 0x74, 0xbb, 0xfe, 0xf8, 0x90, 0x26, 0x59, 0xbb, 0xca, 0x12, 0x09, 0x6d, 0x59, 0xc4,
	0x95, 0x03, 0x74, 0x4d, 0x80, 0x06, 0x19, 0x2d, 0x93, 0x80, 0xce, 0xa4, 0x23, 0x30, 0xf4, 0x46,
	0xd3, 0x1f, 0x41, 0x3a, 0x7f, 0x97, 0xd1, 0x5a, 0xef, 0x26, 0x8d, 0x0b, 0x55, 0x96, 0x08, 0xc9,
	0x89, 0x6a, 0xd8, 0xf8, 0x10, 0x2d, 0xa9, 0xb9, 0x22, 0x24, 0x92, 0x98, 0x1b, 0x7c, 0x30, 0x64,
	0xa4, 0xdf, 0xe6, 0xdd, 0xf4, 0xac, 0xa9, 0x04, 0xc2, 0x55, 0xda, 0x83, 0x3b, 0x7d, 0x0a, 0x92,
	0xf8, 0x7d, 0x06, 0xbc, 0x86, 0x96, 0x52, 0x4e, 0x99, 0xb2, 0xa5, 0x5d, 0x9e, 0xf7, 0xfb, 0x6b,
	0xfc, 0x21, 0xb2, 0xf5, 0xb5, 0xd7, 0x38, 0x6d, 0xd1, 0x08, 0x9a, 0x10, 0x2a, 0x77, 0x88, 0xa2,
	0xd7, 0x47, 0xbb, 0xe4, 0x4f, 0xdd, 0xc7, 0x0f, 0xd1, 0x6a, 0x08, 0x0d, 0x92, 0x45, 0xb2, 0x12,
	0x86, 0x55, 0x92, 0x92, 0x13, 0x1a, 0x51, 0x49, 0x41, 0xd8, 0x73, 0x3a, 0x73, 0xa7, 0xec, 0x2a,
	0x9b, 0x1c, 0xbe, 0xcd, 0x28, 0x87, 0x70, 0x87, 0xb3, 0x34, 0x87, 0x9c, 0xd7, 0xc8, 0xa9, 0xfb,
	0xaa, 0x6d, 0x99, 0x34, 0xcd, 0xc1, 0x16, 0xba, 0x6d, 0x6b, 0xc2, 0x56, 0x3f, 0xc2, 0x27, 0x4c,
	0xc8, 0x1d, 0xca, 0xbb, 0xb3, 0x4e, 0x2d, 0xca, 0x9a, 0x34, 0xb1, 0x17, 0x87, 0x22, 0x9c, 0xb0,
	0x8f, 0x6d, 0xb4, 0xd8, 0xd2, 0x6b, 0x61, 0x2f, 0x69, 0x0b, 0xbd, 0x25, 0x6e, 0x22, 0x4c, 0x46,
	0x07, 0x28, 0x61, 0xff, 0x5f, 0x77, 0xb9, 0xf7, 0x8b, 0x55, 0xa4, 0xb1, 0x01, 0xcc, 0x9f, 0x40,
	0x89, 0xdf, 0x41, 0x2b, 0x7d, 0xf7, 0x9e, 0x81, 0x3c, 0x67, 0xfc, 0xcc, 0x2e, 0x6b, 0xb7, 0xc7,
	0xe4, 0xf8, 0x1e, 0xba, 0xd6, 0x97, 0xd5, 0x18, 0x97, 0xc2, 0x46, 0x5a, 0x73, 0x44, 0x8a, 0x1d,
	0x74, 0x75, 0x20, 0xd9, 0xdf, 0xb1, 0x97, 0xb5, 0x56, 0x4e, 0x96, 0xd3, 0xd9, 0xaf, 0x55, 0xed,
	0xab, 0x23, 0x3a, 0xfb, 0xb5, 0x2a, 0x3e, 0xeb, 0xbf, 0x08, 0x93, 0xc3, 0xf6, 0xff, 0x5e, 0x65,
	0x12, 0x9a, 0xf9, 0x04, 0xfd, 0x11, 0x6a, 0xfc, 0x02, 0x95, 0x79, 0xaf, 0x72, 0xd8, 0xd7, 0xb4,
	0x9d, 0x8f, 0x8b, 0xd9, 0x99, 0x56, 0x70, 0xfc, 0x01, 0x21, 0x3e, 0x47, 0x58, 0x64, 0x69, 0x1a,
	0x41, 0x0c, 0x89, 0x24, 0xd1, 0x5e, 0xb7, 0x02, 0x5f, 0xd7, 0x66, 0xf6, 0x0a, 0x86, 0x33, 0x86,
	0x1f, 0xb5, 0x37, 0xc1, 0x04, 0x3e, 0x46, 0x8b, 0x0d, 0xa1, 0xbf, 0xed, 0x15, 0x6d, 0xed, 0xa3,
	0x62, 0xd6, 0x26, 0x4f, 0xe4, 0x7e, 0x8f, 0x4c, 0x3d, 0x4e, 0x0e, 0x24, 0x3c, 0x4a, 0xa2, 0x8e,
	0xcf, 0x98, 0xdc, 0xa5, 0x11, 0x88, 0x8e, 0x90, 0x10, 0xdb, 0x37, 0xf4, 0x4d, 0x4e, 0xd9, 0xc5,
	0xb7, 0xd0, 0xbc, 0x6a, 0x43, 0xc2, 0xc6, 0x3a, 0xe1, 0xbb, 0x8b, 0xa1, 0xa6, 0x74, 0x73, 0xb8,
	0x29, 0xe1, 0x0d, 0x74, 0x5d, 0x40, 0x10, 0xb0, 0x38, 0xad, 0x71, 0xd6, 0x50, 0x2c, 0xf6, 0x2d,
	0xad, 0x30, 0x2a, 0x76, 0x7e, 0xb7, 0xd0, 0x9d, 0xe9, 0x15, 0xef, 0x90, 0x0a, 0x89, 0x0f, 0xc6,
	0xaa, 0x9e, 0x5b, 0xac, 0xea, 0x29, 0xf4, 0x48, 0xcd, 0x3b, 0x46, 0xf3, 0x54, 0x42, 0xdc, 0xfb,
	0x09, 0xf9, 0xb4, 0xe8, 0xe0, 0x39, 0xcd, 0x41, 0xbf, 0x4b, 0xa7, 0xc6, 0x9f, 0xfb, 0xaf, 0x30,
	0x9e, 0xe2, 0x5f, 0x2c, 0xb4, 0x9e, 0x16, 0xe8, 0xda, 0x26, 0xe0, 0xcb, 0x1c, 0x66, 0x0a, 0xd9,
	0x55, 0x9d, 0x2e, 0x21, 0x31, 0xf4, 0x46, 0x10, 0xf5, 0xed, 0x7c, 0x87, 0xde, 0x7a, 0x69, 0x32,
	0xff, 0x8b, 0xff, 0x7e, 0x8f, 0xe6, 0xbe, 0xbc, 0xd2, 0xda, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x08, 0x4a, 0xff, 0xa8, 0x1c, 0x10, 0x00, 0x00,
}
