// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import runtime "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// APIGroup contains the name, the supported versions, and the preferred version
// of a group.
type APIGroup struct {
	// name is the name of the group.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// versions are the versions supported in this group.
	Versions []*GroupVersionForDiscovery `protobuf:"bytes,2,rep,name=versions" json:"versions,omitempty"`
	// preferredVersion is the version preferred by the API server, which
	// probably is the storage version.
	// +optional
	PreferredVersion *GroupVersionForDiscovery `protobuf:"bytes,3,opt,name=preferredVersion" json:"preferredVersion,omitempty"`
	// a map of client CIDR to server address that is serving this group.
	// This is to help clients reach servers in the most network-efficient way possible.
	// Clients can use the appropriate server address as per the CIDR that they match.
	// In case of multiple matches, clients should use the longest matching CIDR.
	// The server returns only those CIDRs that it thinks that the client can match.
	// For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
	// Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
	// +optional
	ServerAddressByClientCIDRs []*ServerAddressByClientCIDR `protobuf:"bytes,4,rep,name=serverAddressByClientCIDRs" json:"serverAddressByClientCIDRs,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *APIGroup) Reset()         { *m = APIGroup{} }
func (m *APIGroup) String() string { return proto.CompactTextString(m) }
func (*APIGroup) ProtoMessage()    {}
func (*APIGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{0}
}
func (m *APIGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIGroup.Unmarshal(m, b)
}
func (m *APIGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIGroup.Marshal(b, m, deterministic)
}
func (dst *APIGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIGroup.Merge(dst, src)
}
func (m *APIGroup) XXX_Size() int {
	return xxx_messageInfo_APIGroup.Size(m)
}
func (m *APIGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_APIGroup.DiscardUnknown(m)
}

var xxx_messageInfo_APIGroup proto.InternalMessageInfo

func (m *APIGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *APIGroup) GetVersions() []*GroupVersionForDiscovery {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *APIGroup) GetPreferredVersion() *GroupVersionForDiscovery {
	if m != nil {
		return m.PreferredVersion
	}
	return nil
}

func (m *APIGroup) GetServerAddressByClientCIDRs() []*ServerAddressByClientCIDR {
	if m != nil {
		return m.ServerAddressByClientCIDRs
	}
	return nil
}

// APIGroupList is a list of APIGroup, to allow clients to discover the API at
// /apis.
type APIGroupList struct {
	// groups is a list of APIGroup.
	Groups               []*APIGroup `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *APIGroupList) Reset()         { *m = APIGroupList{} }
func (m *APIGroupList) String() string { return proto.CompactTextString(m) }
func (*APIGroupList) ProtoMessage()    {}
func (*APIGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{1}
}
func (m *APIGroupList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIGroupList.Unmarshal(m, b)
}
func (m *APIGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIGroupList.Marshal(b, m, deterministic)
}
func (dst *APIGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIGroupList.Merge(dst, src)
}
func (m *APIGroupList) XXX_Size() int {
	return xxx_messageInfo_APIGroupList.Size(m)
}
func (m *APIGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_APIGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_APIGroupList proto.InternalMessageInfo

func (m *APIGroupList) GetGroups() []*APIGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

// APIResource specifies the name of a resource and whether it is namespaced.
type APIResource struct {
	// name is the plural name of the resource.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely.
	// The singularName is more correct for reporting status on a single item and both singular and plural are allowed
	// from the kubectl CLI interface.
	SingularName *string `protobuf:"bytes,6,opt,name=singularName" json:"singularName,omitempty"`
	// namespaced indicates if a resource is namespaced or not.
	Namespaced *bool `protobuf:"varint,2,opt,name=namespaced" json:"namespaced,omitempty"`
	// group is the preferred group of the resource.  Empty implies the group of the containing resource list.
	// For subresources, this may have a different value, for example: Scale".
	Group *string `protobuf:"bytes,8,opt,name=group" json:"group,omitempty"`
	// version is the preferred version of the resource.  Empty implies the version of the containing resource list
	// For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)".
	Version *string `protobuf:"bytes,9,opt,name=version" json:"version,omitempty"`
	// kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
	Kind *string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// verbs is a list of supported kube verbs (this includes get, list, watch, create,
	// update, patch, delete, deletecollection, and proxy)
	Verbs *Verbs `protobuf:"bytes,4,opt,name=verbs" json:"verbs,omitempty"`
	// shortNames is a list of suggested short names of the resource.
	ShortNames []string `protobuf:"bytes,5,rep,name=shortNames" json:"shortNames,omitempty"`
	// categories is a list of the grouped resources this resource belongs to (e.g. 'all')
	Categories           []string `protobuf:"bytes,7,rep,name=categories" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIResource) Reset()         { *m = APIResource{} }
func (m *APIResource) String() string { return proto.CompactTextString(m) }
func (*APIResource) ProtoMessage()    {}
func (*APIResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{2}
}
func (m *APIResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIResource.Unmarshal(m, b)
}
func (m *APIResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIResource.Marshal(b, m, deterministic)
}
func (dst *APIResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIResource.Merge(dst, src)
}
func (m *APIResource) XXX_Size() int {
	return xxx_messageInfo_APIResource.Size(m)
}
func (m *APIResource) XXX_DiscardUnknown() {
	xxx_messageInfo_APIResource.DiscardUnknown(m)
}

var xxx_messageInfo_APIResource proto.InternalMessageInfo

func (m *APIResource) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *APIResource) GetSingularName() string {
	if m != nil && m.SingularName != nil {
		return *m.SingularName
	}
	return ""
}

func (m *APIResource) GetNamespaced() bool {
	if m != nil && m.Namespaced != nil {
		return *m.Namespaced
	}
	return false
}

func (m *APIResource) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *APIResource) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *APIResource) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *APIResource) GetVerbs() *Verbs {
	if m != nil {
		return m.Verbs
	}
	return nil
}

func (m *APIResource) GetShortNames() []string {
	if m != nil {
		return m.ShortNames
	}
	return nil
}

func (m *APIResource) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

// APIResourceList is a list of APIResource, it is used to expose the name of the
// resources supported in a specific group and version, and if the resource
// is namespaced.
type APIResourceList struct {
	// groupVersion is the group and version this APIResourceList is for.
	GroupVersion *string `protobuf:"bytes,1,opt,name=groupVersion" json:"groupVersion,omitempty"`
	// resources contains the name of the resources and if they are namespaced.
	Resources            []*APIResource `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *APIResourceList) Reset()         { *m = APIResourceList{} }
func (m *APIResourceList) String() string { return proto.CompactTextString(m) }
func (*APIResourceList) ProtoMessage()    {}
func (*APIResourceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{3}
}
func (m *APIResourceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIResourceList.Unmarshal(m, b)
}
func (m *APIResourceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIResourceList.Marshal(b, m, deterministic)
}
func (dst *APIResourceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIResourceList.Merge(dst, src)
}
func (m *APIResourceList) XXX_Size() int {
	return xxx_messageInfo_APIResourceList.Size(m)
}
func (m *APIResourceList) XXX_DiscardUnknown() {
	xxx_messageInfo_APIResourceList.DiscardUnknown(m)
}

var xxx_messageInfo_APIResourceList proto.InternalMessageInfo

func (m *APIResourceList) GetGroupVersion() string {
	if m != nil && m.GroupVersion != nil {
		return *m.GroupVersion
	}
	return ""
}

func (m *APIResourceList) GetResources() []*APIResource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// APIVersions lists the versions that are available, to allow clients to
// discover the API at /api, which is the root path of the legacy v1 API.
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type APIVersions struct {
	// versions are the api versions that are available.
	Versions []string `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
	// a map of client CIDR to server address that is serving this group.
	// This is to help clients reach servers in the most network-efficient way possible.
	// Clients can use the appropriate server address as per the CIDR that they match.
	// In case of multiple matches, clients should use the longest matching CIDR.
	// The server returns only those CIDRs that it thinks that the client can match.
	// For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
	// Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
	ServerAddressByClientCIDRs []*ServerAddressByClientCIDR `protobuf:"bytes,2,rep,name=serverAddressByClientCIDRs" json:"serverAddressByClientCIDRs,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *APIVersions) Reset()         { *m = APIVersions{} }
func (m *APIVersions) String() string { return proto.CompactTextString(m) }
func (*APIVersions) ProtoMessage()    {}
func (*APIVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{4}
}
func (m *APIVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIVersions.Unmarshal(m, b)
}
func (m *APIVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIVersions.Marshal(b, m, deterministic)
}
func (dst *APIVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIVersions.Merge(dst, src)
}
func (m *APIVersions) XXX_Size() int {
	return xxx_messageInfo_APIVersions.Size(m)
}
func (m *APIVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_APIVersions.DiscardUnknown(m)
}

var xxx_messageInfo_APIVersions proto.InternalMessageInfo

func (m *APIVersions) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *APIVersions) GetServerAddressByClientCIDRs() []*ServerAddressByClientCIDR {
	if m != nil {
		return m.ServerAddressByClientCIDRs
	}
	return nil
}

// CreateOptions may be provided when creating an API object.
type CreateOptions struct {
	// When present, indicates that modifications should not be
	// persisted. An invalid or unrecognized dryRun directive will
	// result in an error response and no further processing of the
	// request. Valid values are:
	// - All: all dry run stages will be processed
	// +optional
	DryRun []string `protobuf:"bytes,1,rep,name=dryRun" json:"dryRun,omitempty"`
	// If IncludeUninitialized is specified, the object may be
	// returned without completing initialization.
	IncludeUninitialized *bool    `protobuf:"varint,2,opt,name=includeUninitialized" json:"includeUninitialized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOptions) Reset()         { *m = CreateOptions{} }
func (m *CreateOptions) String() string { return proto.CompactTextString(m) }
func (*CreateOptions) ProtoMessage()    {}
func (*CreateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{5}
}
func (m *CreateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOptions.Unmarshal(m, b)
}
func (m *CreateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOptions.Marshal(b, m, deterministic)
}
func (dst *CreateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOptions.Merge(dst, src)
}
func (m *CreateOptions) XXX_Size() int {
	return xxx_messageInfo_CreateOptions.Size(m)
}
func (m *CreateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOptions proto.InternalMessageInfo

func (m *CreateOptions) GetDryRun() []string {
	if m != nil {
		return m.DryRun
	}
	return nil
}

func (m *CreateOptions) GetIncludeUninitialized() bool {
	if m != nil && m.IncludeUninitialized != nil {
		return *m.IncludeUninitialized
	}
	return false
}

// DeleteOptions may be provided when deleting an API object.
type DeleteOptions struct {
	// The duration in seconds before the object should be deleted. Value must be non-negative integer.
	// The value zero indicates delete immediately. If this value is nil, the default grace period for the
	// specified type will be used.
	// Defaults to a per object value if not specified. zero means delete immediately.
	// +optional
	GracePeriodSeconds *int64 `protobuf:"varint,1,opt,name=gracePeriodSeconds" json:"gracePeriodSeconds,omitempty"`
	// Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be
	// returned.
	// +optional
	Preconditions *Preconditions `protobuf:"bytes,2,opt,name=preconditions" json:"preconditions,omitempty"`
	// Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.
	// Should the dependent objects be orphaned. If true/false, the "orphan"
	// finalizer will be added to/removed from the object's finalizers list.
	// Either this field or PropagationPolicy may be set, but not both.
	// +optional
	OrphanDependents *bool `protobuf:"varint,3,opt,name=orphanDependents" json:"orphanDependents,omitempty"`
	// Whether and how garbage collection will be performed.
	// Either this field or OrphanDependents may be set, but not both.
	// The default policy is decided by the existing finalizer set in the
	// metadata.finalizers and the resource-specific default policy.
	// Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
	// allow the garbage collector to delete the dependents in the background;
	// 'Foreground' - a cascading policy that deletes all dependents in the
	// foreground.
	// +optional
	PropagationPolicy *string `protobuf:"bytes,4,opt,name=propagationPolicy" json:"propagationPolicy,omitempty"`
	// When present, indicates that modifications should not be
	// persisted. An invalid or unrecognized dryRun directive will
	// result in an error response and no further processing of the
	// request. Valid values are:
	// - All: all dry run stages will be processed
	// +optional
	DryRun               []string `protobuf:"bytes,5,rep,name=dryRun" json:"dryRun,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOptions) Reset()         { *m = DeleteOptions{} }
func (m *DeleteOptions) String() string { return proto.CompactTextString(m) }
func (*DeleteOptions) ProtoMessage()    {}
func (*DeleteOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{6}
}
func (m *DeleteOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOptions.Unmarshal(m, b)
}
func (m *DeleteOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOptions.Marshal(b, m, deterministic)
}
func (dst *DeleteOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOptions.Merge(dst, src)
}
func (m *DeleteOptions) XXX_Size() int {
	return xxx_messageInfo_DeleteOptions.Size(m)
}
func (m *DeleteOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOptions proto.InternalMessageInfo

func (m *DeleteOptions) GetGracePeriodSeconds() int64 {
	if m != nil && m.GracePeriodSeconds != nil {
		return *m.GracePeriodSeconds
	}
	return 0
}

func (m *DeleteOptions) GetPreconditions() *Preconditions {
	if m != nil {
		return m.Preconditions
	}
	return nil
}

func (m *DeleteOptions) GetOrphanDependents() bool {
	if m != nil && m.OrphanDependents != nil {
		return *m.OrphanDependents
	}
	return false
}

func (m *DeleteOptions) GetPropagationPolicy() string {
	if m != nil && m.PropagationPolicy != nil {
		return *m.PropagationPolicy
	}
	return ""
}

func (m *DeleteOptions) GetDryRun() []string {
	if m != nil {
		return m.DryRun
	}
	return nil
}

// Duration is a wrapper around time.Duration which supports correct
// marshaling to YAML and JSON. In particular, it marshals into strings, which
// can be used as map keys in json.
type Duration struct {
	Duration             *int64   `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Duration) Reset()         { *m = Duration{} }
func (m *Duration) String() string { return proto.CompactTextString(m) }
func (*Duration) ProtoMessage()    {}
func (*Duration) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{7}
}
func (m *Duration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Duration.Unmarshal(m, b)
}
func (m *Duration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Duration.Marshal(b, m, deterministic)
}
func (dst *Duration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Duration.Merge(dst, src)
}
func (m *Duration) XXX_Size() int {
	return xxx_messageInfo_Duration.Size(m)
}
func (m *Duration) XXX_DiscardUnknown() {
	xxx_messageInfo_Duration.DiscardUnknown(m)
}

var xxx_messageInfo_Duration proto.InternalMessageInfo

func (m *Duration) GetDuration() int64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

// ExportOptions is the query options to the standard REST get call.
type ExportOptions struct {
	// Should this value be exported.  Export strips fields that a user can not specify.
	Export *bool `protobuf:"varint,1,opt,name=export" json:"export,omitempty"`
	// Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.
	Exact                *bool    `protobuf:"varint,2,opt,name=exact" json:"exact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportOptions) Reset()         { *m = ExportOptions{} }
func (m *ExportOptions) String() string { return proto.CompactTextString(m) }
func (*ExportOptions) ProtoMessage()    {}
func (*ExportOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{8}
}
func (m *ExportOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportOptions.Unmarshal(m, b)
}
func (m *ExportOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportOptions.Marshal(b, m, deterministic)
}
func (dst *ExportOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportOptions.Merge(dst, src)
}
func (m *ExportOptions) XXX_Size() int {
	return xxx_messageInfo_ExportOptions.Size(m)
}
func (m *ExportOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ExportOptions proto.InternalMessageInfo

func (m *ExportOptions) GetExport() bool {
	if m != nil && m.Export != nil {
		return *m.Export
	}
	return false
}

func (m *ExportOptions) GetExact() bool {
	if m != nil && m.Exact != nil {
		return *m.Exact
	}
	return false
}

// GetOptions is the standard query options to the standard REST get call.
type GetOptions struct {
	// When specified:
	// - if unset, then the result is returned from remote storage based on quorum-read flag;
	// - if it's 0, then we simply return what we currently have in cache, no guarantee;
	// - if set to non zero, then the result is at least as fresh as given rv.
	ResourceVersion *string `protobuf:"bytes,1,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// If true, partially initialized resources are included in the response.
	// +optional
	IncludeUninitialized *bool    `protobuf:"varint,2,opt,name=includeUninitialized" json:"includeUninitialized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOptions) Reset()         { *m = GetOptions{} }
func (m *GetOptions) String() string { return proto.CompactTextString(m) }
func (*GetOptions) ProtoMessage()    {}
func (*GetOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{9}
}
func (m *GetOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOptions.Unmarshal(m, b)
}
func (m *GetOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOptions.Marshal(b, m, deterministic)
}
func (dst *GetOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOptions.Merge(dst, src)
}
func (m *GetOptions) XXX_Size() int {
	return xxx_messageInfo_GetOptions.Size(m)
}
func (m *GetOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetOptions proto.InternalMessageInfo

func (m *GetOptions) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *GetOptions) GetIncludeUninitialized() bool {
	if m != nil && m.IncludeUninitialized != nil {
		return *m.IncludeUninitialized
	}
	return false
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying
// concepts during lookup stages without having partially valid types
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
type GroupKind struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Kind                 *string  `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupKind) Reset()         { *m = GroupKind{} }
func (m *GroupKind) String() string { return proto.CompactTextString(m) }
func (*GroupKind) ProtoMessage()    {}
func (*GroupKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{10}
}
func (m *GroupKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupKind.Unmarshal(m, b)
}
func (m *GroupKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupKind.Marshal(b, m, deterministic)
}
func (dst *GroupKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupKind.Merge(dst, src)
}
func (m *GroupKind) XXX_Size() int {
	return xxx_messageInfo_GroupKind.Size(m)
}
func (m *GroupKind) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupKind.DiscardUnknown(m)
}

var xxx_messageInfo_GroupKind proto.InternalMessageInfo

func (m *GroupKind) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *GroupKind) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

// GroupResource specifies a Group and a Resource, but does not force a version.  This is useful for identifying
// concepts during lookup stages without having partially valid types
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
type GroupResource struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Resource             *string  `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupResource) Reset()         { *m = GroupResource{} }
func (m *GroupResource) String() string { return proto.CompactTextString(m) }
func (*GroupResource) ProtoMessage()    {}
func (*GroupResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{11}
}
func (m *GroupResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupResource.Unmarshal(m, b)
}
func (m *GroupResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupResource.Marshal(b, m, deterministic)
}
func (dst *GroupResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupResource.Merge(dst, src)
}
func (m *GroupResource) XXX_Size() int {
	return xxx_messageInfo_GroupResource.Size(m)
}
func (m *GroupResource) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupResource.DiscardUnknown(m)
}

var xxx_messageInfo_GroupResource proto.InternalMessageInfo

func (m *GroupResource) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *GroupResource) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

// GroupVersion contains the "group" and the "version", which uniquely identifies the API.
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
type GroupVersion struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupVersion) Reset()         { *m = GroupVersion{} }
func (m *GroupVersion) String() string { return proto.CompactTextString(m) }
func (*GroupVersion) ProtoMessage()    {}
func (*GroupVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{12}
}
func (m *GroupVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersion.Unmarshal(m, b)
}
func (m *GroupVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersion.Marshal(b, m, deterministic)
}
func (dst *GroupVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersion.Merge(dst, src)
}
func (m *GroupVersion) XXX_Size() int {
	return xxx_messageInfo_GroupVersion.Size(m)
}
func (m *GroupVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersion.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersion proto.InternalMessageInfo

func (m *GroupVersion) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *GroupVersion) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

// GroupVersion contains the "group/version" and "version" string of a version.
// It is made a struct to keep extensibility.
type GroupVersionForDiscovery struct {
	// groupVersion specifies the API group and version in the form "group/version"
	GroupVersion *string `protobuf:"bytes,1,opt,name=groupVersion" json:"groupVersion,omitempty"`
	// version specifies the version in the form of "version". This is to save
	// the clients the trouble of splitting the GroupVersion.
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupVersionForDiscovery) Reset()         { *m = GroupVersionForDiscovery{} }
func (m *GroupVersionForDiscovery) String() string { return proto.CompactTextString(m) }
func (*GroupVersionForDiscovery) ProtoMessage()    {}
func (*GroupVersionForDiscovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{13}
}
func (m *GroupVersionForDiscovery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersionForDiscovery.Unmarshal(m, b)
}
func (m *GroupVersionForDiscovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersionForDiscovery.Marshal(b, m, deterministic)
}
func (dst *GroupVersionForDiscovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersionForDiscovery.Merge(dst, src)
}
func (m *GroupVersionForDiscovery) XXX_Size() int {
	return xxx_messageInfo_GroupVersionForDiscovery.Size(m)
}
func (m *GroupVersionForDiscovery) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersionForDiscovery.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersionForDiscovery proto.InternalMessageInfo

func (m *GroupVersionForDiscovery) GetGroupVersion() string {
	if m != nil && m.GroupVersion != nil {
		return *m.GroupVersion
	}
	return ""
}

func (m *GroupVersionForDiscovery) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

// GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
// to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
type GroupVersionKind struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Kind                 *string  `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupVersionKind) Reset()         { *m = GroupVersionKind{} }
func (m *GroupVersionKind) String() string { return proto.CompactTextString(m) }
func (*GroupVersionKind) ProtoMessage()    {}
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{14}
}
func (m *GroupVersionKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersionKind.Unmarshal(m, b)
}
func (m *GroupVersionKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersionKind.Marshal(b, m, deterministic)
}
func (dst *GroupVersionKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersionKind.Merge(dst, src)
}
func (m *GroupVersionKind) XXX_Size() int {
	return xxx_messageInfo_GroupVersionKind.Size(m)
}
func (m *GroupVersionKind) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersionKind.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersionKind proto.InternalMessageInfo

func (m *GroupVersionKind) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *GroupVersionKind) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *GroupVersionKind) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

// GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion
// to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling
//
// +protobuf.options.(gogoproto.goproto_stringer)=false
type GroupVersionResource struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Resource             *string  `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupVersionResource) Reset()         { *m = GroupVersionResource{} }
func (m *GroupVersionResource) String() string { return proto.CompactTextString(m) }
func (*GroupVersionResource) ProtoMessage()    {}
func (*GroupVersionResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{15}
}
func (m *GroupVersionResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersionResource.Unmarshal(m, b)
}
func (m *GroupVersionResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersionResource.Marshal(b, m, deterministic)
}
func (dst *GroupVersionResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersionResource.Merge(dst, src)
}
func (m *GroupVersionResource) XXX_Size() int {
	return xxx_messageInfo_GroupVersionResource.Size(m)
}
func (m *GroupVersionResource) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersionResource.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersionResource proto.InternalMessageInfo

func (m *GroupVersionResource) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *GroupVersionResource) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *GroupVersionResource) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

// Initializer is information about an initializer that has not yet completed.
type Initializer struct {
	// name of the process that is responsible for initializing this object.
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Initializer) Reset()         { *m = Initializer{} }
func (m *Initializer) String() string { return proto.CompactTextString(m) }
func (*Initializer) ProtoMessage()    {}
func (*Initializer) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{16}
}
func (m *Initializer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Initializer.Unmarshal(m, b)
}
func (m *Initializer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Initializer.Marshal(b, m, deterministic)
}
func (dst *Initializer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Initializer.Merge(dst, src)
}
func (m *Initializer) XXX_Size() int {
	return xxx_messageInfo_Initializer.Size(m)
}
func (m *Initializer) XXX_DiscardUnknown() {
	xxx_messageInfo_Initializer.DiscardUnknown(m)
}

var xxx_messageInfo_Initializer proto.InternalMessageInfo

func (m *Initializer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// Initializers tracks the progress of initialization.
type Initializers struct {
	// Pending is a list of initializers that must execute in order before this object is visible.
	// When the last pending initializer is removed, and no failing result is set, the initializers
	// struct will be set to nil and the object is considered as initialized and visible to all
	// clients.
	// +patchMergeKey=name
	// +patchStrategy=merge
	Pending []*Initializer `protobuf:"bytes,1,rep,name=pending" json:"pending,omitempty"`
	// If result is set with the Failure field, the object will be persisted to storage and then deleted,
	// ensuring that other clients can observe the deletion.
	Result               *Status  `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Initializers) Reset()         { *m = Initializers{} }
func (m *Initializers) String() string { return proto.CompactTextString(m) }
func (*Initializers) ProtoMessage()    {}
func (*Initializers) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{17}
}
func (m *Initializers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Initializers.Unmarshal(m, b)
}
func (m *Initializers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Initializers.Marshal(b, m, deterministic)
}
func (dst *Initializers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Initializers.Merge(dst, src)
}
func (m *Initializers) XXX_Size() int {
	return xxx_messageInfo_Initializers.Size(m)
}
func (m *Initializers) XXX_DiscardUnknown() {
	xxx_messageInfo_Initializers.DiscardUnknown(m)
}

var xxx_messageInfo_Initializers proto.InternalMessageInfo

func (m *Initializers) GetPending() []*Initializer {
	if m != nil {
		return m.Pending
	}
	return nil
}

func (m *Initializers) GetResult() *Status {
	if m != nil {
		return m.Result
	}
	return nil
}

// A label selector is a label query over a set of resources. The result of matchLabels and
// matchExpressions are ANDed. An empty label selector matches all objects. A null
// label selector matches no objects.
type LabelSelector struct {
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	// +optional
	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=matchLabels" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	// +optional
	MatchExpressions     []*LabelSelectorRequirement `protobuf:"bytes,2,rep,name=matchExpressions" json:"matchExpressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *LabelSelector) Reset()         { *m = LabelSelector{} }
func (m *LabelSelector) String() string { return proto.CompactTextString(m) }
func (*LabelSelector) ProtoMessage()    {}
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{18}
}
func (m *LabelSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelector.Unmarshal(m, b)
}
func (m *LabelSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelector.Marshal(b, m, deterministic)
}
func (dst *LabelSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelector.Merge(dst, src)
}
func (m *LabelSelector) XXX_Size() int {
	return xxx_messageInfo_LabelSelector.Size(m)
}
func (m *LabelSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelector.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelector proto.InternalMessageInfo

func (m *LabelSelector) GetMatchLabels() map[string]string {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

func (m *LabelSelector) GetMatchExpressions() []*LabelSelectorRequirement {
	if m != nil {
		return m.MatchExpressions
	}
	return nil
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type LabelSelectorRequirement struct {
	// key is the label key that the selector applies to.
	// +patchMergeKey=key
	// +patchStrategy=merge
	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `protobuf:"bytes,2,opt,name=operator" json:"operator,omitempty"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	// +optional
	Values               []string `protobuf:"bytes,3,rep,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelSelectorRequirement) Reset()         { *m = LabelSelectorRequirement{} }
func (m *LabelSelectorRequirement) String() string { return proto.CompactTextString(m) }
func (*LabelSelectorRequirement) ProtoMessage()    {}
func (*LabelSelectorRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{19}
}
func (m *LabelSelectorRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelectorRequirement.Unmarshal(m, b)
}
func (m *LabelSelectorRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelectorRequirement.Marshal(b, m, deterministic)
}
func (dst *LabelSelectorRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelectorRequirement.Merge(dst, src)
}
func (m *LabelSelectorRequirement) XXX_Size() int {
	return xxx_messageInfo_LabelSelectorRequirement.Size(m)
}
func (m *LabelSelectorRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelectorRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelectorRequirement proto.InternalMessageInfo

func (m *LabelSelectorRequirement) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *LabelSelectorRequirement) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *LabelSelectorRequirement) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// List holds a list of objects, which may not be known by the server.
type List struct {
	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Metadata *ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of objects
	Items                []*runtime.RawExtension `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{20}
}
func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (dst *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(dst, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetMetadata() *ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *List) GetItems() []*runtime.RawExtension {
	if m != nil {
		return m.Items
	}
	return nil
}

// ListMeta describes metadata that synthetic resources must have, including lists and
// various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
type ListMeta struct {
	// selfLink is a URL representing this object.
	// Populated by the system.
	// Read-only.
	// +optional
	SelfLink *string `protobuf:"bytes,1,opt,name=selfLink" json:"selfLink,omitempty"`
	// String that identifies the server's internal version of this object that
	// can be used by clients to determine when objects have changed.
	// Value must be treated as opaque by clients and passed unmodified back to the server.
	// Populated by the system.
	// Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	// +optional
	ResourceVersion *string `protobuf:"bytes,2,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// continue may be set if the user set a limit on the number of items returned, and indicates that
	// the server has more data available. The value is opaque and may be used to issue another request
	// to the endpoint that served this list to retrieve the next set of available objects. Continuing a
	// consistent list may not be possible if the server configuration has changed or more than a few
	// minutes have passed. The resourceVersion field returned when using this continue value will be
	// identical to the value in the first response, unless you have received this token from an error
	// message.
	Continue             *string  `protobuf:"bytes,3,opt,name=continue" json:"continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMeta) Reset()         { *m = ListMeta{} }
func (m *ListMeta) String() string { return proto.CompactTextString(m) }
func (*ListMeta) ProtoMessage()    {}
func (*ListMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{21}
}
func (m *ListMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeta.Unmarshal(m, b)
}
func (m *ListMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeta.Marshal(b, m, deterministic)
}
func (dst *ListMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeta.Merge(dst, src)
}
func (m *ListMeta) XXX_Size() int {
	return xxx_messageInfo_ListMeta.Size(m)
}
func (m *ListMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeta proto.InternalMessageInfo

func (m *ListMeta) GetSelfLink() string {
	if m != nil && m.SelfLink != nil {
		return *m.SelfLink
	}
	return ""
}

func (m *ListMeta) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *ListMeta) GetContinue() string {
	if m != nil && m.Continue != nil {
		return *m.Continue
	}
	return ""
}

// ListOptions is the query options to a standard REST list call.
type ListOptions struct {
	// A selector to restrict the list of returned objects by their labels.
	// Defaults to everything.
	// +optional
	LabelSelector *string `protobuf:"bytes,1,opt,name=labelSelector" json:"labelSelector,omitempty"`
	// A selector to restrict the list of returned objects by their fields.
	// Defaults to everything.
	// +optional
	FieldSelector *string `protobuf:"bytes,2,opt,name=fieldSelector" json:"fieldSelector,omitempty"`
	// If true, partially initialized resources are included in the response.
	// +optional
	IncludeUninitialized *bool `protobuf:"varint,6,opt,name=includeUninitialized" json:"includeUninitialized,omitempty"`
	// Watch for changes to the described resources and return them as a stream of
	// add, update, and remove notifications. Specify resourceVersion.
	// +optional
	Watch *bool `protobuf:"varint,3,opt,name=watch" json:"watch,omitempty"`
	// When specified with a watch call, shows changes that occur after that particular version of a resource.
	// Defaults to changes from the beginning of history.
	// When specified for list:
	// - if unset, then the result is returned from remote storage based on quorum-read flag;
	// - if it's 0, then we simply return what we currently have in cache, no guarantee;
	// - if set to non zero, then the result is at least as fresh as given rv.
	// +optional
	ResourceVersion *string `protobuf:"bytes,4,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// Timeout for the list/watch call.
	// This limits the duration of the call, regardless of any activity or inactivity.
	// +optional
	TimeoutSeconds *int64 `protobuf:"varint,5,opt,name=timeoutSeconds" json:"timeoutSeconds,omitempty"`
	// limit is a maximum number of responses to return for a list call. If more items exist, the
	// server will set the `continue` field on the list metadata to a value that can be used with the
	// same initial query to retrieve the next set of results. Setting a limit may return fewer than
	// the requested amount of items (up to zero items) in the event all requested objects are
	// filtered out and clients should only use the presence of the continue field to determine whether
	// more results are available. Servers may choose not to support the limit argument and will return
	// all of the available results. If limit is specified and the continue field is empty, clients may
	// assume that no more results are available. This field is not supported if watch is true.
	//
	// The server guarantees that the objects returned when using continue will be identical to issuing
	// a single list call without a limit - that is, no objects created, modified, or deleted after the
	// first request is issued will be included in any subsequent continued requests. This is sometimes
	// referred to as a consistent snapshot, and ensures that a client that is using limit to receive
	// smaller chunks of a very large result can ensure they see all possible objects. If objects are
	// updated during a chunked list the version of the object that was present at the time the first list
	// result was calculated is returned.
	Limit *int64 `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	// The continue option should be set when retrieving more results from the server. Since this value is
	// server defined, clients may only use the continue value from a previous query result with identical
	// query parameters (except for the value of continue) and the server may reject a continue value it
	// does not recognize. If the specified continue value is no longer valid whether due to expiration
	// (generally five to fifteen minutes) or a configuration change on the server, the server will
	// respond with a 410 ResourceExpired error together with a continue token. If the client needs a
	// consistent list, it must restart their list without the continue field. Otherwise, the client may
	// send another list request with the token received with the 410 error, the server will respond with
	// a list starting from the next key, but from the latest snapshot, which is inconsistent from the
	// previous list results - objects that are created, modified, or deleted after the first list request
	// will be included in the response, as long as their keys are after the "next key".
	//
	// This field is not supported when watch is true. Clients may start a watch from the last
	// resourceVersion value returned by the server and not miss any modifications.
	Continue             *string  `protobuf:"bytes,8,opt,name=continue" json:"continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOptions) Reset()         { *m = ListOptions{} }
func (m *ListOptions) String() string { return proto.CompactTextString(m) }
func (*ListOptions) ProtoMessage()    {}
func (*ListOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{22}
}
func (m *ListOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOptions.Unmarshal(m, b)
}
func (m *ListOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOptions.Marshal(b, m, deterministic)
}
func (dst *ListOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOptions.Merge(dst, src)
}
func (m *ListOptions) XXX_Size() int {
	return xxx_messageInfo_ListOptions.Size(m)
}
func (m *ListOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListOptions proto.InternalMessageInfo

func (m *ListOptions) GetLabelSelector() string {
	if m != nil && m.LabelSelector != nil {
		return *m.LabelSelector
	}
	return ""
}

func (m *ListOptions) GetFieldSelector() string {
	if m != nil && m.FieldSelector != nil {
		return *m.FieldSelector
	}
	return ""
}

func (m *ListOptions) GetIncludeUninitialized() bool {
	if m != nil && m.IncludeUninitialized != nil {
		return *m.IncludeUninitialized
	}
	return false
}

func (m *ListOptions) GetWatch() bool {
	if m != nil && m.Watch != nil {
		return *m.Watch
	}
	return false
}

func (m *ListOptions) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *ListOptions) GetTimeoutSeconds() int64 {
	if m != nil && m.TimeoutSeconds != nil {
		return *m.TimeoutSeconds
	}
	return 0
}

func (m *ListOptions) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListOptions) GetContinue() string {
	if m != nil && m.Continue != nil {
		return *m.Continue
	}
	return ""
}

// MicroTime is version of Time with microsecond level precision.
//
// +protobuf.options.marshal=false
// +protobuf.as=Timestamp
// +protobuf.options.(gogoproto.goproto_stringer)=false
type MicroTime struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive. This field may be limited in precision depending on context.
	Nanos                *int32   `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicroTime) Reset()         { *m = MicroTime{} }
func (m *MicroTime) String() string { return proto.CompactTextString(m) }
func (*MicroTime) ProtoMessage()    {}
func (*MicroTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{23}
}
func (m *MicroTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicroTime.Unmarshal(m, b)
}
func (m *MicroTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicroTime.Marshal(b, m, deterministic)
}
func (dst *MicroTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicroTime.Merge(dst, src)
}
func (m *MicroTime) XXX_Size() int {
	return xxx_messageInfo_MicroTime.Size(m)
}
func (m *MicroTime) XXX_DiscardUnknown() {
	xxx_messageInfo_MicroTime.DiscardUnknown(m)
}

var xxx_messageInfo_MicroTime proto.InternalMessageInfo

func (m *MicroTime) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *MicroTime) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

// ObjectMeta is metadata that all persisted resources must have, which includes all objects
// users must create.
type ObjectMeta struct {
	// Name must be unique within a namespace. Is required when creating resources, although
	// some resources may allow a client to request the generation of an appropriate name
	// automatically. Name is primarily intended for creation idempotence and configuration
	// definition.
	// Cannot be updated.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#names
	// +optional
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// GenerateName is an optional prefix, used by the server, to generate a unique
	// name ONLY IF the Name field has not been provided.
	// If this field is used, the name returned to the client will be different
	// than the name passed. This value will also be combined with a unique suffix.
	// The provided value has the same validation rules as the Name field,
	// and may be truncated by the length of the suffix required to make the value
	// unique on the server.
	//
	// If this field is specified and the generated name exists, the server will
	// NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
	// ServerTimeout indicating a unique name could not be found in the time allotted, and the client
	// should retry (optionally after the time indicated in the Retry-After header).
	//
	// Applied only if Name is not specified.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
	// +optional
	GenerateName *string `protobuf:"bytes,2,opt,name=generateName" json:"generateName,omitempty"`
	// Namespace defines the space within each name must be unique. An empty namespace is
	// equivalent to the "default" namespace, but "default" is the canonical representation.
	// Not all objects are required to be scoped to a namespace - the value of this field for
	// those objects will be empty.
	//
	// Must be a DNS_LABEL.
	// Cannot be updated.
	// More info: http://kubernetes.io/docs/user-guide/namespaces
	// +optional
	Namespace *string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	// SelfLink is a URL representing this object.
	// Populated by the system.
	// Read-only.
	// +optional
	SelfLink *string `protobuf:"bytes,4,opt,name=selfLink" json:"selfLink,omitempty"`
	// UID is the unique in time and space value for this object. It is typically generated by
	// the server on successful creation of a resource and is not allowed to change on PUT
	// operations.
	//
	// Populated by the system.
	// Read-only.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	// +optional
	Uid *string `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
	// An opaque value that represents the internal version of this object that can
	// be used by clients to determine when objects have changed. May be used for optimistic
	// concurrency, change detection, and the watch operation on a resource or set of resources.
	// Clients must treat these values as opaque and passed unmodified back to the server.
	// They may only be valid for a particular resource or set of resources.
	//
	// Populated by the system.
	// Read-only.
	// Value must be treated as opaque by clients and .
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	// +optional
	ResourceVersion *string `protobuf:"bytes,6,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// A sequence number representing a specific generation of the desired state.
	// Populated by the system. Read-only.
	// +optional
	Generation *int64 `protobuf:"varint,7,opt,name=generation" json:"generation,omitempty"`
	// CreationTimestamp is a timestamp representing the server time when this object was
	// created. It is not guaranteed to be set in happens-before order across separate operations.
	// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
	//
	// Populated by the system.
	// Read-only.
	// Null for lists.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	CreationTimestamp *Time `protobuf:"bytes,8,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
	// field is set by the server when a graceful deletion is requested by the user, and is not
	// directly settable by a client. The resource is expected to be deleted (no longer visible
	// from resource lists, and not reachable by name) after the time in this field, once the
	// finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
	// Once the deletionTimestamp is set, this value may not be unset or be set further into the
	// future, although it may be shortened or the resource may be deleted prior to this time.
	// For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
	// by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
	// the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
	// remove the pod from the API. In the presence of network partitions, this object may still
	// exist after this timestamp, until an administrator or automated process can determine the
	// resource is fully terminated.
	// If not set, graceful deletion of the object has not been requested.
	//
	// Populated by the system when a graceful deletion is requested.
	// Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	DeletionTimestamp *Time `protobuf:"bytes,9,opt,name=deletionTimestamp" json:"deletionTimestamp,omitempty"`
	// Number of seconds allowed for this object to gracefully terminate before
	// it will be removed from the system. Only set when deletionTimestamp is also set.
	// May only be shortened.
	// Read-only.
	// +optional
	DeletionGracePeriodSeconds *int64 `protobuf:"varint,10,opt,name=deletionGracePeriodSeconds" json:"deletionGracePeriodSeconds,omitempty"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and services.
	// More info: http://kubernetes.io/docs/user-guide/labels
	// +optional
	Labels map[string]string `protobuf:"bytes,11,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Annotations is an unstructured key value map stored with a resource that may be
	// set by external tools to store and retrieve arbitrary metadata. They are not
	// queryable and should be preserved when modifying objects.
	// More info: http://kubernetes.io/docs/user-guide/annotations
	// +optional
	Annotations map[string]string `protobuf:"bytes,12,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of objects depended by this object. If ALL objects in the list have
	// been deleted, this object will be garbage collected. If this object is managed by a controller,
	// then an entry in this list will point to this controller, with the controller field set to true.
	// There cannot be more than one managing controller.
	// +optional
	// +patchMergeKey=uid
	// +patchStrategy=merge
	OwnerReferences []*OwnerReference `protobuf:"bytes,13,rep,name=ownerReferences" json:"ownerReferences,omitempty"`
	// An initializer is a controller which enforces some system invariant at object creation time.
	// This field is a list of initializers that have not yet acted on this object. If nil or empty,
	// this object has been completely initialized. Otherwise, the object is considered uninitialized
	// and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
	// observe uninitialized objects.
	//
	// When an object is created, the system will populate this list with the current set of initializers.
	// Only privileged users may set or modify this list. Once it is empty, it may not be modified further
	// by any user.
	Initializers *Initializers `protobuf:"bytes,16,opt,name=initializers" json:"initializers,omitempty"`
	// Must be empty before the object is deleted from the registry. Each entry
	// is an identifier for the responsible component that will remove the entry
	// from the list. If the deletionTimestamp of the object is non-nil, entries
	// in this list can only be removed.
	// +optional
	// +patchStrategy=merge
	Finalizers []string `protobuf:"bytes,14,rep,name=finalizers" json:"finalizers,omitempty"`
	// The name of the cluster which the object belongs to.
	// This is used to distinguish resources with same name and namespace in different clusters.
	// This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
	// +optional
	ClusterName          *string  `protobuf:"bytes,15,opt,name=clusterName" json:"clusterName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectMeta) Reset()         { *m = ObjectMeta{} }
func (m *ObjectMeta) String() string { return proto.CompactTextString(m) }
func (*ObjectMeta) ProtoMessage()    {}
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{24}
}
func (m *ObjectMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectMeta.Unmarshal(m, b)
}
func (m *ObjectMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectMeta.Marshal(b, m, deterministic)
}
func (dst *ObjectMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectMeta.Merge(dst, src)
}
func (m *ObjectMeta) XXX_Size() int {
	return xxx_messageInfo_ObjectMeta.Size(m)
}
func (m *ObjectMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectMeta proto.InternalMessageInfo

func (m *ObjectMeta) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ObjectMeta) GetGenerateName() string {
	if m != nil && m.GenerateName != nil {
		return *m.GenerateName
	}
	return ""
}

func (m *ObjectMeta) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ObjectMeta) GetSelfLink() string {
	if m != nil && m.SelfLink != nil {
		return *m.SelfLink
	}
	return ""
}

func (m *ObjectMeta) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *ObjectMeta) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *ObjectMeta) GetGeneration() int64 {
	if m != nil && m.Generation != nil {
		return *m.Generation
	}
	return 0
}

func (m *ObjectMeta) GetCreationTimestamp() *Time {
	if m != nil {
		return m.CreationTimestamp
	}
	return nil
}

func (m *ObjectMeta) GetDeletionTimestamp() *Time {
	if m != nil {
		return m.DeletionTimestamp
	}
	return nil
}

func (m *ObjectMeta) GetDeletionGracePeriodSeconds() int64 {
	if m != nil && m.DeletionGracePeriodSeconds != nil {
		return *m.DeletionGracePeriodSeconds
	}
	return 0
}

func (m *ObjectMeta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ObjectMeta) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ObjectMeta) GetOwnerReferences() []*OwnerReference {
	if m != nil {
		return m.OwnerReferences
	}
	return nil
}

func (m *ObjectMeta) GetInitializers() *Initializers {
	if m != nil {
		return m.Initializers
	}
	return nil
}

func (m *ObjectMeta) GetFinalizers() []string {
	if m != nil {
		return m.Finalizers
	}
	return nil
}

func (m *ObjectMeta) GetClusterName() string {
	if m != nil && m.ClusterName != nil {
		return *m.ClusterName
	}
	return ""
}

// OwnerReference contains enough information to let you identify an owning
// object. Currently, an owning object must be in the same namespace, so there
// is no namespace field.
type OwnerReference struct {
	// API version of the referent.
	ApiVersion *string `protobuf:"bytes,5,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// Kind of the referent.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Name of the referent.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// UID of the referent.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid *string `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
	// If true, this reference points to the managing controller.
	// +optional
	Controller *bool `protobuf:"varint,6,opt,name=controller" json:"controller,omitempty"`
	// If true, AND if the owner has the "foregroundDeletion" finalizer, then
	// the owner cannot be deleted from the key-value store until this
	// reference is removed.
	// Defaults to false.
	// To set this field, a user needs "delete" permission of the owner,
	// otherwise 422 (Unprocessable Entity) will be returned.
	// +optional
	BlockOwnerDeletion   *bool    `protobuf:"varint,7,opt,name=blockOwnerDeletion" json:"blockOwnerDeletion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OwnerReference) Reset()         { *m = OwnerReference{} }
func (m *OwnerReference) String() string { return proto.CompactTextString(m) }
func (*OwnerReference) ProtoMessage()    {}
func (*OwnerReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{25}
}
func (m *OwnerReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerReference.Unmarshal(m, b)
}
func (m *OwnerReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerReference.Marshal(b, m, deterministic)
}
func (dst *OwnerReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerReference.Merge(dst, src)
}
func (m *OwnerReference) XXX_Size() int {
	return xxx_messageInfo_OwnerReference.Size(m)
}
func (m *OwnerReference) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerReference.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerReference proto.InternalMessageInfo

func (m *OwnerReference) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

func (m *OwnerReference) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *OwnerReference) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *OwnerReference) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *OwnerReference) GetController() bool {
	if m != nil && m.Controller != nil {
		return *m.Controller
	}
	return false
}

func (m *OwnerReference) GetBlockOwnerDeletion() bool {
	if m != nil && m.BlockOwnerDeletion != nil {
		return *m.BlockOwnerDeletion
	}
	return false
}

// Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
type Patch struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patch) Reset()         { *m = Patch{} }
func (m *Patch) String() string { return proto.CompactTextString(m) }
func (*Patch) ProtoMessage()    {}
func (*Patch) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{26}
}
func (m *Patch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patch.Unmarshal(m, b)
}
func (m *Patch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patch.Marshal(b, m, deterministic)
}
func (dst *Patch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patch.Merge(dst, src)
}
func (m *Patch) XXX_Size() int {
	return xxx_messageInfo_Patch.Size(m)
}
func (m *Patch) XXX_DiscardUnknown() {
	xxx_messageInfo_Patch.DiscardUnknown(m)
}

var xxx_messageInfo_Patch proto.InternalMessageInfo

// Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
type Preconditions struct {
	// Specifies the target UID.
	// +optional
	Uid                  *string  `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Preconditions) Reset()         { *m = Preconditions{} }
func (m *Preconditions) String() string { return proto.CompactTextString(m) }
func (*Preconditions) ProtoMessage()    {}
func (*Preconditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{27}
}
func (m *Preconditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Preconditions.Unmarshal(m, b)
}
func (m *Preconditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Preconditions.Marshal(b, m, deterministic)
}
func (dst *Preconditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preconditions.Merge(dst, src)
}
func (m *Preconditions) XXX_Size() int {
	return xxx_messageInfo_Preconditions.Size(m)
}
func (m *Preconditions) XXX_DiscardUnknown() {
	xxx_messageInfo_Preconditions.DiscardUnknown(m)
}

var xxx_messageInfo_Preconditions proto.InternalMessageInfo

func (m *Preconditions) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

// RootPaths lists the paths available at root.
// For example: "/healthz", "/apis".
type RootPaths struct {
	// paths are the paths available at root.
	Paths                []string `protobuf:"bytes,1,rep,name=paths" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootPaths) Reset()         { *m = RootPaths{} }
func (m *RootPaths) String() string { return proto.CompactTextString(m) }
func (*RootPaths) ProtoMessage()    {}
func (*RootPaths) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{28}
}
func (m *RootPaths) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootPaths.Unmarshal(m, b)
}
func (m *RootPaths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootPaths.Marshal(b, m, deterministic)
}
func (dst *RootPaths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootPaths.Merge(dst, src)
}
func (m *RootPaths) XXX_Size() int {
	return xxx_messageInfo_RootPaths.Size(m)
}
func (m *RootPaths) XXX_DiscardUnknown() {
	xxx_messageInfo_RootPaths.DiscardUnknown(m)
}

var xxx_messageInfo_RootPaths proto.InternalMessageInfo

func (m *RootPaths) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

// ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
type ServerAddressByClientCIDR struct {
	// The CIDR with which clients can match their IP to figure out the server address that they should use.
	ClientCIDR *string `protobuf:"bytes,1,opt,name=clientCIDR" json:"clientCIDR,omitempty"`
	// Address of this server, suitable for a client that matches the above CIDR.
	// This can be a hostname, hostname:port, IP or IP:port.
	ServerAddress        *string  `protobuf:"bytes,2,opt,name=serverAddress" json:"serverAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerAddressByClientCIDR) Reset()         { *m = ServerAddressByClientCIDR{} }
func (m *ServerAddressByClientCIDR) String() string { return proto.CompactTextString(m) }
func (*ServerAddressByClientCIDR) ProtoMessage()    {}
func (*ServerAddressByClientCIDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{29}
}
func (m *ServerAddressByClientCIDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerAddressByClientCIDR.Unmarshal(m, b)
}
func (m *ServerAddressByClientCIDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerAddressByClientCIDR.Marshal(b, m, deterministic)
}
func (dst *ServerAddressByClientCIDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerAddressByClientCIDR.Merge(dst, src)
}
func (m *ServerAddressByClientCIDR) XXX_Size() int {
	return xxx_messageInfo_ServerAddressByClientCIDR.Size(m)
}
func (m *ServerAddressByClientCIDR) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerAddressByClientCIDR.DiscardUnknown(m)
}

var xxx_messageInfo_ServerAddressByClientCIDR proto.InternalMessageInfo

func (m *ServerAddressByClientCIDR) GetClientCIDR() string {
	if m != nil && m.ClientCIDR != nil {
		return *m.ClientCIDR
	}
	return ""
}

func (m *ServerAddressByClientCIDR) GetServerAddress() string {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return ""
}

// Status is a return value for calls that don't return other objects.
type Status struct {
	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Metadata *ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Status of the operation.
	// One of: "Success" or "Failure".
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
	// +optional
	Status *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	// A human-readable description of the status of this operation.
	// +optional
	Message *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// A machine-readable description of why this operation is in the
	// "Failure" status. If this value is empty there
	// is no information available. A Reason clarifies an HTTP status
	// code but does not override it.
	// +optional
	Reason *string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	// Extended data associated with the reason.  Each reason may define its
	// own extended details. This field is optional and the data returned
	// is not guaranteed to conform to any schema except that defined by
	// the reason type.
	// +optional
	Details *StatusDetails `protobuf:"bytes,5,opt,name=details" json:"details,omitempty"`
	// Suggested HTTP return code for this status, 0 if not set.
	// +optional
	Code                 *int32   `protobuf:"varint,6,opt,name=code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{30}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetMetadata() *ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Status) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Status) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Status) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *Status) GetDetails() *StatusDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Status) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// StatusCause provides more information about an api.Status failure, including
// cases when multiple errors are encountered.
type StatusCause struct {
	// A machine-readable description of the cause of the error. If this value is
	// empty there is no information available.
	// +optional
	Reason *string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	// A human-readable description of the cause of the error.  This field may be
	// presented as-is to a reader.
	// +optional
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// The field of the resource that has caused this error, as named by its JSON
	// serialization. May include dot and postfix notation for nested attributes.
	// Arrays are zero-indexed.  Fields may appear more than once in an array of
	// causes due to fields having multiple errors.
	// Optional.
	//
	// Examples:
	//   "name" - the field "name" on the current resource
	//   "items[0].name" - the field "name" on the first array entry in "items"
	// +optional
	Field                *string  `protobuf:"bytes,3,opt,name=field" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusCause) Reset()         { *m = StatusCause{} }
func (m *StatusCause) String() string { return proto.CompactTextString(m) }
func (*StatusCause) ProtoMessage()    {}
func (*StatusCause) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{31}
}
func (m *StatusCause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusCause.Unmarshal(m, b)
}
func (m *StatusCause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusCause.Marshal(b, m, deterministic)
}
func (dst *StatusCause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusCause.Merge(dst, src)
}
func (m *StatusCause) XXX_Size() int {
	return xxx_messageInfo_StatusCause.Size(m)
}
func (m *StatusCause) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusCause.DiscardUnknown(m)
}

var xxx_messageInfo_StatusCause proto.InternalMessageInfo

func (m *StatusCause) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *StatusCause) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *StatusCause) GetField() string {
	if m != nil && m.Field != nil {
		return *m.Field
	}
	return ""
}

// StatusDetails is a set of additional properties that MAY be set by the
// server to provide additional information about a response. The Reason
// field of a Status object defines what attributes will be set. Clients
// must ignore fields that do not match the defined type of each attribute,
// and should assume that any attribute may be empty, invalid, or under
// defined.
type StatusDetails struct {
	// The name attribute of the resource associated with the status StatusReason
	// (when there is a single name which can be described).
	// +optional
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The group attribute of the resource associated with the status StatusReason.
	// +optional
	Group *string `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
	// The kind attribute of the resource associated with the status StatusReason.
	// On some operations may differ from the requested resource Kind.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Kind *string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// UID of the resource.
	// (when there is a single resource which can be described).
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	// +optional
	Uid *string `protobuf:"bytes,6,opt,name=uid" json:"uid,omitempty"`
	// The Causes array includes more details associated with the StatusReason
	// failure. Not all StatusReasons may provide detailed causes.
	// +optional
	Causes []*StatusCause `protobuf:"bytes,4,rep,name=causes" json:"causes,omitempty"`
	// If specified, the time in seconds before the operation should be retried. Some errors may indicate
	// the client must take an alternate action - for those errors this field may indicate how long to wait
	// before taking the alternate action.
	// +optional
	RetryAfterSeconds    *int32   `protobuf:"varint,5,opt,name=retryAfterSeconds" json:"retryAfterSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusDetails) Reset()         { *m = StatusDetails{} }
func (m *StatusDetails) String() string { return proto.CompactTextString(m) }
func (*StatusDetails) ProtoMessage()    {}
func (*StatusDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{32}
}
func (m *StatusDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDetails.Unmarshal(m, b)
}
func (m *StatusDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDetails.Marshal(b, m, deterministic)
}
func (dst *StatusDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDetails.Merge(dst, src)
}
func (m *StatusDetails) XXX_Size() int {
	return xxx_messageInfo_StatusDetails.Size(m)
}
func (m *StatusDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDetails.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDetails proto.InternalMessageInfo

func (m *StatusDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StatusDetails) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *StatusDetails) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *StatusDetails) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *StatusDetails) GetCauses() []*StatusCause {
	if m != nil {
		return m.Causes
	}
	return nil
}

func (m *StatusDetails) GetRetryAfterSeconds() int32 {
	if m != nil && m.RetryAfterSeconds != nil {
		return *m.RetryAfterSeconds
	}
	return 0
}

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package offers.
//
// +protobuf.options.marshal=false
// +protobuf.as=Timestamp
// +protobuf.options.(gogoproto.goproto_stringer)=false
type Time struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive. This field may be limited in precision depending on context.
	Nanos                *int32   `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{33}
}
func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (dst *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(dst, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Time) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

// Timestamp is a struct that is equivalent to Time, but intended for
// protobuf marshalling/unmarshalling. It is generated into a serialization
// that matches Time. Do not use in Go structs.
type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive. This field may be limited in precision depending on context.
	Nanos                *int32   `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{34}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

// TypeMeta describes an individual object in an API response or request
// with strings representing the type of the object and its API schema version.
// Structures that are versioned or persisted should inline TypeMeta.
//
// +k8s:deepcopy-gen=false
type TypeMeta struct {
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	// +optional
	ApiVersion           *string  `protobuf:"bytes,2,opt,name=apiVersion" json:"apiVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeMeta) Reset()         { *m = TypeMeta{} }
func (m *TypeMeta) String() string { return proto.CompactTextString(m) }
func (*TypeMeta) ProtoMessage()    {}
func (*TypeMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{35}
}
func (m *TypeMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeMeta.Unmarshal(m, b)
}
func (m *TypeMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeMeta.Marshal(b, m, deterministic)
}
func (dst *TypeMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeMeta.Merge(dst, src)
}
func (m *TypeMeta) XXX_Size() int {
	return xxx_messageInfo_TypeMeta.Size(m)
}
func (m *TypeMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TypeMeta proto.InternalMessageInfo

func (m *TypeMeta) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *TypeMeta) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

// UpdateOptions may be provided when updating an API object.
type UpdateOptions struct {
	// When present, indicates that modifications should not be
	// persisted. An invalid or unrecognized dryRun directive will
	// result in an error response and no further processing of the
	// request. Valid values are:
	// - All: all dry run stages will be processed
	// +optional
	DryRun               []string `protobuf:"bytes,1,rep,name=dryRun" json:"dryRun,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOptions) Reset()         { *m = UpdateOptions{} }
func (m *UpdateOptions) String() string { return proto.CompactTextString(m) }
func (*UpdateOptions) ProtoMessage()    {}
func (*UpdateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{36}
}
func (m *UpdateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOptions.Unmarshal(m, b)
}
func (m *UpdateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOptions.Marshal(b, m, deterministic)
}
func (dst *UpdateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOptions.Merge(dst, src)
}
func (m *UpdateOptions) XXX_Size() int {
	return xxx_messageInfo_UpdateOptions.Size(m)
}
func (m *UpdateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOptions proto.InternalMessageInfo

func (m *UpdateOptions) GetDryRun() []string {
	if m != nil {
		return m.DryRun
	}
	return nil
}

// Verbs masks the value so protobuf can generate
//
// +protobuf.nullable=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
type Verbs struct {
	Items                []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Verbs) Reset()         { *m = Verbs{} }
func (m *Verbs) String() string { return proto.CompactTextString(m) }
func (*Verbs) ProtoMessage()    {}
func (*Verbs) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{37}
}
func (m *Verbs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Verbs.Unmarshal(m, b)
}
func (m *Verbs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Verbs.Marshal(b, m, deterministic)
}
func (dst *Verbs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Verbs.Merge(dst, src)
}
func (m *Verbs) XXX_Size() int {
	return xxx_messageInfo_Verbs.Size(m)
}
func (m *Verbs) XXX_DiscardUnknown() {
	xxx_messageInfo_Verbs.DiscardUnknown(m)
}

var xxx_messageInfo_Verbs proto.InternalMessageInfo

func (m *Verbs) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Event represents a single event to a watched resource.
//
// +protobuf=true
// +k8s:deepcopy-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type WatchEvent struct {
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Object is:
	//  * If Type is Added or Modified: the new state of the object.
	//  * If Type is Deleted: the state of the object immediately before deletion.
	//  * If Type is Error: *Status is recommended; other types may make sense
	//    depending on context.
	Object               *runtime.RawExtension `protobuf:"bytes,2,opt,name=object" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WatchEvent) Reset()         { *m = WatchEvent{} }
func (m *WatchEvent) String() string { return proto.CompactTextString(m) }
func (*WatchEvent) ProtoMessage()    {}
func (*WatchEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b8152b30a394916d, []int{38}
}
func (m *WatchEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchEvent.Unmarshal(m, b)
}
func (m *WatchEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchEvent.Marshal(b, m, deterministic)
}
func (dst *WatchEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchEvent.Merge(dst, src)
}
func (m *WatchEvent) XXX_Size() int {
	return xxx_messageInfo_WatchEvent.Size(m)
}
func (m *WatchEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchEvent proto.InternalMessageInfo

func (m *WatchEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *WatchEvent) GetObject() *runtime.RawExtension {
	if m != nil {
		return m.Object
	}
	return nil
}

func init() {
	proto.RegisterType((*APIGroup)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup")
	proto.RegisterType((*APIGroupList)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.APIGroupList")
	proto.RegisterType((*APIResource)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.APIResource")
	proto.RegisterType((*APIResourceList)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList")
	proto.RegisterType((*APIVersions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.APIVersions")
	proto.RegisterType((*CreateOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.CreateOptions")
	proto.RegisterType((*DeleteOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions")
	proto.RegisterType((*Duration)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Duration")
	proto.RegisterType((*ExportOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ExportOptions")
	proto.RegisterType((*GetOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GetOptions")
	proto.RegisterType((*GroupKind)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind")
	proto.RegisterType((*GroupResource)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupResource")
	proto.RegisterType((*GroupVersion)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersion")
	proto.RegisterType((*GroupVersionForDiscovery)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery")
	proto.RegisterType((*GroupVersionKind)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind")
	proto.RegisterType((*GroupVersionResource)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource")
	proto.RegisterType((*Initializer)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Initializer")
	proto.RegisterType((*Initializers)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Initializers")
	proto.RegisterType((*LabelSelector)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector.MatchLabelsEntry")
	proto.RegisterType((*LabelSelectorRequirement)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement")
	proto.RegisterType((*List)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.List")
	proto.RegisterType((*ListMeta)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta")
	proto.RegisterType((*ListOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions")
	proto.RegisterType((*MicroTime)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime")
	proto.RegisterType((*ObjectMeta)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.LabelsEntry")
	proto.RegisterType((*OwnerReference)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference")
	proto.RegisterType((*Patch)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Patch")
	proto.RegisterType((*Preconditions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Preconditions")
	proto.RegisterType((*RootPaths)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.RootPaths")
	proto.RegisterType((*ServerAddressByClientCIDR)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR")
	proto.RegisterType((*Status)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Status")
	proto.RegisterType((*StatusCause)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause")
	proto.RegisterType((*StatusDetails)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails")
	proto.RegisterType((*Time)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Time")
	proto.RegisterType((*Timestamp)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Timestamp")
	proto.RegisterType((*TypeMeta)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta")
	proto.RegisterType((*UpdateOptions)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.UpdateOptions")
	proto.RegisterType((*Verbs)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.Verbs")
	proto.RegisterType((*WatchEvent)(nil), "k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto", fileDescriptor_generated_b8152b30a394916d)
}

var fileDescriptor_generated_b8152b30a394916d = []byte{
	// 1796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x6e, 0x23, 0x49,
	0x15, 0x96, 0x3b, 0xb6, 0x63, 0x1f, 0xc7, 0x33, 0xd9, 0xd6, 0x68, 0x65, 0x2c, 0x58, 0x65, 0x5a,
	0xab, 0x25, 0x5a, 0x76, 0x6d, 0x65, 0x80, 0xd5, 0xc2, 0x42, 0x50, 0x36, 0xce, 0x8e, 0xc2, 0xce,
	0x30, 0x51, 0xcd, 0x4c, 0x18, 0x16, 0x09, 0x51, 0xe9, 0xae, 0x38, 0x35, 0x69, 0x77, 0x35, 0x55,
	0xd5, 0x9e, 0x31, 0x37, 0x88, 0x1b, 0xae, 0xb8, 0xe7, 0x1a, 0x71, 0x81, 0x84, 0x78, 0x02, 0x9e,
	0x84, 0x37, 0xe0, 0x2d, 0x10, 0xaa, 0xbf, 0x76, 0xb5, 0x7f, 0x32, 0xce, 0x68, 0xb8, 0xeb, 0x73,
	0xaa, 0xce, 0x57, 0xa7, 0xce, 0x7f, 0x35, 0xbc, 0x18, 0x53, 0x79, 0x55, 0x5c, 0x0c, 0x62, 0x36,
	0x19, 0x0a, 0x96, 0xb2, 0x4f, 0x29, 0x1b, 0x8a, 0x22, 0x27, 0x7c, 0x9c, 0x32, 0x36, 0x9c, 0x92,
	0x2c, 0x61, 0x7c, 0x78, 0xfd, 0xb9, 0x18, 0x50, 0x36, 0xc4, 0x39, 0x9d, 0xe0, 0xf8, 0x8a, 0x66,
	0x84, 0xcf, 0x86, 0xf9, 0xf5, 0x58, 0x31, 0xc4, 0x70, 0x42, 0x24, 0x1e, 0x4e, 0x0f, 0x86, 0x63,
	0x92, 0x11, 0x8e, 0x25, 0x49, 0x06, 0x39, 0x67, 0x92, 0x85, 0x1f, 0x1a, 0xa9, 0x81, 0x2f, 0x35,
	0xc8, 0xaf, 0xc7, 0x8a, 0x21, 0x06, 0x4a, 0x6a, 0x30, 0x3d, 0xe8, 0xaf, 0xc5, 0xe6, 0x45, 0x26,
	0xe9, 0x84, 0x2c, 0xc2, 0xf6, 0x3f, 0x7b, 0x93, 0x80, 0x88, 0xaf, 0xc8, 0x04, 0x2f, 0xca, 0x45,
	0xff, 0x09, 0xa0, 0x75, 0x74, 0x76, 0xfa, 0x90, 0xb3, 0x22, 0x0f, 0x43, 0xa8, 0x67, 0x78, 0x42,
	0x7a, 0xb5, 0xbd, 0xda, 0x7e, 0x1b, 0xe9, 0xef, 0xf0, 0x1b, 0x68, 0x4d, 0x09, 0x17, 0x94, 0x65,
	0xa2, 0x17, 0xec, 0x6d, 0xed, 0x77, 0x1e, 0x1c, 0x0e, 0x36, 0xb9, 0xc2, 0x40, 0x43, 0x9e, 0x1b,
	0xd1, 0xaf, 0x18, 0x1f, 0x51, 0x11, 0xb3, 0x29, 0xe1, 0x33, 0x54, 0xe2, 0x85, 0x2f, 0x61, 0x37,
	0xe7, 0xe4, 0x92, 0x70, 0x4e, 0x12, 0xbb, 0xb3, 0xb7, 0xb5, 0x57, 0x7b, 0x07, 0x67, 0x2c, 0xe1,
	0x86, 0x7f, 0x80, 0xbe, 0x20, 0x7c, 0x4a, 0xf8, 0x51, 0x92, 0x70, 0x22, 0xc4, 0x97, 0xb3, 0xe3,
	0x94, 0x92, 0x4c, 0x1e, 0x9f, 0x8e, 0x90, 0xe8, 0xd5, 0xf5, 0xcd, 0x7e, 0xb6, 0xd9, 0xa9, 0x4f,
	0xd7, 0xe1, 0xa0, 0x1b, 0x8e, 0x88, 0xce, 0x61, 0xc7, 0x19, 0xfa, 0x11, 0x15, 0x32, 0xfc, 0x0a,
	0x9a, 0x63, 0x45, 0x88, 0x5e, 0x4d, 0x1f, 0x3e, 0xd8, 0xec, 0x70, 0x87, 0x81, 0xac, 0x74, 0xf4,
	0xcf, 0x00, 0x3a, 0x47, 0x67, 0xa7, 0x88, 0x08, 0x56, 0xf0, 0x98, 0xac, 0x74, 0x62, 0x04, 0x3b,
	0x82, 0x66, 0xe3, 0x22, 0xc5, 0xfc, 0x17, 0x6a, 0xad, 0xa9, 0xd7, 0x2a, 0xbc, 0xf0, 0x03, 0x00,
	0xb5, 0x57, 0xe4, 0x38, 0x26, 0x49, 0x2f, 0xd8, 0xab, 0xed, 0xb7, 0x90, 0xc7, 0x09, 0xef, 0x41,
	0x43, 0x9f, 0xd8, 0x6b, 0x69, 0x61, 0x43, 0x84, 0x3d, 0xd8, 0xb6, 0xee, 0xec, 0xb5, 0x35, 0xdf,
	0x91, 0x4a, 0x8f, 0x6b, 0x9a, 0x25, 0xda, 0xa1, 0x6d, 0xa4, 0xbf, 0xc3, 0x23, 0x68, 0x4c, 0x09,
	0xbf, 0x50, 0xf6, 0x56, 0x5e, 0xfe, 0xde, 0x66, 0x57, 0x3e, 0x57, 0x22, 0xc8, 0x48, 0x2a, 0x35,
	0xc5, 0x15, 0xe3, 0x52, 0xe9, 0x2c, 0x7a, 0x8d, 0xbd, 0xad, 0xfd, 0x36, 0xf2, 0x38, 0x6a, 0x3d,
	0xc6, 0x92, 0x8c, 0x19, 0xa7, 0x44, 0xf4, 0xb6, 0xcd, 0xfa, 0x9c, 0x13, 0xfd, 0xa9, 0x06, 0x77,
	0x3d, 0x73, 0x69, 0x57, 0x44, 0xb0, 0x33, 0xf6, 0x22, 0xc9, 0x9a, 0xae, 0xc2, 0x0b, 0x9f, 0x40,
	0x9b, 0x5b, 0x19, 0x97, 0x08, 0x07, 0x1b, 0x7b, 0xcc, 0x9d, 0x86, 0xe6, 0x18, 0xd1, 0x3f, 0x6a,
	0xda, 0x6f, 0xe7, 0x2e, 0x19, 0xfa, 0x5e, 0xa2, 0xd5, 0xb4, 0xda, 0xf3, 0x44, 0xb9, 0x39, 0x78,
	0x83, 0xff, 0x7f, 0xf0, 0xfe, 0x1a, 0xba, 0xc7, 0x9c, 0x60, 0x49, 0x9e, 0xe4, 0x52, 0x6b, 0xf4,
	0x3e, 0x34, 0x13, 0x3e, 0x43, 0x45, 0x66, 0x75, 0xb5, 0x54, 0xf8, 0x00, 0xee, 0xd1, 0x2c, 0x4e,
	0x8b, 0x84, 0x3c, 0xcf, 0x68, 0x46, 0x25, 0xc5, 0x29, 0xfd, 0x7d, 0x19, 0x4f, 0x2b, 0xd7, 0xa2,
	0x3f, 0x07, 0xd0, 0x1d, 0x91, 0x94, 0xcc, 0xd1, 0x07, 0x10, 0x8e, 0x39, 0x8e, 0xc9, 0x19, 0xe1,
	0x94, 0x25, 0x4f, 0x49, 0xcc, 0xb2, 0x44, 0x68, 0xb7, 0x6c, 0xa1, 0x15, 0x2b, 0xe1, 0xaf, 0xa0,
	0x9b, 0x73, 0xfd, 0x4d, 0xa5, 0xad, 0x54, 0x2a, 0xbe, 0xbe, 0xbf, 0x99, 0x49, 0xce, 0x7c, 0x51,
	0x54, 0x45, 0x0a, 0x3f, 0x86, 0x5d, 0xc6, 0xf3, 0x2b, 0x9c, 0x8d, 0x48, 0x4e, 0xb2, 0x84, 0x64,
	0x52, 0xe8, 0x90, 0x6e, 0xa1, 0x25, 0x7e, 0xf8, 0x09, 0xbc, 0x97, 0x73, 0x96, 0xe3, 0x31, 0x56,
	0xb2, 0x67, 0x2c, 0xa5, 0xf1, 0x4c, 0x87, 0x7a, 0x1b, 0x2d, 0x2f, 0x78, 0x26, 0x6c, 0xf8, 0x26,
	0x8c, 0x3e, 0x82, 0xd6, 0xa8, 0xe0, 0x7a, 0xa7, 0x0a, 0x8a, 0xc4, 0x7e, 0xdb, 0xeb, 0x97, 0x74,
	0xf4, 0x53, 0xe8, 0x9e, 0xbc, 0xce, 0x19, 0x97, 0x9e, 0x4f, 0x88, 0x66, 0xe8, 0xad, 0x2d, 0x64,
	0x29, 0x95, 0xb9, 0xe4, 0x35, 0x8e, 0xa5, 0x75, 0x82, 0x21, 0xa2, 0x97, 0x00, 0x0f, 0x49, 0x29,
	0xbb, 0x0f, 0x77, 0x5d, 0x68, 0x56, 0xb3, 0x60, 0x91, 0xfd, 0x56, 0x1e, 0xfe, 0x21, 0xb4, 0x75,
	0xd1, 0xfa, 0x5a, 0x15, 0x81, 0xb2, 0x90, 0xd4, 0xfc, 0x42, 0xe2, 0xca, 0x45, 0x30, 0x2f, 0x17,
	0xd1, 0x11, 0x74, 0x4d, 0xad, 0x73, 0xb5, 0x6d, 0xb5, 0x68, 0x1f, 0x5a, 0x4e, 0x49, 0x2b, 0x5e,
	0xd2, 0xd1, 0x21, 0xec, 0xf8, 0x4d, 0x62, 0x0d, 0x82, 0x57, 0xc5, 0x82, 0x4a, 0x15, 0x8b, 0x5e,
	0x40, 0x6f, 0x5d, 0x93, 0xd9, 0xa8, 0x6c, 0xac, 0x47, 0x3e, 0x87, 0x5d, 0x1f, 0xf9, 0x06, 0xd3,
	0xac, 0xc5, 0x58, 0x55, 0x63, 0xa3, 0x0b, 0xb8, 0xe7, 0xe3, 0xbe, 0xc1, 0x76, 0xeb, 0xb1, 0x7d,
	0xab, 0x6e, 0x2d, 0x58, 0xf5, 0x3e, 0x74, 0x4e, 0x4b, 0xf7, 0xf2, 0x55, 0x2d, 0x27, 0xfa, 0x6b,
	0x0d, 0x76, 0xbc, 0x3d, 0x22, 0xfc, 0x1a, 0xb6, 0x55, 0xa2, 0xd0, 0x6c, 0x6c, 0x1b, 0xde, 0x86,
	0xe5, 0xd3, 0x03, 0x41, 0x0e, 0x21, 0x1c, 0x41, 0x93, 0x13, 0x51, 0xa4, 0xd2, 0x66, 0xfa, 0x27,
	0x1b, 0x16, 0x3f, 0x89, 0x65, 0x21, 0x90, 0x95, 0x8d, 0xfe, 0x16, 0x40, 0xf7, 0x11, 0xbe, 0x20,
	0xe9, 0x53, 0x92, 0x92, 0x58, 0x32, 0x1e, 0x5e, 0x42, 0x67, 0x82, 0x65, 0x7c, 0xa5, 0xb9, 0xae,
	0x33, 0x8f, 0x36, 0x03, 0xaf, 0x20, 0x0d, 0x1e, 0xcf, 0x61, 0x4e, 0x32, 0xc9, 0x67, 0xc8, 0x07,
	0x56, 0x93, 0x8f, 0x26, 0x4f, 0x5e, 0xe7, 0xaa, 0xd8, 0xde, 0x7e, 0xba, 0xaa, 0x1c, 0x86, 0xc8,
	0xef, 0x0a, 0xca, 0xc9, 0x84, 0x64, 0x12, 0x2d, 0xe1, 0xf6, 0x0f, 0x61, 0x77, 0x51, 0x99, 0x70,
	0x17, 0xb6, 0xae, 0xc9, 0xcc, 0x3a, 0x4c, 0x7d, 0xaa, 0xf0, 0x98, 0xe2, 0xb4, 0x70, 0x19, 0x64,
	0x88, 0x1f, 0x07, 0x9f, 0xd7, 0xa2, 0xdf, 0x42, 0x6f, 0xdd, 0x69, 0x2b, 0x70, 0xfa, 0xd0, 0x62,
	0xb9, 0x1a, 0x31, 0x19, 0x77, 0xc9, 0xe8, 0x68, 0x55, 0xa0, 0x34, 0xac, 0xaa, 0xa0, 0xba, 0xe2,
	0x19, 0x2a, 0xfa, 0x4b, 0x0d, 0xea, 0xba, 0x11, 0xff, 0x1c, 0x5a, 0xea, 0x82, 0x09, 0x96, 0x58,
	0x63, 0x6e, 0x3c, 0x15, 0x29, 0xe9, 0xc7, 0x44, 0x62, 0x54, 0xca, 0x87, 0xc7, 0xd0, 0xa0, 0x92,
	0x4c, 0x9c, 0x5d, 0x3f, 0x5d, 0x0b, 0x64, 0x27, 0xe4, 0x01, 0xc2, 0xaf, 0x4e, 0x5e, 0x4b, 0x92,
	0xe9, 0xac, 0x31, 0xb2, 0x51, 0x0a, 0x2d, 0x07, 0xad, 0x6e, 0x26, 0x48, 0x7a, 0xf9, 0x88, 0x66,
	0xd7, 0xf6, 0xc2, 0x25, 0xbd, 0xaa, 0x7c, 0x06, 0xab, 0xcb, 0x67, 0x1f, 0x5a, 0x31, 0xcb, 0x24,
	0xcd, 0x8a, 0x32, 0xad, 0x1c, 0x1d, 0xfd, 0x3d, 0x80, 0x8e, 0x3a, 0xce, 0x15, 0xe5, 0x0f, 0xa1,
	0x9b, 0xfa, 0x96, 0xb7, 0xc7, 0x56, 0x99, 0x6a, 0xd7, 0x25, 0x25, 0x69, 0x52, 0xee, 0x32, 0x27,
	0x57, 0x99, 0x6b, 0xcb, 0x76, 0x73, 0x7d, 0xd9, 0x56, 0x31, 0xf1, 0x4a, 0x45, 0x8e, 0x6d, 0x78,
	0x86, 0x58, 0x75, 0xd7, 0xfa, 0xea, 0xbb, 0x7e, 0x04, 0x77, 0x94, 0x65, 0x59, 0x21, 0x5d, 0x0b,
	0x6f, 0xe8, 0x1e, 0xb6, 0xc0, 0x55, 0xe7, 0xa4, 0x74, 0x42, 0x65, 0x6f, 0x5b, 0x2f, 0x1b, 0xa2,
	0x62, 0xa9, 0xd6, 0x82, 0xa5, 0xbe, 0x80, 0xf6, 0x63, 0x1a, 0x73, 0xf6, 0x8c, 0x4e, 0x88, 0xaa,
	0x61, 0xa2, 0x32, 0x22, 0x38, 0x52, 0x01, 0x67, 0x38, 0x63, 0x66, 0x1e, 0x68, 0x20, 0x43, 0x44,
	0xff, 0xdd, 0x06, 0x78, 0x72, 0xf1, 0x92, 0xc4, 0xc6, 0xaf, 0x6b, 0x06, 0x66, 0xf7, 0x52, 0xd2,
	0x03, 0x73, 0x60, 0x4b, 0xbb, 0xc7, 0x0b, 0xbf, 0x0d, 0xed, 0x72, 0x3c, 0xb6, 0xae, 0x9c, 0x33,
	0x2a, 0xd1, 0x52, 0x5f, 0x88, 0x96, 0x5d, 0xd8, 0x2a, 0x68, 0xa2, 0x8d, 0xd1, 0x46, 0xea, 0x73,
	0x95, 0x4d, 0x9b, 0xab, 0x6d, 0xfa, 0x01, 0x80, 0xd5, 0x42, 0x6d, 0x32, 0x06, 0xf3, 0x38, 0xe1,
	0x0b, 0x78, 0x2f, 0x56, 0x93, 0x1a, 0x65, 0x99, 0x32, 0x8e, 0x90, 0x78, 0x62, 0x46, 0xf6, 0xce,
	0x83, 0x8f, 0x37, 0xcb, 0x25, 0x25, 0x86, 0x96, 0x41, 0x14, 0x72, 0xa2, 0xa6, 0xb4, 0x0a, 0x72,
	0xfb, 0xf6, 0xc8, 0x4b, 0x20, 0xe1, 0x21, 0xf4, 0x1d, 0xf3, 0xe1, 0xf2, 0xd8, 0x07, 0xfa, 0x8e,
	0x37, 0xec, 0x08, 0x9f, 0x41, 0x33, 0x35, 0x05, 0xbb, 0xa3, 0x73, 0xfd, 0x27, 0x9b, 0xa9, 0x33,
	0x8f, 0x81, 0x81, 0x5f, 0xa8, 0x2d, 0x56, 0x18, 0x43, 0x07, 0x67, 0x19, 0x93, 0xd8, 0x8c, 0x94,
	0x3b, 0x1a, 0xfa, 0xe8, 0xd6, 0xd0, 0x47, 0x73, 0x0c, 0xdb, 0x08, 0x3c, 0xd4, 0xf0, 0x37, 0x70,
	0x97, 0xbd, 0xca, 0x08, 0x47, 0xea, 0xb9, 0x4a, 0x32, 0xf5, 0xb8, 0xe8, 0xea, 0x83, 0x7e, 0xb0,
	0xe1, 0x41, 0x15, 0x61, 0xb4, 0x08, 0x16, 0x9e, 0xc3, 0x0e, 0xf5, 0xba, 0x70, 0x6f, 0x57, 0xfb,
	0xeb, 0xc1, 0xad, 0x5b, 0xaf, 0x40, 0x15, 0x1c, 0x15, 0x86, 0x97, 0x34, 0x73, 0xa8, 0x77, 0xcc,
	0x33, 0x6b, 0xce, 0x09, 0xf7, 0xa0, 0x13, 0xa7, 0x85, 0x90, 0xc4, 0x3c, 0x38, 0xef, 0xea, 0x60,
	0xf6, 0x59, 0xfd, 0x1f, 0x41, 0xe7, 0x2d, 0x3b, 0x92, 0xea, 0x68, 0x8b, 0x56, 0xbd, 0x55, 0x47,
	0xfb, 0x57, 0x0d, 0xee, 0x54, 0x0d, 0xa7, 0xee, 0x83, 0x73, 0xea, 0x72, 0xcf, 0x64, 0xa6, 0xc7,
	0x29, 0x27, 0xad, 0x9a, 0xf7, 0x9a, 0x75, 0x85, 0x63, 0xcb, 0x2b, 0x1c, 0x36, 0xb5, 0xeb, 0xf3,
	0xd4, 0x56, 0x0f, 0x52, 0x96, 0x49, 0xce, 0xd2, 0x94, 0x70, 0x5b, 0x6e, 0x3d, 0x8e, 0x7a, 0xeb,
	0x5c, 0xa4, 0x2c, 0xbe, 0xd6, 0x0a, 0x8d, 0x6c, 0x90, 0xeb, 0xc4, 0x6e, 0xa1, 0x15, 0x2b, 0xd1,
	0x36, 0x34, 0xce, 0x54, 0x1d, 0x8e, 0xee, 0x43, 0xb7, 0xf2, 0x72, 0x71, 0x67, 0xd7, 0xca, 0xb3,
	0xa3, 0xfb, 0xd0, 0x46, 0x8c, 0xc9, 0x33, 0x2c, 0xaf, 0x74, 0x31, 0xcc, 0xd5, 0x87, 0x7d, 0xb1,
	0x19, 0x22, 0xc2, 0xf0, 0xad, 0xb5, 0x4f, 0x42, 0xad, 0x7b, 0x49, 0x59, 0x60, 0x8f, 0xa3, 0x5a,
	0x4f, 0xe5, 0xd1, 0xe8, 0x5a, 0x4f, 0x85, 0x19, 0xfd, 0x31, 0x80, 0xa6, 0x99, 0xbc, 0xde, 0x69,
	0x83, 0x7f, 0x1f, 0x9a, 0x42, 0xa3, 0xda, 0x53, 0x2d, 0xa5, 0xda, 0xc1, 0x84, 0x08, 0x81, 0xc7,
	0xce, 0x33, 0x8e, 0x54, 0x12, 0x9c, 0x60, 0x51, 0x36, 0x2c, 0x4b, 0x85, 0x8f, 0x61, 0x3b, 0x21,
	0x12, 0xd3, 0xd4, 0x34, 0xa8, 0x8d, 0x1f, 0x8e, 0xe6, 0x52, 0x23, 0x23, 0x8a, 0x1c, 0x86, 0x8a,
	0x8b, 0x98, 0x25, 0xe6, 0x2f, 0x4b, 0x03, 0xe9, 0xef, 0xe8, 0x39, 0x74, 0xcc, 0xee, 0x63, 0x5c,
	0x08, 0x5f, 0x93, 0x5a, 0x45, 0x13, 0x4f, 0xf7, 0xa0, 0xaa, 0xfb, 0x3d, 0x68, 0xe8, 0x86, 0x6e,
	0xef, 0x64, 0x88, 0xe8, 0xdf, 0x35, 0xe8, 0x56, 0xb4, 0x58, 0xd9, 0xcd, 0xca, 0xd1, 0x3f, 0x58,
	0xf5, 0xe2, 0xf2, 0x7f, 0xd0, 0xd8, 0x10, 0x6a, 0xce, 0xc3, 0xf7, 0x14, 0x9a, 0xb1, 0x52, 0xd9,
	0xfd, 0x23, 0x3b, 0xb8, 0x8d, 0x69, 0xf4, 0x65, 0x91, 0x05, 0x50, 0xcf, 0x63, 0x4e, 0x24, 0x9f,
	0x1d, 0x5d, 0x4a, 0xc2, 0xfd, 0x89, 0xa0, 0x81, 0x96, 0x17, 0xa2, 0xcf, 0xa0, 0xfe, 0x56, 0xdd,
	0xfd, 0x0b, 0x68, 0xcf, 0x3b, 0xcb, 0x6d, 0x85, 0x0f, 0xa1, 0xf5, 0x6c, 0x96, 0x13, 0x37, 0x17,
	0x2c, 0xa5, 0x7c, 0xb5, 0x4c, 0x04, 0x8b, 0x65, 0x22, 0xfa, 0x2e, 0x74, 0x9f, 0xe7, 0xc9, 0x9b,
	0xff, 0x93, 0x44, 0xdf, 0x81, 0x86, 0xfe, 0xad, 0xa5, 0xf4, 0x30, 0x63, 0xaa, 0xcd, 0x4a, 0x33,
	0x77, 0x8e, 0x01, 0x7e, 0xa9, 0xe7, 0xf8, 0xa9, 0x9a, 0xb2, 0x43, 0xa8, 0xcb, 0x59, 0x5e, 0xfa,
	0x54, 0x7d, 0x87, 0x27, 0xd0, 0x64, 0xba, 0xc9, 0xd8, 0x17, 0xd0, 0x2d, 0xe7, 0x5b, 0x2b, 0xfc,
	0x65, 0xfd, 0x9b, 0x60, 0x7a, 0xf0, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x5b, 0xc8, 0xa2,
	0xef, 0x16, 0x00, 0x00,
}
