// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/authorization/v1beta1/generated.proto

package v1beta1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import _ "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ExtraValue masks the value so protobuf can generate
// +protobuf.nullable=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
type ExtraValue struct {
	Items                []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtraValue) Reset()         { *m = ExtraValue{} }
func (m *ExtraValue) String() string { return proto.CompactTextString(m) }
func (*ExtraValue) ProtoMessage()    {}
func (*ExtraValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{0}
}
func (m *ExtraValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraValue.Unmarshal(m, b)
}
func (m *ExtraValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraValue.Marshal(b, m, deterministic)
}
func (dst *ExtraValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraValue.Merge(dst, src)
}
func (m *ExtraValue) XXX_Size() int {
	return xxx_messageInfo_ExtraValue.Size(m)
}
func (m *ExtraValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraValue.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraValue proto.InternalMessageInfo

func (m *ExtraValue) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace.
// Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions
// checking.
type LocalSubjectAccessReview struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace
	// you made the request against.  If empty, it is defaulted.
	Spec *SubjectAccessReviewSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is filled in by the server and indicates whether the request is allowed or not
	// +optional
	Status               *SubjectAccessReviewStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LocalSubjectAccessReview) Reset()         { *m = LocalSubjectAccessReview{} }
func (m *LocalSubjectAccessReview) String() string { return proto.CompactTextString(m) }
func (*LocalSubjectAccessReview) ProtoMessage()    {}
func (*LocalSubjectAccessReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{1}
}
func (m *LocalSubjectAccessReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalSubjectAccessReview.Unmarshal(m, b)
}
func (m *LocalSubjectAccessReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalSubjectAccessReview.Marshal(b, m, deterministic)
}
func (dst *LocalSubjectAccessReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalSubjectAccessReview.Merge(dst, src)
}
func (m *LocalSubjectAccessReview) XXX_Size() int {
	return xxx_messageInfo_LocalSubjectAccessReview.Size(m)
}
func (m *LocalSubjectAccessReview) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalSubjectAccessReview.DiscardUnknown(m)
}

var xxx_messageInfo_LocalSubjectAccessReview proto.InternalMessageInfo

func (m *LocalSubjectAccessReview) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *LocalSubjectAccessReview) GetSpec() *SubjectAccessReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *LocalSubjectAccessReview) GetStatus() *SubjectAccessReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
type NonResourceAttributes struct {
	// Path is the URL path of the request
	// +optional
	Path *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// Verb is the standard HTTP verb
	// +optional
	Verb                 *string  `protobuf:"bytes,2,opt,name=verb" json:"verb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonResourceAttributes) Reset()         { *m = NonResourceAttributes{} }
func (m *NonResourceAttributes) String() string { return proto.CompactTextString(m) }
func (*NonResourceAttributes) ProtoMessage()    {}
func (*NonResourceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{2}
}
func (m *NonResourceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonResourceAttributes.Unmarshal(m, b)
}
func (m *NonResourceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonResourceAttributes.Marshal(b, m, deterministic)
}
func (dst *NonResourceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonResourceAttributes.Merge(dst, src)
}
func (m *NonResourceAttributes) XXX_Size() int {
	return xxx_messageInfo_NonResourceAttributes.Size(m)
}
func (m *NonResourceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_NonResourceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_NonResourceAttributes proto.InternalMessageInfo

func (m *NonResourceAttributes) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NonResourceAttributes) GetVerb() string {
	if m != nil && m.Verb != nil {
		return *m.Verb
	}
	return ""
}

// NonResourceRule holds information that describes a rule for the non-resource
type NonResourceRule struct {
	// Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
	Verbs []string `protobuf:"bytes,1,rep,name=verbs" json:"verbs,omitempty"`
	// NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full,
	// final step in the path.  "*" means all.
	// +optional
	NonResourceURLs      []string `protobuf:"bytes,2,rep,name=nonResourceURLs" json:"nonResourceURLs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonResourceRule) Reset()         { *m = NonResourceRule{} }
func (m *NonResourceRule) String() string { return proto.CompactTextString(m) }
func (*NonResourceRule) ProtoMessage()    {}
func (*NonResourceRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{3}
}
func (m *NonResourceRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonResourceRule.Unmarshal(m, b)
}
func (m *NonResourceRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonResourceRule.Marshal(b, m, deterministic)
}
func (dst *NonResourceRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonResourceRule.Merge(dst, src)
}
func (m *NonResourceRule) XXX_Size() int {
	return xxx_messageInfo_NonResourceRule.Size(m)
}
func (m *NonResourceRule) XXX_DiscardUnknown() {
	xxx_messageInfo_NonResourceRule.DiscardUnknown(m)
}

var xxx_messageInfo_NonResourceRule proto.InternalMessageInfo

func (m *NonResourceRule) GetVerbs() []string {
	if m != nil {
		return m.Verbs
	}
	return nil
}

func (m *NonResourceRule) GetNonResourceURLs() []string {
	if m != nil {
		return m.NonResourceURLs
	}
	return nil
}

// ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
type ResourceAttributes struct {
	// Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces
	// "" (empty) is defaulted for LocalSubjectAccessReviews
	// "" (empty) is empty for cluster-scoped resources
	// "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
	// +optional
	Namespace *string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	// Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
	// +optional
	Verb *string `protobuf:"bytes,2,opt,name=verb" json:"verb,omitempty"`
	// Group is the API Group of the Resource.  "*" means all.
	// +optional
	Group *string `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// Version is the API Version of the Resource.  "*" means all.
	// +optional
	Version *string `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	// Resource is one of the existing resource types.  "*" means all.
	// +optional
	Resource *string `protobuf:"bytes,5,opt,name=resource" json:"resource,omitempty"`
	// Subresource is one of the existing resource types.  "" means none.
	// +optional
	Subresource *string `protobuf:"bytes,6,opt,name=subresource" json:"subresource,omitempty"`
	// Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
	// +optional
	Name                 *string  `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceAttributes) Reset()         { *m = ResourceAttributes{} }
func (m *ResourceAttributes) String() string { return proto.CompactTextString(m) }
func (*ResourceAttributes) ProtoMessage()    {}
func (*ResourceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{4}
}
func (m *ResourceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceAttributes.Unmarshal(m, b)
}
func (m *ResourceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceAttributes.Marshal(b, m, deterministic)
}
func (dst *ResourceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceAttributes.Merge(dst, src)
}
func (m *ResourceAttributes) XXX_Size() int {
	return xxx_messageInfo_ResourceAttributes.Size(m)
}
func (m *ResourceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceAttributes proto.InternalMessageInfo

func (m *ResourceAttributes) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ResourceAttributes) GetVerb() string {
	if m != nil && m.Verb != nil {
		return *m.Verb
	}
	return ""
}

func (m *ResourceAttributes) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *ResourceAttributes) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ResourceAttributes) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

func (m *ResourceAttributes) GetSubresource() string {
	if m != nil && m.Subresource != nil {
		return *m.Subresource
	}
	return ""
}

func (m *ResourceAttributes) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant,
// may contain duplicates, and possibly be incomplete.
type ResourceRule struct {
	// Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
	Verbs []string `protobuf:"bytes,1,rep,name=verbs" json:"verbs,omitempty"`
	// APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
	// the enumerated resources in any API group will be allowed.  "*" means all.
	// +optional
	ApiGroups []string `protobuf:"bytes,2,rep,name=apiGroups" json:"apiGroups,omitempty"`
	// Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
	//  "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
	// +optional
	Resources []string `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
	// ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
	// +optional
	ResourceNames        []string `protobuf:"bytes,4,rep,name=resourceNames" json:"resourceNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceRule) Reset()         { *m = ResourceRule{} }
func (m *ResourceRule) String() string { return proto.CompactTextString(m) }
func (*ResourceRule) ProtoMessage()    {}
func (*ResourceRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{5}
}
func (m *ResourceRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRule.Unmarshal(m, b)
}
func (m *ResourceRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRule.Marshal(b, m, deterministic)
}
func (dst *ResourceRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRule.Merge(dst, src)
}
func (m *ResourceRule) XXX_Size() int {
	return xxx_messageInfo_ResourceRule.Size(m)
}
func (m *ResourceRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRule.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRule proto.InternalMessageInfo

func (m *ResourceRule) GetVerbs() []string {
	if m != nil {
		return m.Verbs
	}
	return nil
}

func (m *ResourceRule) GetApiGroups() []string {
	if m != nil {
		return m.ApiGroups
	}
	return nil
}

func (m *ResourceRule) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ResourceRule) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

// SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a
// spec.namespace means "in all namespaces".  Self is a special case, because users should always be able
// to check whether they can perform an action
type SelfSubjectAccessReview struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec holds information about the request being evaluated.  user and groups must be empty
	Spec *SelfSubjectAccessReviewSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is filled in by the server and indicates whether the request is allowed or not
	// +optional
	Status               *SubjectAccessReviewStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SelfSubjectAccessReview) Reset()         { *m = SelfSubjectAccessReview{} }
func (m *SelfSubjectAccessReview) String() string { return proto.CompactTextString(m) }
func (*SelfSubjectAccessReview) ProtoMessage()    {}
func (*SelfSubjectAccessReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{6}
}
func (m *SelfSubjectAccessReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfSubjectAccessReview.Unmarshal(m, b)
}
func (m *SelfSubjectAccessReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfSubjectAccessReview.Marshal(b, m, deterministic)
}
func (dst *SelfSubjectAccessReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfSubjectAccessReview.Merge(dst, src)
}
func (m *SelfSubjectAccessReview) XXX_Size() int {
	return xxx_messageInfo_SelfSubjectAccessReview.Size(m)
}
func (m *SelfSubjectAccessReview) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfSubjectAccessReview.DiscardUnknown(m)
}

var xxx_messageInfo_SelfSubjectAccessReview proto.InternalMessageInfo

func (m *SelfSubjectAccessReview) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SelfSubjectAccessReview) GetSpec() *SelfSubjectAccessReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SelfSubjectAccessReview) GetStatus() *SubjectAccessReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes
// and NonResourceAuthorizationAttributes must be set
type SelfSubjectAccessReviewSpec struct {
	// ResourceAuthorizationAttributes describes information for a resource access request
	// +optional
	ResourceAttributes *ResourceAttributes `protobuf:"bytes,1,opt,name=resourceAttributes" json:"resourceAttributes,omitempty"`
	// NonResourceAttributes describes information for a non-resource access request
	// +optional
	NonResourceAttributes *NonResourceAttributes `protobuf:"bytes,2,opt,name=nonResourceAttributes" json:"nonResourceAttributes,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *SelfSubjectAccessReviewSpec) Reset()         { *m = SelfSubjectAccessReviewSpec{} }
func (m *SelfSubjectAccessReviewSpec) String() string { return proto.CompactTextString(m) }
func (*SelfSubjectAccessReviewSpec) ProtoMessage()    {}
func (*SelfSubjectAccessReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{7}
}
func (m *SelfSubjectAccessReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfSubjectAccessReviewSpec.Unmarshal(m, b)
}
func (m *SelfSubjectAccessReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfSubjectAccessReviewSpec.Marshal(b, m, deterministic)
}
func (dst *SelfSubjectAccessReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfSubjectAccessReviewSpec.Merge(dst, src)
}
func (m *SelfSubjectAccessReviewSpec) XXX_Size() int {
	return xxx_messageInfo_SelfSubjectAccessReviewSpec.Size(m)
}
func (m *SelfSubjectAccessReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfSubjectAccessReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SelfSubjectAccessReviewSpec proto.InternalMessageInfo

func (m *SelfSubjectAccessReviewSpec) GetResourceAttributes() *ResourceAttributes {
	if m != nil {
		return m.ResourceAttributes
	}
	return nil
}

func (m *SelfSubjectAccessReviewSpec) GetNonResourceAttributes() *NonResourceAttributes {
	if m != nil {
		return m.NonResourceAttributes
	}
	return nil
}

// SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace.
// The returned list of actions may be incomplete depending on the server's authorization mode,
// and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions,
// or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to
// drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns.
// SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
type SelfSubjectRulesReview struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec holds information about the request being evaluated.
	Spec *SelfSubjectRulesReviewSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is filled in by the server and indicates the set of actions a user can perform.
	// +optional
	Status               *SubjectRulesReviewStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SelfSubjectRulesReview) Reset()         { *m = SelfSubjectRulesReview{} }
func (m *SelfSubjectRulesReview) String() string { return proto.CompactTextString(m) }
func (*SelfSubjectRulesReview) ProtoMessage()    {}
func (*SelfSubjectRulesReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{8}
}
func (m *SelfSubjectRulesReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfSubjectRulesReview.Unmarshal(m, b)
}
func (m *SelfSubjectRulesReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfSubjectRulesReview.Marshal(b, m, deterministic)
}
func (dst *SelfSubjectRulesReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfSubjectRulesReview.Merge(dst, src)
}
func (m *SelfSubjectRulesReview) XXX_Size() int {
	return xxx_messageInfo_SelfSubjectRulesReview.Size(m)
}
func (m *SelfSubjectRulesReview) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfSubjectRulesReview.DiscardUnknown(m)
}

var xxx_messageInfo_SelfSubjectRulesReview proto.InternalMessageInfo

func (m *SelfSubjectRulesReview) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SelfSubjectRulesReview) GetSpec() *SelfSubjectRulesReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SelfSubjectRulesReview) GetStatus() *SubjectRulesReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type SelfSubjectRulesReviewSpec struct {
	// Namespace to evaluate rules for. Required.
	Namespace            *string  `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfSubjectRulesReviewSpec) Reset()         { *m = SelfSubjectRulesReviewSpec{} }
func (m *SelfSubjectRulesReviewSpec) String() string { return proto.CompactTextString(m) }
func (*SelfSubjectRulesReviewSpec) ProtoMessage()    {}
func (*SelfSubjectRulesReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{9}
}
func (m *SelfSubjectRulesReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfSubjectRulesReviewSpec.Unmarshal(m, b)
}
func (m *SelfSubjectRulesReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfSubjectRulesReviewSpec.Marshal(b, m, deterministic)
}
func (dst *SelfSubjectRulesReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfSubjectRulesReviewSpec.Merge(dst, src)
}
func (m *SelfSubjectRulesReviewSpec) XXX_Size() int {
	return xxx_messageInfo_SelfSubjectRulesReviewSpec.Size(m)
}
func (m *SelfSubjectRulesReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfSubjectRulesReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SelfSubjectRulesReviewSpec proto.InternalMessageInfo

func (m *SelfSubjectRulesReviewSpec) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

// SubjectAccessReview checks whether or not a user or group can perform an action.
type SubjectAccessReview struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec holds information about the request being evaluated
	Spec *SubjectAccessReviewSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is filled in by the server and indicates whether the request is allowed or not
	// +optional
	Status               *SubjectAccessReviewStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SubjectAccessReview) Reset()         { *m = SubjectAccessReview{} }
func (m *SubjectAccessReview) String() string { return proto.CompactTextString(m) }
func (*SubjectAccessReview) ProtoMessage()    {}
func (*SubjectAccessReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{10}
}
func (m *SubjectAccessReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectAccessReview.Unmarshal(m, b)
}
func (m *SubjectAccessReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectAccessReview.Marshal(b, m, deterministic)
}
func (dst *SubjectAccessReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectAccessReview.Merge(dst, src)
}
func (m *SubjectAccessReview) XXX_Size() int {
	return xxx_messageInfo_SubjectAccessReview.Size(m)
}
func (m *SubjectAccessReview) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectAccessReview.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectAccessReview proto.InternalMessageInfo

func (m *SubjectAccessReview) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SubjectAccessReview) GetSpec() *SubjectAccessReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SubjectAccessReview) GetStatus() *SubjectAccessReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes
// and NonResourceAuthorizationAttributes must be set
type SubjectAccessReviewSpec struct {
	// ResourceAuthorizationAttributes describes information for a resource access request
	// +optional
	ResourceAttributes *ResourceAttributes `protobuf:"bytes,1,opt,name=resourceAttributes" json:"resourceAttributes,omitempty"`
	// NonResourceAttributes describes information for a non-resource access request
	// +optional
	NonResourceAttributes *NonResourceAttributes `protobuf:"bytes,2,opt,name=nonResourceAttributes" json:"nonResourceAttributes,omitempty"`
	// User is the user you're testing for.
	// If you specify "User" but not "Group", then is it interpreted as "What if User were not a member of any groups
	// +optional
	User *string `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	// Groups is the groups you're testing for.
	// +optional
	Group []string `protobuf:"bytes,4,rep,name=group" json:"group,omitempty"`
	// Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer
	// it needs a reflection here.
	// +optional
	Extra map[string]*ExtraValue `protobuf:"bytes,5,rep,name=extra" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// UID information about the requesting user.
	// +optional
	Uid                  *string  `protobuf:"bytes,6,opt,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubjectAccessReviewSpec) Reset()         { *m = SubjectAccessReviewSpec{} }
func (m *SubjectAccessReviewSpec) String() string { return proto.CompactTextString(m) }
func (*SubjectAccessReviewSpec) ProtoMessage()    {}
func (*SubjectAccessReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{11}
}
func (m *SubjectAccessReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectAccessReviewSpec.Unmarshal(m, b)
}
func (m *SubjectAccessReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectAccessReviewSpec.Marshal(b, m, deterministic)
}
func (dst *SubjectAccessReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectAccessReviewSpec.Merge(dst, src)
}
func (m *SubjectAccessReviewSpec) XXX_Size() int {
	return xxx_messageInfo_SubjectAccessReviewSpec.Size(m)
}
func (m *SubjectAccessReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectAccessReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectAccessReviewSpec proto.InternalMessageInfo

func (m *SubjectAccessReviewSpec) GetResourceAttributes() *ResourceAttributes {
	if m != nil {
		return m.ResourceAttributes
	}
	return nil
}

func (m *SubjectAccessReviewSpec) GetNonResourceAttributes() *NonResourceAttributes {
	if m != nil {
		return m.NonResourceAttributes
	}
	return nil
}

func (m *SubjectAccessReviewSpec) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *SubjectAccessReviewSpec) GetGroup() []string {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *SubjectAccessReviewSpec) GetExtra() map[string]*ExtraValue {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *SubjectAccessReviewSpec) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

// SubjectAccessReviewStatus
type SubjectAccessReviewStatus struct {
	// Allowed is required. True if the action would be allowed, false otherwise.
	Allowed *bool `protobuf:"varint,1,opt,name=allowed" json:"allowed,omitempty"`
	// Denied is optional. True if the action would be denied, otherwise
	// false. If both allowed is false and denied is false, then the
	// authorizer has no opinion on whether to authorize the action. Denied
	// may not be true if Allowed is true.
	// +optional
	Denied *bool `protobuf:"varint,4,opt,name=denied" json:"denied,omitempty"`
	// Reason is optional.  It indicates why a request was allowed or denied.
	// +optional
	Reason *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	// EvaluationError is an indication that some error occurred during the authorization check.
	// It is entirely possible to get an error and be able to continue determine authorization status in spite of it.
	// For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
	// +optional
	EvaluationError      *string  `protobuf:"bytes,3,opt,name=evaluationError" json:"evaluationError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubjectAccessReviewStatus) Reset()         { *m = SubjectAccessReviewStatus{} }
func (m *SubjectAccessReviewStatus) String() string { return proto.CompactTextString(m) }
func (*SubjectAccessReviewStatus) ProtoMessage()    {}
func (*SubjectAccessReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{12}
}
func (m *SubjectAccessReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectAccessReviewStatus.Unmarshal(m, b)
}
func (m *SubjectAccessReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectAccessReviewStatus.Marshal(b, m, deterministic)
}
func (dst *SubjectAccessReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectAccessReviewStatus.Merge(dst, src)
}
func (m *SubjectAccessReviewStatus) XXX_Size() int {
	return xxx_messageInfo_SubjectAccessReviewStatus.Size(m)
}
func (m *SubjectAccessReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectAccessReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectAccessReviewStatus proto.InternalMessageInfo

func (m *SubjectAccessReviewStatus) GetAllowed() bool {
	if m != nil && m.Allowed != nil {
		return *m.Allowed
	}
	return false
}

func (m *SubjectAccessReviewStatus) GetDenied() bool {
	if m != nil && m.Denied != nil {
		return *m.Denied
	}
	return false
}

func (m *SubjectAccessReviewStatus) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *SubjectAccessReviewStatus) GetEvaluationError() string {
	if m != nil && m.EvaluationError != nil {
		return *m.EvaluationError
	}
	return ""
}

// SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on
// the set of authorizers the server is configured with and any errors experienced during evaluation.
// Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission,
// even if that list is incomplete.
type SubjectRulesReviewStatus struct {
	// ResourceRules is the list of actions the subject is allowed to perform on resources.
	// The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
	ResourceRules []*ResourceRule `protobuf:"bytes,1,rep,name=resourceRules" json:"resourceRules,omitempty"`
	// NonResourceRules is the list of actions the subject is allowed to perform on non-resources.
	// The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
	NonResourceRules []*NonResourceRule `protobuf:"bytes,2,rep,name=nonResourceRules" json:"nonResourceRules,omitempty"`
	// Incomplete is true when the rules returned by this call are incomplete. This is most commonly
	// encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
	Incomplete *bool `protobuf:"varint,3,opt,name=incomplete" json:"incomplete,omitempty"`
	// EvaluationError can appear in combination with Rules. It indicates an error occurred during
	// rule evaluation, such as an authorizer that doesn't support rule evaluation, and that
	// ResourceRules and/or NonResourceRules may be incomplete.
	// +optional
	EvaluationError      *string  `protobuf:"bytes,4,opt,name=evaluationError" json:"evaluationError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubjectRulesReviewStatus) Reset()         { *m = SubjectRulesReviewStatus{} }
func (m *SubjectRulesReviewStatus) String() string { return proto.CompactTextString(m) }
func (*SubjectRulesReviewStatus) ProtoMessage()    {}
func (*SubjectRulesReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_b1be2288320dbead, []int{13}
}
func (m *SubjectRulesReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectRulesReviewStatus.Unmarshal(m, b)
}
func (m *SubjectRulesReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectRulesReviewStatus.Marshal(b, m, deterministic)
}
func (dst *SubjectRulesReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectRulesReviewStatus.Merge(dst, src)
}
func (m *SubjectRulesReviewStatus) XXX_Size() int {
	return xxx_messageInfo_SubjectRulesReviewStatus.Size(m)
}
func (m *SubjectRulesReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectRulesReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectRulesReviewStatus proto.InternalMessageInfo

func (m *SubjectRulesReviewStatus) GetResourceRules() []*ResourceRule {
	if m != nil {
		return m.ResourceRules
	}
	return nil
}

func (m *SubjectRulesReviewStatus) GetNonResourceRules() []*NonResourceRule {
	if m != nil {
		return m.NonResourceRules
	}
	return nil
}

func (m *SubjectRulesReviewStatus) GetIncomplete() bool {
	if m != nil && m.Incomplete != nil {
		return *m.Incomplete
	}
	return false
}

func (m *SubjectRulesReviewStatus) GetEvaluationError() string {
	if m != nil && m.EvaluationError != nil {
		return *m.EvaluationError
	}
	return ""
}

func init() {
	proto.RegisterType((*ExtraValue)(nil), "k8s.io.api.authorization.v1beta1.ExtraValue")
	proto.RegisterType((*LocalSubjectAccessReview)(nil), "k8s.io.api.authorization.v1beta1.LocalSubjectAccessReview")
	proto.RegisterType((*NonResourceAttributes)(nil), "k8s.io.api.authorization.v1beta1.NonResourceAttributes")
	proto.RegisterType((*NonResourceRule)(nil), "k8s.io.api.authorization.v1beta1.NonResourceRule")
	proto.RegisterType((*ResourceAttributes)(nil), "k8s.io.api.authorization.v1beta1.ResourceAttributes")
	proto.RegisterType((*ResourceRule)(nil), "k8s.io.api.authorization.v1beta1.ResourceRule")
	proto.RegisterType((*SelfSubjectAccessReview)(nil), "k8s.io.api.authorization.v1beta1.SelfSubjectAccessReview")
	proto.RegisterType((*SelfSubjectAccessReviewSpec)(nil), "k8s.io.api.authorization.v1beta1.SelfSubjectAccessReviewSpec")
	proto.RegisterType((*SelfSubjectRulesReview)(nil), "k8s.io.api.authorization.v1beta1.SelfSubjectRulesReview")
	proto.RegisterType((*SelfSubjectRulesReviewSpec)(nil), "k8s.io.api.authorization.v1beta1.SelfSubjectRulesReviewSpec")
	proto.RegisterType((*SubjectAccessReview)(nil), "k8s.io.api.authorization.v1beta1.SubjectAccessReview")
	proto.RegisterType((*SubjectAccessReviewSpec)(nil), "k8s.io.api.authorization.v1beta1.SubjectAccessReviewSpec")
	proto.RegisterMapType((map[string]*ExtraValue)(nil), "k8s.io.api.authorization.v1beta1.SubjectAccessReviewSpec.ExtraEntry")
	proto.RegisterType((*SubjectAccessReviewStatus)(nil), "k8s.io.api.authorization.v1beta1.SubjectAccessReviewStatus")
	proto.RegisterType((*SubjectRulesReviewStatus)(nil), "k8s.io.api.authorization.v1beta1.SubjectRulesReviewStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/authorization/v1beta1/generated.proto", fileDescriptor_generated_b1be2288320dbead)
}

var fileDescriptor_generated_b1be2288320dbead = []byte{
	// 860 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcd, 0x8e, 0xdc, 0x44,
	0x10, 0x96, 0xe7, 0x67, 0x77, 0xa6, 0x06, 0x94, 0xa8, 0x21, 0x89, 0x19, 0x22, 0x34, 0xb2, 0x38,
	0xec, 0x01, 0x6c, 0x76, 0x15, 0x41, 0x58, 0x40, 0x28, 0x11, 0x2b, 0x2e, 0x9b, 0x40, 0x7a, 0x03,
	0x87, 0x48, 0x1c, 0x7a, 0xec, 0xca, 0x4c, 0xb3, 0xb6, 0xdb, 0xea, 0x6e, 0x3b, 0x2c, 0x0f, 0x00,
	0x17, 0xa4, 0x9c, 0x79, 0x23, 0x9e, 0x86, 0x03, 0x4f, 0x80, 0xba, 0xdd, 0x33, 0x9e, 0xd9, 0xf1,
	0x66, 0x26, 0x91, 0xf6, 0x04, 0xb7, 0xae, 0x2a, 0xd7, 0x57, 0xd5, 0x9f, 0xbf, 0xee, 0x6a, 0x78,
	0x3a, 0xe3, 0x7a, 0x5e, 0x4e, 0xc3, 0x58, 0x64, 0x91, 0x12, 0xa9, 0xf8, 0x98, 0x8b, 0x48, 0x95,
	0x05, 0xca, 0x59, 0x2a, 0x44, 0x54, 0x61, 0x9e, 0x08, 0x19, 0x9d, 0xdf, 0x57, 0x21, 0x17, 0x11,
	0x2b, 0x78, 0xc4, 0x4a, 0x3d, 0x17, 0x92, 0xff, 0xca, 0x34, 0x17, 0x79, 0x54, 0x1d, 0x4e, 0x51,
	0xb3, 0xc3, 0x68, 0x86, 0x39, 0x4a, 0xa6, 0x31, 0x09, 0x0b, 0x29, 0xb4, 0x20, 0x93, 0x3a, 0x23,
	0x64, 0x05, 0x0f, 0xd7, 0x32, 0x42, 0x97, 0x31, 0xbe, 0xd7, 0x60, 0x66, 0x2c, 0x9e, 0xf3, 0x1c,
	0xe5, 0x45, 0x54, 0x9c, 0xcf, 0x8c, 0x43, 0x45, 0x19, 0x6a, 0x16, 0x55, 0x1b, 0xb8, 0xe3, 0xe8,
	0xaa, 0x2c, 0x59, 0xe6, 0x9a, 0x67, 0xb8, 0x91, 0xf0, 0xe9, 0xb6, 0x04, 0x15, 0xcf, 0x31, 0x63,
	0x97, 0xf3, 0x82, 0x00, 0xe0, 0xe4, 0x17, 0x2d, 0xd9, 0x8f, 0x2c, 0x2d, 0x91, 0xbc, 0x0b, 0x7d,
	0xae, 0x31, 0x53, 0xbe, 0x37, 0xe9, 0x1e, 0x0c, 0x69, 0x6d, 0x04, 0x7f, 0x74, 0xc0, 0x3f, 0x15,
	0x31, 0x4b, 0xcf, 0xca, 0xe9, 0xcf, 0x18, 0xeb, 0x07, 0x71, 0x8c, 0x4a, 0x51, 0xac, 0x38, 0xbe,
	0x20, 0xa7, 0x30, 0x30, 0x9b, 0x48, 0x98, 0x66, 0xbe, 0x37, 0xf1, 0x0e, 0x46, 0x47, 0x9f, 0x84,
	0x0d, 0x29, 0xcb, 0x5e, 0xc2, 0xe2, 0x7c, 0x66, 0x1c, 0x2a, 0x34, 0x5f, 0x87, 0xd5, 0x61, 0xf8,
	0x9d, 0xc5, 0x7a, 0x84, 0x9a, 0xd1, 0x25, 0x02, 0x79, 0x04, 0x3d, 0x55, 0x60, 0xec, 0x77, 0x2c,
	0xd2, 0xe7, 0xe1, 0x36, 0x7a, 0xc3, 0x96, 0x96, 0xce, 0x0a, 0x8c, 0xa9, 0x85, 0x21, 0x67, 0xb0,
	0xa7, 0x34, 0xd3, 0xa5, 0xf2, 0xbb, 0x16, 0xf0, 0x8b, 0x37, 0x03, 0xb4, 0x10, 0xd4, 0x41, 0x05,
	0x5f, 0xc3, 0xad, 0xc7, 0x22, 0xa7, 0xa8, 0x44, 0x29, 0x63, 0x7c, 0xa0, 0xb5, 0xe4, 0xd3, 0x52,
	0xa3, 0x22, 0x04, 0x7a, 0x05, 0xd3, 0x73, 0x4b, 0xc3, 0x90, 0xda, 0xb5, 0xf1, 0x55, 0x28, 0xa7,
	0x76, 0x43, 0x43, 0x6a, 0xd7, 0xc1, 0x13, 0xb8, 0xb1, 0x02, 0x40, 0xcb, 0xd4, 0x12, 0x6f, 0x42,
	0x4b, 0xe2, 0xad, 0x41, 0x0e, 0xe0, 0x46, 0xde, 0x7c, 0xf8, 0x03, 0x3d, 0x55, 0x7e, 0xc7, 0xc6,
	0x2f, 0xbb, 0x83, 0xbf, 0x3c, 0x20, 0x2d, 0x1d, 0xdd, 0x85, 0x61, 0xce, 0x32, 0x54, 0x05, 0x8b,
	0xd1, 0xb5, 0xd5, 0x38, 0xda, 0x7a, 0x33, 0x8d, 0xcc, 0xa4, 0x28, 0x0b, 0x4b, 0xd8, 0x90, 0xd6,
	0x06, 0xf1, 0x61, 0xbf, 0x42, 0xa9, 0xb8, 0xc8, 0xfd, 0x9e, 0xf5, 0x2f, 0x4c, 0x32, 0x86, 0x81,
	0x74, 0x75, 0xfd, 0xbe, 0x0d, 0x2d, 0x6d, 0x32, 0x81, 0x91, 0x2a, 0xa7, 0xcb, 0xf0, 0x9e, 0x0d,
	0xaf, 0xba, 0x4c, 0x07, 0xa6, 0x1d, 0x7f, 0xbf, 0xee, 0xc0, 0xac, 0x83, 0xdf, 0x3c, 0x78, 0x6b,
	0x07, 0x6e, 0xee, 0xc2, 0x90, 0x15, 0xfc, 0x5b, 0xd3, 0xde, 0x82, 0x95, 0xc6, 0x61, 0xa2, 0x8b,
	0x22, 0xe6, 0xdf, 0xdb, 0xe8, 0xd2, 0x41, 0x3e, 0x84, 0xb7, 0x17, 0xc6, 0x63, 0xc3, 0x86, 0xdf,
	0xb3, 0x5f, 0xac, 0x3b, 0x83, 0x97, 0x1d, 0xb8, 0x73, 0x86, 0xe9, 0xf3, 0xeb, 0x57, 0xfd, 0x93,
	0x35, 0xd5, 0x7f, 0xb5, 0x83, 0x48, 0xdb, 0xdb, 0xba, 0x6e, 0xe5, 0xff, 0xe3, 0xc1, 0xfb, 0xaf,
	0x28, 0x4d, 0x12, 0x20, 0x72, 0x43, 0x84, 0x8e, 0x9f, 0x7b, 0xdb, 0x1b, 0xd8, 0x14, 0x30, 0x6d,
	0xc1, 0x23, 0x19, 0xdc, 0xca, 0xdb, 0xce, 0x9f, 0xa3, 0xef, 0xb3, 0xed, 0x85, 0x5a, 0x8f, 0x2f,
	0x6d, 0x47, 0x35, 0xb7, 0xdf, 0xed, 0x95, 0x4d, 0x1b, 0x49, 0x5e, 0x8f, 0x0a, 0xbe, 0x5f, 0x53,
	0xc1, 0x97, 0xaf, 0xa5, 0x82, 0x95, 0xae, 0x56, 0x44, 0x40, 0x2f, 0x89, 0xe0, 0x78, 0x67, 0x11,
	0xac, 0xe2, 0xad, 0x6b, 0xe0, 0x18, 0xc6, 0x57, 0xd7, 0x7d, 0xf5, 0x85, 0x13, 0xfc, 0xde, 0x81,
	0x77, 0xfe, 0x9f, 0x21, 0x86, 0xc5, 0xbf, 0xbb, 0x70, 0xe7, 0xbf, 0x74, 0x8a, 0xcc, 0x4d, 0x5f,
	0x2a, 0x94, 0x6e, 0xac, 0xd8, 0x75, 0x33, 0x6b, 0xea, 0xeb, 0xd7, 0xcd, 0x9a, 0x67, 0xd0, 0x47,
	0xf3, 0x22, 0xf1, 0xfb, 0x93, 0xee, 0xc1, 0xe8, 0xe8, 0x9b, 0x37, 0xfe, 0x7f, 0xa1, 0x7d, 0xd8,
	0x9c, 0xe4, 0x5a, 0x5e, 0xd0, 0x1a, 0x92, 0xdc, 0x84, 0x6e, 0xc9, 0x13, 0x37, 0x89, 0xcc, 0x72,
	0xfc, 0xdc, 0xbd, 0x7f, 0xec, 0x67, 0x26, 0x7e, 0x8e, 0x17, 0x4e, 0xb8, 0x66, 0x49, 0x1e, 0x42,
	0xbf, 0x32, 0x4f, 0x23, 0x47, 0xcb, 0x47, 0xdb, 0xbb, 0x69, 0x9e, 0x53, 0xb4, 0x4e, 0x3d, 0xee,
	0xdc, 0xf7, 0x82, 0x97, 0x1e, 0xbc, 0x77, 0xa5, 0x2c, 0xcc, 0x7c, 0x65, 0x69, 0x2a, 0x5e, 0x60,
	0x62, 0x6b, 0x0f, 0xe8, 0xc2, 0x24, 0xb7, 0x61, 0x2f, 0xc1, 0x9c, 0x63, 0x62, 0x07, 0xef, 0x80,
	0x3a, 0xcb, 0xf8, 0x25, 0x32, 0x25, 0x72, 0x37, 0xbd, 0x9d, 0x65, 0x9e, 0x0c, 0x68, 0xaa, 0xda,
	0x9e, 0x4e, 0xa4, 0x14, 0x0b, 0xca, 0x2f, 0xbb, 0x83, 0x3f, 0x3b, 0xe0, 0x5f, 0x75, 0xda, 0xc9,
	0xd3, 0x66, 0x42, 0xda, 0xa0, 0x9d, 0xbd, 0xa3, 0xa3, 0x70, 0x77, 0xf9, 0x99, 0x34, 0xba, 0x0e,
	0x42, 0x7e, 0x82, 0x9b, 0xf9, 0xfa, 0xc3, 0xa7, 0x1e, 0xdd, 0xa3, 0xa3, 0xc3, 0xd7, 0x92, 0x9b,
	0xc5, 0xde, 0x80, 0x22, 0x1f, 0x00, 0xf0, 0x3c, 0x16, 0x59, 0x91, 0xa2, 0x46, 0xbb, 0xed, 0x01,
	0x5d, 0xf1, 0xb4, 0x71, 0xd3, 0x6b, 0xe5, 0xe6, 0xe1, 0xf0, 0xd9, 0xbe, 0x2b, 0xfb, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x90, 0xea, 0x33, 0xc8, 0x38, 0x0c, 0x00, 0x00,
}
