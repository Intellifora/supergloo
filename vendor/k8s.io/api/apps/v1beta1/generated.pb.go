// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/apps/v1beta1/generated.proto

package v1beta1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v11 "k8s.io/api/core/v1"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import runtime "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"
import intstr "k8s.io/apimachinery/pkg/util/intstr"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the
// release notes for more information.
// ControllerRevision implements an immutable snapshot of state data. Clients
// are responsible for serializing and deserializing the objects that contain
// their internal state.
// Once a ControllerRevision has been successfully created, it can not be updated.
// The API Server will fail validation of all requests that attempt to mutate
// the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both
// the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However,
// it may be subject to name and representation changes in future releases, and clients should not
// depend on its stability. It is primarily for internal use by controllers.
type ControllerRevision struct {
	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Data is the serialized representation of the state.
	Data *runtime.RawExtension `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	// Revision indicates the revision of the state represented by Data.
	Revision             *int64   `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerRevision) Reset()         { *m = ControllerRevision{} }
func (m *ControllerRevision) String() string { return proto.CompactTextString(m) }
func (*ControllerRevision) ProtoMessage()    {}
func (*ControllerRevision) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{0}
}
func (m *ControllerRevision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerRevision.Unmarshal(m, b)
}
func (m *ControllerRevision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerRevision.Marshal(b, m, deterministic)
}
func (dst *ControllerRevision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerRevision.Merge(dst, src)
}
func (m *ControllerRevision) XXX_Size() int {
	return xxx_messageInfo_ControllerRevision.Size(m)
}
func (m *ControllerRevision) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerRevision.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerRevision proto.InternalMessageInfo

func (m *ControllerRevision) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ControllerRevision) GetData() *runtime.RawExtension {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ControllerRevision) GetRevision() int64 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

// ControllerRevisionList is a resource containing a list of ControllerRevision objects.
type ControllerRevisionList struct {
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is the list of ControllerRevisions
	Items                []*ControllerRevision `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ControllerRevisionList) Reset()         { *m = ControllerRevisionList{} }
func (m *ControllerRevisionList) String() string { return proto.CompactTextString(m) }
func (*ControllerRevisionList) ProtoMessage()    {}
func (*ControllerRevisionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{1}
}
func (m *ControllerRevisionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerRevisionList.Unmarshal(m, b)
}
func (m *ControllerRevisionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerRevisionList.Marshal(b, m, deterministic)
}
func (dst *ControllerRevisionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerRevisionList.Merge(dst, src)
}
func (m *ControllerRevisionList) XXX_Size() int {
	return xxx_messageInfo_ControllerRevisionList.Size(m)
}
func (m *ControllerRevisionList) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerRevisionList.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerRevisionList proto.InternalMessageInfo

func (m *ControllerRevisionList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ControllerRevisionList) GetItems() []*ControllerRevision {
	if m != nil {
		return m.Items
	}
	return nil
}

// DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for
// more information.
// Deployment enables declarative updates for Pods and ReplicaSets.
type Deployment struct {
	// Standard object metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Specification of the desired behavior of the Deployment.
	// +optional
	Spec *DeploymentSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Most recently observed status of the Deployment.
	// +optional
	Status               *DeploymentStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{2}
}
func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (dst *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(dst, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Deployment) GetSpec() *DeploymentSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Deployment) GetStatus() *DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// DeploymentCondition describes the state of a deployment at a certain point.
type DeploymentCondition struct {
	// Type of deployment condition.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Status of the condition, one of True, False, Unknown.
	Status *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	// The last time this condition was updated.
	LastUpdateTime *v1.Time `protobuf:"bytes,6,opt,name=lastUpdateTime" json:"lastUpdateTime,omitempty"`
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *v1.Time `protobuf:"bytes,7,opt,name=lastTransitionTime" json:"lastTransitionTime,omitempty"`
	// The reason for the condition's last transition.
	Reason *string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	// A human readable message indicating details about the transition.
	Message              *string  `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploymentCondition) Reset()         { *m = DeploymentCondition{} }
func (m *DeploymentCondition) String() string { return proto.CompactTextString(m) }
func (*DeploymentCondition) ProtoMessage()    {}
func (*DeploymentCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{3}
}
func (m *DeploymentCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentCondition.Unmarshal(m, b)
}
func (m *DeploymentCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentCondition.Marshal(b, m, deterministic)
}
func (dst *DeploymentCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentCondition.Merge(dst, src)
}
func (m *DeploymentCondition) XXX_Size() int {
	return xxx_messageInfo_DeploymentCondition.Size(m)
}
func (m *DeploymentCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentCondition.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentCondition proto.InternalMessageInfo

func (m *DeploymentCondition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DeploymentCondition) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *DeploymentCondition) GetLastUpdateTime() *v1.Time {
	if m != nil {
		return m.LastUpdateTime
	}
	return nil
}

func (m *DeploymentCondition) GetLastTransitionTime() *v1.Time {
	if m != nil {
		return m.LastTransitionTime
	}
	return nil
}

func (m *DeploymentCondition) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *DeploymentCondition) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// DeploymentList is a list of Deployments.
type DeploymentList struct {
	// Standard list metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is the list of Deployments.
	Items                []*Deployment `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeploymentList) Reset()         { *m = DeploymentList{} }
func (m *DeploymentList) String() string { return proto.CompactTextString(m) }
func (*DeploymentList) ProtoMessage()    {}
func (*DeploymentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{4}
}
func (m *DeploymentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentList.Unmarshal(m, b)
}
func (m *DeploymentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentList.Marshal(b, m, deterministic)
}
func (dst *DeploymentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentList.Merge(dst, src)
}
func (m *DeploymentList) XXX_Size() int {
	return xxx_messageInfo_DeploymentList.Size(m)
}
func (m *DeploymentList) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentList.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentList proto.InternalMessageInfo

func (m *DeploymentList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *DeploymentList) GetItems() []*Deployment {
	if m != nil {
		return m.Items
	}
	return nil
}

// DEPRECATED.
// DeploymentRollback stores the information required to rollback a deployment.
type DeploymentRollback struct {
	// Required: This must match the Name of a deployment.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The annotations to be updated to a deployment
	// +optional
	UpdatedAnnotations map[string]string `protobuf:"bytes,2,rep,name=updatedAnnotations" json:"updatedAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The config of this deployment rollback.
	RollbackTo           *RollbackConfig `protobuf:"bytes,3,opt,name=rollbackTo" json:"rollbackTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeploymentRollback) Reset()         { *m = DeploymentRollback{} }
func (m *DeploymentRollback) String() string { return proto.CompactTextString(m) }
func (*DeploymentRollback) ProtoMessage()    {}
func (*DeploymentRollback) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{5}
}
func (m *DeploymentRollback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentRollback.Unmarshal(m, b)
}
func (m *DeploymentRollback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentRollback.Marshal(b, m, deterministic)
}
func (dst *DeploymentRollback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentRollback.Merge(dst, src)
}
func (m *DeploymentRollback) XXX_Size() int {
	return xxx_messageInfo_DeploymentRollback.Size(m)
}
func (m *DeploymentRollback) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentRollback.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentRollback proto.InternalMessageInfo

func (m *DeploymentRollback) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeploymentRollback) GetUpdatedAnnotations() map[string]string {
	if m != nil {
		return m.UpdatedAnnotations
	}
	return nil
}

func (m *DeploymentRollback) GetRollbackTo() *RollbackConfig {
	if m != nil {
		return m.RollbackTo
	}
	return nil
}

// DeploymentSpec is the specification of the desired behavior of the Deployment.
type DeploymentSpec struct {
	// Number of desired pods. This is a pointer to distinguish between explicit
	// zero and not specified. Defaults to 1.
	// +optional
	Replicas *int32 `protobuf:"varint,1,opt,name=replicas" json:"replicas,omitempty"`
	// Label selector for pods. Existing ReplicaSets whose pods are
	// selected by this will be the ones affected by this deployment.
	// +optional
	Selector *v1.LabelSelector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	// Template describes the pods that will be created.
	Template *v11.PodTemplateSpec `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
	// The deployment strategy to use to replace existing pods with new ones.
	// +optional
	Strategy *DeploymentStrategy `protobuf:"bytes,4,opt,name=strategy" json:"strategy,omitempty"`
	// Minimum number of seconds for which a newly created pod should be ready
	// without any of its container crashing, for it to be considered available.
	// Defaults to 0 (pod will be considered available as soon as it is ready)
	// +optional
	MinReadySeconds *int32 `protobuf:"varint,5,opt,name=minReadySeconds" json:"minReadySeconds,omitempty"`
	// The number of old ReplicaSets to retain to allow rollback.
	// This is a pointer to distinguish between explicit zero and not specified.
	// Defaults to 2.
	// +optional
	RevisionHistoryLimit *int32 `protobuf:"varint,6,opt,name=revisionHistoryLimit" json:"revisionHistoryLimit,omitempty"`
	// Indicates that the deployment is paused.
	// +optional
	Paused *bool `protobuf:"varint,7,opt,name=paused" json:"paused,omitempty"`
	// DEPRECATED.
	// The config this deployment is rolling back to. Will be cleared after rollback is done.
	// +optional
	RollbackTo *RollbackConfig `protobuf:"bytes,8,opt,name=rollbackTo" json:"rollbackTo,omitempty"`
	// The maximum time in seconds for a deployment to make progress before it
	// is considered to be failed. The deployment controller will continue to
	// process failed deployments and a condition with a ProgressDeadlineExceeded
	// reason will be surfaced in the deployment status. Note that progress will
	// not be estimated during the time a deployment is paused. Defaults to 600s.
	// +optional
	ProgressDeadlineSeconds *int32   `protobuf:"varint,9,opt,name=progressDeadlineSeconds" json:"progressDeadlineSeconds,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *DeploymentSpec) Reset()         { *m = DeploymentSpec{} }
func (m *DeploymentSpec) String() string { return proto.CompactTextString(m) }
func (*DeploymentSpec) ProtoMessage()    {}
func (*DeploymentSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{6}
}
func (m *DeploymentSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentSpec.Unmarshal(m, b)
}
func (m *DeploymentSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentSpec.Marshal(b, m, deterministic)
}
func (dst *DeploymentSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentSpec.Merge(dst, src)
}
func (m *DeploymentSpec) XXX_Size() int {
	return xxx_messageInfo_DeploymentSpec.Size(m)
}
func (m *DeploymentSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentSpec.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentSpec proto.InternalMessageInfo

func (m *DeploymentSpec) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *DeploymentSpec) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *DeploymentSpec) GetTemplate() *v11.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *DeploymentSpec) GetStrategy() *DeploymentStrategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *DeploymentSpec) GetMinReadySeconds() int32 {
	if m != nil && m.MinReadySeconds != nil {
		return *m.MinReadySeconds
	}
	return 0
}

func (m *DeploymentSpec) GetRevisionHistoryLimit() int32 {
	if m != nil && m.RevisionHistoryLimit != nil {
		return *m.RevisionHistoryLimit
	}
	return 0
}

func (m *DeploymentSpec) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

func (m *DeploymentSpec) GetRollbackTo() *RollbackConfig {
	if m != nil {
		return m.RollbackTo
	}
	return nil
}

func (m *DeploymentSpec) GetProgressDeadlineSeconds() int32 {
	if m != nil && m.ProgressDeadlineSeconds != nil {
		return *m.ProgressDeadlineSeconds
	}
	return 0
}

// DeploymentStatus is the most recently observed status of the Deployment.
type DeploymentStatus struct {
	// The generation observed by the deployment controller.
	// +optional
	ObservedGeneration *int64 `protobuf:"varint,1,opt,name=observedGeneration" json:"observedGeneration,omitempty"`
	// Total number of non-terminated pods targeted by this deployment (their labels match the selector).
	// +optional
	Replicas *int32 `protobuf:"varint,2,opt,name=replicas" json:"replicas,omitempty"`
	// Total number of non-terminated pods targeted by this deployment that have the desired template spec.
	// +optional
	UpdatedReplicas *int32 `protobuf:"varint,3,opt,name=updatedReplicas" json:"updatedReplicas,omitempty"`
	// Total number of ready pods targeted by this deployment.
	// +optional
	ReadyReplicas *int32 `protobuf:"varint,7,opt,name=readyReplicas" json:"readyReplicas,omitempty"`
	// Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
	// +optional
	AvailableReplicas *int32 `protobuf:"varint,4,opt,name=availableReplicas" json:"availableReplicas,omitempty"`
	// Total number of unavailable pods targeted by this deployment. This is the total number of
	// pods that are still required for the deployment to have 100% available capacity. They may
	// either be pods that are running but not yet available or pods that still have not been created.
	// +optional
	UnavailableReplicas *int32 `protobuf:"varint,5,opt,name=unavailableReplicas" json:"unavailableReplicas,omitempty"`
	// Represents the latest available observations of a deployment's current state.
	// +patchMergeKey=type
	// +patchStrategy=merge
	Conditions []*DeploymentCondition `protobuf:"bytes,6,rep,name=conditions" json:"conditions,omitempty"`
	// Count of hash collisions for the Deployment. The Deployment controller uses this
	// field as a collision avoidance mechanism when it needs to create the name for the
	// newest ReplicaSet.
	// +optional
	CollisionCount       *int32   `protobuf:"varint,8,opt,name=collisionCount" json:"collisionCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploymentStatus) Reset()         { *m = DeploymentStatus{} }
func (m *DeploymentStatus) String() string { return proto.CompactTextString(m) }
func (*DeploymentStatus) ProtoMessage()    {}
func (*DeploymentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{7}
}
func (m *DeploymentStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentStatus.Unmarshal(m, b)
}
func (m *DeploymentStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentStatus.Marshal(b, m, deterministic)
}
func (dst *DeploymentStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentStatus.Merge(dst, src)
}
func (m *DeploymentStatus) XXX_Size() int {
	return xxx_messageInfo_DeploymentStatus.Size(m)
}
func (m *DeploymentStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentStatus proto.InternalMessageInfo

func (m *DeploymentStatus) GetObservedGeneration() int64 {
	if m != nil && m.ObservedGeneration != nil {
		return *m.ObservedGeneration
	}
	return 0
}

func (m *DeploymentStatus) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *DeploymentStatus) GetUpdatedReplicas() int32 {
	if m != nil && m.UpdatedReplicas != nil {
		return *m.UpdatedReplicas
	}
	return 0
}

func (m *DeploymentStatus) GetReadyReplicas() int32 {
	if m != nil && m.ReadyReplicas != nil {
		return *m.ReadyReplicas
	}
	return 0
}

func (m *DeploymentStatus) GetAvailableReplicas() int32 {
	if m != nil && m.AvailableReplicas != nil {
		return *m.AvailableReplicas
	}
	return 0
}

func (m *DeploymentStatus) GetUnavailableReplicas() int32 {
	if m != nil && m.UnavailableReplicas != nil {
		return *m.UnavailableReplicas
	}
	return 0
}

func (m *DeploymentStatus) GetConditions() []*DeploymentCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *DeploymentStatus) GetCollisionCount() int32 {
	if m != nil && m.CollisionCount != nil {
		return *m.CollisionCount
	}
	return 0
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type DeploymentStrategy struct {
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	// +optional
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Rolling update config params. Present only if DeploymentStrategyType =
	// RollingUpdate.
	// ---
	// TODO: Update this to follow our convention for oneOf, whatever we decide it
	// to be.
	// +optional
	RollingUpdate        *RollingUpdateDeployment `protobuf:"bytes,2,opt,name=rollingUpdate" json:"rollingUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeploymentStrategy) Reset()         { *m = DeploymentStrategy{} }
func (m *DeploymentStrategy) String() string { return proto.CompactTextString(m) }
func (*DeploymentStrategy) ProtoMessage()    {}
func (*DeploymentStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{8}
}
func (m *DeploymentStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentStrategy.Unmarshal(m, b)
}
func (m *DeploymentStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentStrategy.Marshal(b, m, deterministic)
}
func (dst *DeploymentStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentStrategy.Merge(dst, src)
}
func (m *DeploymentStrategy) XXX_Size() int {
	return xxx_messageInfo_DeploymentStrategy.Size(m)
}
func (m *DeploymentStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentStrategy proto.InternalMessageInfo

func (m *DeploymentStrategy) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DeploymentStrategy) GetRollingUpdate() *RollingUpdateDeployment {
	if m != nil {
		return m.RollingUpdate
	}
	return nil
}

// DEPRECATED.
type RollbackConfig struct {
	// The revision to rollback to. If set to 0, rollback to the last revision.
	// +optional
	Revision             *int64   `protobuf:"varint,1,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackConfig) Reset()         { *m = RollbackConfig{} }
func (m *RollbackConfig) String() string { return proto.CompactTextString(m) }
func (*RollbackConfig) ProtoMessage()    {}
func (*RollbackConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{9}
}
func (m *RollbackConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackConfig.Unmarshal(m, b)
}
func (m *RollbackConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackConfig.Marshal(b, m, deterministic)
}
func (dst *RollbackConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackConfig.Merge(dst, src)
}
func (m *RollbackConfig) XXX_Size() int {
	return xxx_messageInfo_RollbackConfig.Size(m)
}
func (m *RollbackConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackConfig proto.InternalMessageInfo

func (m *RollbackConfig) GetRevision() int64 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

// Spec to control the desired behavior of rolling update.
type RollingUpdateDeployment struct {
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	// +optional
	MaxUnavailable *intstr.IntOrString `protobuf:"bytes,1,opt,name=maxUnavailable" json:"maxUnavailable,omitempty"`
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is atmost 130% of desired pods.
	// +optional
	MaxSurge             *intstr.IntOrString `protobuf:"bytes,2,opt,name=maxSurge" json:"maxSurge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RollingUpdateDeployment) Reset()         { *m = RollingUpdateDeployment{} }
func (m *RollingUpdateDeployment) String() string { return proto.CompactTextString(m) }
func (*RollingUpdateDeployment) ProtoMessage()    {}
func (*RollingUpdateDeployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{10}
}
func (m *RollingUpdateDeployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollingUpdateDeployment.Unmarshal(m, b)
}
func (m *RollingUpdateDeployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollingUpdateDeployment.Marshal(b, m, deterministic)
}
func (dst *RollingUpdateDeployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollingUpdateDeployment.Merge(dst, src)
}
func (m *RollingUpdateDeployment) XXX_Size() int {
	return xxx_messageInfo_RollingUpdateDeployment.Size(m)
}
func (m *RollingUpdateDeployment) XXX_DiscardUnknown() {
	xxx_messageInfo_RollingUpdateDeployment.DiscardUnknown(m)
}

var xxx_messageInfo_RollingUpdateDeployment proto.InternalMessageInfo

func (m *RollingUpdateDeployment) GetMaxUnavailable() *intstr.IntOrString {
	if m != nil {
		return m.MaxUnavailable
	}
	return nil
}

func (m *RollingUpdateDeployment) GetMaxSurge() *intstr.IntOrString {
	if m != nil {
		return m.MaxSurge
	}
	return nil
}

// RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
type RollingUpdateStatefulSetStrategy struct {
	// Partition indicates the ordinal at which the StatefulSet should be
	// partitioned.
	Partition            *int32   `protobuf:"varint,1,opt,name=partition" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollingUpdateStatefulSetStrategy) Reset()         { *m = RollingUpdateStatefulSetStrategy{} }
func (m *RollingUpdateStatefulSetStrategy) String() string { return proto.CompactTextString(m) }
func (*RollingUpdateStatefulSetStrategy) ProtoMessage()    {}
func (*RollingUpdateStatefulSetStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{11}
}
func (m *RollingUpdateStatefulSetStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollingUpdateStatefulSetStrategy.Unmarshal(m, b)
}
func (m *RollingUpdateStatefulSetStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollingUpdateStatefulSetStrategy.Marshal(b, m, deterministic)
}
func (dst *RollingUpdateStatefulSetStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollingUpdateStatefulSetStrategy.Merge(dst, src)
}
func (m *RollingUpdateStatefulSetStrategy) XXX_Size() int {
	return xxx_messageInfo_RollingUpdateStatefulSetStrategy.Size(m)
}
func (m *RollingUpdateStatefulSetStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RollingUpdateStatefulSetStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RollingUpdateStatefulSetStrategy proto.InternalMessageInfo

func (m *RollingUpdateStatefulSetStrategy) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

// Scale represents a scaling request for a resource.
type Scale struct {
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
	// +optional
	Spec *ScaleSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.
	// +optional
	Status               *ScaleStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Scale) Reset()         { *m = Scale{} }
func (m *Scale) String() string { return proto.CompactTextString(m) }
func (*Scale) ProtoMessage()    {}
func (*Scale) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{12}
}
func (m *Scale) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scale.Unmarshal(m, b)
}
func (m *Scale) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scale.Marshal(b, m, deterministic)
}
func (dst *Scale) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scale.Merge(dst, src)
}
func (m *Scale) XXX_Size() int {
	return xxx_messageInfo_Scale.Size(m)
}
func (m *Scale) XXX_DiscardUnknown() {
	xxx_messageInfo_Scale.DiscardUnknown(m)
}

var xxx_messageInfo_Scale proto.InternalMessageInfo

func (m *Scale) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Scale) GetSpec() *ScaleSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Scale) GetStatus() *ScaleStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// ScaleSpec describes the attributes of a scale subresource
type ScaleSpec struct {
	// desired number of instances for the scaled object.
	// +optional
	Replicas             *int32   `protobuf:"varint,1,opt,name=replicas" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScaleSpec) Reset()         { *m = ScaleSpec{} }
func (m *ScaleSpec) String() string { return proto.CompactTextString(m) }
func (*ScaleSpec) ProtoMessage()    {}
func (*ScaleSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{13}
}
func (m *ScaleSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleSpec.Unmarshal(m, b)
}
func (m *ScaleSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleSpec.Marshal(b, m, deterministic)
}
func (dst *ScaleSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleSpec.Merge(dst, src)
}
func (m *ScaleSpec) XXX_Size() int {
	return xxx_messageInfo_ScaleSpec.Size(m)
}
func (m *ScaleSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleSpec proto.InternalMessageInfo

func (m *ScaleSpec) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

// ScaleStatus represents the current status of a scale subresource.
type ScaleStatus struct {
	// actual number of observed instances of the scaled object.
	Replicas *int32 `protobuf:"varint,1,opt,name=replicas" json:"replicas,omitempty"`
	// label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors
	// +optional
	Selector map[string]string `protobuf:"bytes,2,rep,name=selector" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// label selector for pods that should match the replicas count. This is a serializated
	// version of both map-based and more expressive set-based selectors. This is done to
	// avoid introspection in the clients. The string will be in the same format as the
	// query-param syntax. If the target type only supports map-based selectors, both this
	// field and map-based selector field are populated.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	// +optional
	TargetSelector       *string  `protobuf:"bytes,3,opt,name=targetSelector" json:"targetSelector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScaleStatus) Reset()         { *m = ScaleStatus{} }
func (m *ScaleStatus) String() string { return proto.CompactTextString(m) }
func (*ScaleStatus) ProtoMessage()    {}
func (*ScaleStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{14}
}
func (m *ScaleStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleStatus.Unmarshal(m, b)
}
func (m *ScaleStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleStatus.Marshal(b, m, deterministic)
}
func (dst *ScaleStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleStatus.Merge(dst, src)
}
func (m *ScaleStatus) XXX_Size() int {
	return xxx_messageInfo_ScaleStatus.Size(m)
}
func (m *ScaleStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleStatus proto.InternalMessageInfo

func (m *ScaleStatus) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *ScaleStatus) GetSelector() map[string]string {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *ScaleStatus) GetTargetSelector() string {
	if m != nil && m.TargetSelector != nil {
		return *m.TargetSelector
	}
	return ""
}

// DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for
// more information.
// StatefulSet represents a set of pods with consistent identities.
// Identities are defined as:
//  - Network: A single stable DNS and hostname.
//  - Storage: As many VolumeClaims as requested.
// The StatefulSet guarantees that a given network identity will always
// map to the same storage identity.
type StatefulSet struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec defines the desired identities of pods in this set.
	// +optional
	Spec *StatefulSetSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is the current status of Pods in this StatefulSet. This data
	// may be out of date by some window of time.
	// +optional
	Status               *StatefulSetStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatefulSet) Reset()         { *m = StatefulSet{} }
func (m *StatefulSet) String() string { return proto.CompactTextString(m) }
func (*StatefulSet) ProtoMessage()    {}
func (*StatefulSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{15}
}
func (m *StatefulSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSet.Unmarshal(m, b)
}
func (m *StatefulSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSet.Marshal(b, m, deterministic)
}
func (dst *StatefulSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSet.Merge(dst, src)
}
func (m *StatefulSet) XXX_Size() int {
	return xxx_messageInfo_StatefulSet.Size(m)
}
func (m *StatefulSet) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSet.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSet proto.InternalMessageInfo

func (m *StatefulSet) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *StatefulSet) GetSpec() *StatefulSetSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *StatefulSet) GetStatus() *StatefulSetStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// StatefulSetCondition describes the state of a statefulset at a certain point.
type StatefulSetCondition struct {
	// Type of statefulset condition.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Status of the condition, one of True, False, Unknown.
	Status *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	// Last time the condition transitioned from one status to another.
	// +optional
	LastTransitionTime *v1.Time `protobuf:"bytes,3,opt,name=lastTransitionTime" json:"lastTransitionTime,omitempty"`
	// The reason for the condition's last transition.
	// +optional
	Reason *string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	// A human readable message indicating details about the transition.
	// +optional
	Message              *string  `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatefulSetCondition) Reset()         { *m = StatefulSetCondition{} }
func (m *StatefulSetCondition) String() string { return proto.CompactTextString(m) }
func (*StatefulSetCondition) ProtoMessage()    {}
func (*StatefulSetCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{16}
}
func (m *StatefulSetCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetCondition.Unmarshal(m, b)
}
func (m *StatefulSetCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetCondition.Marshal(b, m, deterministic)
}
func (dst *StatefulSetCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetCondition.Merge(dst, src)
}
func (m *StatefulSetCondition) XXX_Size() int {
	return xxx_messageInfo_StatefulSetCondition.Size(m)
}
func (m *StatefulSetCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetCondition.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetCondition proto.InternalMessageInfo

func (m *StatefulSetCondition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StatefulSetCondition) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *StatefulSetCondition) GetLastTransitionTime() *v1.Time {
	if m != nil {
		return m.LastTransitionTime
	}
	return nil
}

func (m *StatefulSetCondition) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *StatefulSetCondition) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// StatefulSetList is a collection of StatefulSets.
type StatefulSetList struct {
	// +optional
	Metadata             *v1.ListMeta   `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items                []*StatefulSet `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StatefulSetList) Reset()         { *m = StatefulSetList{} }
func (m *StatefulSetList) String() string { return proto.CompactTextString(m) }
func (*StatefulSetList) ProtoMessage()    {}
func (*StatefulSetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{17}
}
func (m *StatefulSetList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetList.Unmarshal(m, b)
}
func (m *StatefulSetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetList.Marshal(b, m, deterministic)
}
func (dst *StatefulSetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetList.Merge(dst, src)
}
func (m *StatefulSetList) XXX_Size() int {
	return xxx_messageInfo_StatefulSetList.Size(m)
}
func (m *StatefulSetList) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetList.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetList proto.InternalMessageInfo

func (m *StatefulSetList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *StatefulSetList) GetItems() []*StatefulSet {
	if m != nil {
		return m.Items
	}
	return nil
}

// A StatefulSetSpec is the specification of a StatefulSet.
type StatefulSetSpec struct {
	// replicas is the desired number of replicas of the given Template.
	// These are replicas in the sense that they are instantiations of the
	// same Template, but individual replicas also have a consistent identity.
	// If unspecified, defaults to 1.
	// TODO: Consider a rename of this field.
	// +optional
	Replicas *int32 `protobuf:"varint,1,opt,name=replicas" json:"replicas,omitempty"`
	// selector is a label query over pods that should match the replica count.
	// If empty, defaulted to labels on the pod template.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	// +optional
	Selector *v1.LabelSelector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	// template is the object that describes the pod that will be created if
	// insufficient replicas are detected. Each pod stamped out by the StatefulSet
	// will fulfill this Template, but have a unique identity from the rest
	// of the StatefulSet.
	Template *v11.PodTemplateSpec `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
	// volumeClaimTemplates is a list of claims that pods are allowed to reference.
	// The StatefulSet controller is responsible for mapping network identities to
	// claims in a way that maintains the identity of a pod. Every claim in
	// this list must have at least one matching (by name) volumeMount in one
	// container in the template. A claim in this list takes precedence over
	// any volumes in the template, with the same name.
	// TODO: Define the behavior if a claim already exists with the same name.
	// +optional
	VolumeClaimTemplates []*v11.PersistentVolumeClaim `protobuf:"bytes,4,rep,name=volumeClaimTemplates" json:"volumeClaimTemplates,omitempty"`
	// serviceName is the name of the service that governs this StatefulSet.
	// This service must exist before the StatefulSet, and is responsible for
	// the network identity of the set. Pods get DNS/hostnames that follow the
	// pattern: pod-specific-string.serviceName.default.svc.cluster.local
	// where "pod-specific-string" is managed by the StatefulSet controller.
	ServiceName *string `protobuf:"bytes,5,opt,name=serviceName" json:"serviceName,omitempty"`
	// podManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `OrderedReady`, where pods are created in increasing order (pod-0, then
	// pod-1, etc) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	// The alternative policy is `Parallel` which will create pods in parallel
	// to match the desired scale without waiting, and on scale down will delete
	// all pods at once.
	// +optional
	PodManagementPolicy *string `protobuf:"bytes,6,opt,name=podManagementPolicy" json:"podManagementPolicy,omitempty"`
	// updateStrategy indicates the StatefulSetUpdateStrategy that will be
	// employed to update Pods in the StatefulSet when a revision is made to
	// Template.
	UpdateStrategy *StatefulSetUpdateStrategy `protobuf:"bytes,7,opt,name=updateStrategy" json:"updateStrategy,omitempty"`
	// revisionHistoryLimit is the maximum number of revisions that will
	// be maintained in the StatefulSet's revision history. The revision history
	// consists of all revisions not represented by a currently applied
	// StatefulSetSpec version. The default value is 10.
	RevisionHistoryLimit *int32   `protobuf:"varint,8,opt,name=revisionHistoryLimit" json:"revisionHistoryLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatefulSetSpec) Reset()         { *m = StatefulSetSpec{} }
func (m *StatefulSetSpec) String() string { return proto.CompactTextString(m) }
func (*StatefulSetSpec) ProtoMessage()    {}
func (*StatefulSetSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{18}
}
func (m *StatefulSetSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetSpec.Unmarshal(m, b)
}
func (m *StatefulSetSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetSpec.Marshal(b, m, deterministic)
}
func (dst *StatefulSetSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetSpec.Merge(dst, src)
}
func (m *StatefulSetSpec) XXX_Size() int {
	return xxx_messageInfo_StatefulSetSpec.Size(m)
}
func (m *StatefulSetSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetSpec.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetSpec proto.InternalMessageInfo

func (m *StatefulSetSpec) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *StatefulSetSpec) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *StatefulSetSpec) GetTemplate() *v11.PodTemplateSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *StatefulSetSpec) GetVolumeClaimTemplates() []*v11.PersistentVolumeClaim {
	if m != nil {
		return m.VolumeClaimTemplates
	}
	return nil
}

func (m *StatefulSetSpec) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *StatefulSetSpec) GetPodManagementPolicy() string {
	if m != nil && m.PodManagementPolicy != nil {
		return *m.PodManagementPolicy
	}
	return ""
}

func (m *StatefulSetSpec) GetUpdateStrategy() *StatefulSetUpdateStrategy {
	if m != nil {
		return m.UpdateStrategy
	}
	return nil
}

func (m *StatefulSetSpec) GetRevisionHistoryLimit() int32 {
	if m != nil && m.RevisionHistoryLimit != nil {
		return *m.RevisionHistoryLimit
	}
	return 0
}

// StatefulSetStatus represents the current state of a StatefulSet.
type StatefulSetStatus struct {
	// observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the
	// StatefulSet's generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration *int64 `protobuf:"varint,1,opt,name=observedGeneration" json:"observedGeneration,omitempty"`
	// replicas is the number of Pods created by the StatefulSet controller.
	Replicas *int32 `protobuf:"varint,2,opt,name=replicas" json:"replicas,omitempty"`
	// readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
	ReadyReplicas *int32 `protobuf:"varint,3,opt,name=readyReplicas" json:"readyReplicas,omitempty"`
	// currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version
	// indicated by currentRevision.
	CurrentReplicas *int32 `protobuf:"varint,4,opt,name=currentReplicas" json:"currentReplicas,omitempty"`
	// updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version
	// indicated by updateRevision.
	UpdatedReplicas *int32 `protobuf:"varint,5,opt,name=updatedReplicas" json:"updatedReplicas,omitempty"`
	// currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the
	// sequence [0,currentReplicas).
	CurrentRevision *string `protobuf:"bytes,6,opt,name=currentRevision" json:"currentRevision,omitempty"`
	// updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence
	// [replicas-updatedReplicas,replicas)
	UpdateRevision *string `protobuf:"bytes,7,opt,name=updateRevision" json:"updateRevision,omitempty"`
	// collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller
	// uses this field as a collision avoidance mechanism when it needs to create the name for the
	// newest ControllerRevision.
	// +optional
	CollisionCount *int32 `protobuf:"varint,9,opt,name=collisionCount" json:"collisionCount,omitempty"`
	// Represents the latest available observations of a statefulset's current state.
	// +optional
	// +patchMergeKey=type
	// +patchStrategy=merge
	Conditions           []*StatefulSetCondition `protobuf:"bytes,10,rep,name=conditions" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StatefulSetStatus) Reset()         { *m = StatefulSetStatus{} }
func (m *StatefulSetStatus) String() string { return proto.CompactTextString(m) }
func (*StatefulSetStatus) ProtoMessage()    {}
func (*StatefulSetStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{19}
}
func (m *StatefulSetStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetStatus.Unmarshal(m, b)
}
func (m *StatefulSetStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetStatus.Marshal(b, m, deterministic)
}
func (dst *StatefulSetStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetStatus.Merge(dst, src)
}
func (m *StatefulSetStatus) XXX_Size() int {
	return xxx_messageInfo_StatefulSetStatus.Size(m)
}
func (m *StatefulSetStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetStatus.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetStatus proto.InternalMessageInfo

func (m *StatefulSetStatus) GetObservedGeneration() int64 {
	if m != nil && m.ObservedGeneration != nil {
		return *m.ObservedGeneration
	}
	return 0
}

func (m *StatefulSetStatus) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *StatefulSetStatus) GetReadyReplicas() int32 {
	if m != nil && m.ReadyReplicas != nil {
		return *m.ReadyReplicas
	}
	return 0
}

func (m *StatefulSetStatus) GetCurrentReplicas() int32 {
	if m != nil && m.CurrentReplicas != nil {
		return *m.CurrentReplicas
	}
	return 0
}

func (m *StatefulSetStatus) GetUpdatedReplicas() int32 {
	if m != nil && m.UpdatedReplicas != nil {
		return *m.UpdatedReplicas
	}
	return 0
}

func (m *StatefulSetStatus) GetCurrentRevision() string {
	if m != nil && m.CurrentRevision != nil {
		return *m.CurrentRevision
	}
	return ""
}

func (m *StatefulSetStatus) GetUpdateRevision() string {
	if m != nil && m.UpdateRevision != nil {
		return *m.UpdateRevision
	}
	return ""
}

func (m *StatefulSetStatus) GetCollisionCount() int32 {
	if m != nil && m.CollisionCount != nil {
		return *m.CollisionCount
	}
	return 0
}

func (m *StatefulSetStatus) GetConditions() []*StatefulSetCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

// StatefulSetUpdateStrategy indicates the strategy that the StatefulSet
// controller will use to perform updates. It includes any additional parameters
// necessary to perform the update for the indicated strategy.
type StatefulSetUpdateStrategy struct {
	// Type indicates the type of the StatefulSetUpdateStrategy.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.
	RollingUpdate        *RollingUpdateStatefulSetStrategy `protobuf:"bytes,2,opt,name=rollingUpdate" json:"rollingUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *StatefulSetUpdateStrategy) Reset()         { *m = StatefulSetUpdateStrategy{} }
func (m *StatefulSetUpdateStrategy) String() string { return proto.CompactTextString(m) }
func (*StatefulSetUpdateStrategy) ProtoMessage()    {}
func (*StatefulSetUpdateStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d0351d0b76ee674c, []int{20}
}
func (m *StatefulSetUpdateStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetUpdateStrategy.Unmarshal(m, b)
}
func (m *StatefulSetUpdateStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetUpdateStrategy.Marshal(b, m, deterministic)
}
func (dst *StatefulSetUpdateStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetUpdateStrategy.Merge(dst, src)
}
func (m *StatefulSetUpdateStrategy) XXX_Size() int {
	return xxx_messageInfo_StatefulSetUpdateStrategy.Size(m)
}
func (m *StatefulSetUpdateStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetUpdateStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetUpdateStrategy proto.InternalMessageInfo

func (m *StatefulSetUpdateStrategy) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StatefulSetUpdateStrategy) GetRollingUpdate() *RollingUpdateStatefulSetStrategy {
	if m != nil {
		return m.RollingUpdate
	}
	return nil
}

func init() {
	proto.RegisterType((*ControllerRevision)(nil), "k8s.io.api.apps.v1beta1.ControllerRevision")
	proto.RegisterType((*ControllerRevisionList)(nil), "k8s.io.api.apps.v1beta1.ControllerRevisionList")
	proto.RegisterType((*Deployment)(nil), "k8s.io.api.apps.v1beta1.Deployment")
	proto.RegisterType((*DeploymentCondition)(nil), "k8s.io.api.apps.v1beta1.DeploymentCondition")
	proto.RegisterType((*DeploymentList)(nil), "k8s.io.api.apps.v1beta1.DeploymentList")
	proto.RegisterType((*DeploymentRollback)(nil), "k8s.io.api.apps.v1beta1.DeploymentRollback")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.api.apps.v1beta1.DeploymentRollback.UpdatedAnnotationsEntry")
	proto.RegisterType((*DeploymentSpec)(nil), "k8s.io.api.apps.v1beta1.DeploymentSpec")
	proto.RegisterType((*DeploymentStatus)(nil), "k8s.io.api.apps.v1beta1.DeploymentStatus")
	proto.RegisterType((*DeploymentStrategy)(nil), "k8s.io.api.apps.v1beta1.DeploymentStrategy")
	proto.RegisterType((*RollbackConfig)(nil), "k8s.io.api.apps.v1beta1.RollbackConfig")
	proto.RegisterType((*RollingUpdateDeployment)(nil), "k8s.io.api.apps.v1beta1.RollingUpdateDeployment")
	proto.RegisterType((*RollingUpdateStatefulSetStrategy)(nil), "k8s.io.api.apps.v1beta1.RollingUpdateStatefulSetStrategy")
	proto.RegisterType((*Scale)(nil), "k8s.io.api.apps.v1beta1.Scale")
	proto.RegisterType((*ScaleSpec)(nil), "k8s.io.api.apps.v1beta1.ScaleSpec")
	proto.RegisterType((*ScaleStatus)(nil), "k8s.io.api.apps.v1beta1.ScaleStatus")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.api.apps.v1beta1.ScaleStatus.SelectorEntry")
	proto.RegisterType((*StatefulSet)(nil), "k8s.io.api.apps.v1beta1.StatefulSet")
	proto.RegisterType((*StatefulSetCondition)(nil), "k8s.io.api.apps.v1beta1.StatefulSetCondition")
	proto.RegisterType((*StatefulSetList)(nil), "k8s.io.api.apps.v1beta1.StatefulSetList")
	proto.RegisterType((*StatefulSetSpec)(nil), "k8s.io.api.apps.v1beta1.StatefulSetSpec")
	proto.RegisterType((*StatefulSetStatus)(nil), "k8s.io.api.apps.v1beta1.StatefulSetStatus")
	proto.RegisterType((*StatefulSetUpdateStrategy)(nil), "k8s.io.api.apps.v1beta1.StatefulSetUpdateStrategy")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/apps/v1beta1/generated.proto", fileDescriptor_generated_d0351d0b76ee674c)
}

var fileDescriptor_generated_d0351d0b76ee674c = []byte{
	// 1411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4b, 0x6f, 0xdb, 0xc6,
	0x16, 0x06, 0x2d, 0x2b, 0x96, 0x8e, 0x11, 0x3b, 0x99, 0x18, 0xb1, 0xae, 0x71, 0x17, 0x06, 0x6f,
	0x90, 0xe8, 0xa6, 0x09, 0x95, 0x38, 0x45, 0x90, 0x17, 0xd0, 0x26, 0x4e, 0x90, 0x3e, 0x9c, 0x07,
	0x46, 0x76, 0x50, 0x04, 0x28, 0x8a, 0x11, 0x35, 0x61, 0xa6, 0x26, 0x39, 0xc4, 0xcc, 0x50, 0x8d,
	0x76, 0x41, 0xd1, 0x1f, 0xd0, 0x5d, 0xd1, 0x6d, 0xbb, 0xe8, 0xaa, 0x3f, 0x22, 0xeb, 0x6e, 0xba,
	0x2e, 0xd0, 0xfe, 0x96, 0x62, 0x86, 0x14, 0x45, 0x52, 0xa4, 0xc3, 0x04, 0x06, 0x8a, 0xee, 0x34,
	0x67, 0xce, 0xf7, 0x71, 0xce, 0x63, 0xe6, 0x7c, 0x82, 0xcf, 0x3d, 0xa6, 0x5e, 0xc6, 0x23, 0xc7,
	0xe5, 0xc1, 0x40, 0x72, 0x9f, 0x5f, 0x66, 0x7c, 0x20, 0xe3, 0x88, 0x0a, 0xcf, 0xe7, 0x7c, 0x30,
	0xa1, 0xe1, 0x98, 0x8b, 0xc1, 0xe1, 0x0d, 0xe9, 0x30, 0x3e, 0x20, 0x11, 0x1b, 0x90, 0x28, 0x92,
	0x83, 0xc9, 0xd5, 0x11, 0x55, 0xe4, 0xea, 0xc0, 0xa3, 0x21, 0x15, 0x44, 0xd1, 0xb1, 0x13, 0x09,
	0xae, 0x38, 0xda, 0x4c, 0x1c, 0x1d, 0x12, 0x31, 0x47, 0x3b, 0x3a, 0xa9, 0xe3, 0x96, 0x9d, 0x63,
	0x70, 0xb9, 0xa0, 0x83, 0xc9, 0x02, 0x78, 0xeb, 0xc3, 0xb9, 0x4f, 0x40, 0xdc, 0x97, 0x2c, 0xa4,
	0x62, 0x3a, 0x88, 0x0e, 0x3d, 0x6d, 0x90, 0x83, 0x80, 0x2a, 0x52, 0x85, 0x1a, 0xd4, 0xa1, 0x44,
	0x1c, 0x2a, 0x16, 0xd0, 0x05, 0xc0, 0xf5, 0xb7, 0x01, 0xa4, 0xfb, 0x92, 0x06, 0x64, 0x01, 0x77,
	0xad, 0x0e, 0x17, 0x2b, 0xe6, 0x0f, 0x58, 0xa8, 0xa4, 0x12, 0x65, 0x90, 0xfd, 0xc6, 0x02, 0xb4,
	0xcb, 0x43, 0x25, 0xb8, 0xef, 0x53, 0x81, 0xe9, 0x84, 0x49, 0xc6, 0x43, 0xb4, 0x07, 0x1d, 0x1d,
	0xcf, 0x98, 0x28, 0xd2, 0xb3, 0xb6, 0xad, 0xfe, 0xea, 0xce, 0x15, 0x67, 0x9e, 0xba, 0x8c, 0xde,
	0x89, 0x0e, 0x3d, 0x6d, 0x90, 0x8e, 0xf6, 0x76, 0x26, 0x57, 0x9d, 0x27, 0xa3, 0xaf, 0xa9, 0xab,
	0x1e, 0x51, 0x45, 0x70, 0xc6, 0x80, 0xee, 0xc2, 0xb2, 0x61, 0x5a, 0x32, 0x4c, 0x97, 0x6b, 0x99,
	0xd2, 0x00, 0x1d, 0x4c, 0xbe, 0x79, 0xf0, 0x4a, 0xd1, 0x50, 0x1f, 0x05, 0x1b, 0x28, 0xda, 0x82,
	0x8e, 0x48, 0x0f, 0xd7, 0x6b, 0x6d, 0x5b, 0xfd, 0x16, 0xce, 0xd6, 0xf6, 0x2f, 0x16, 0x9c, 0x5d,
	0x8c, 0x61, 0x8f, 0x49, 0x85, 0x3e, 0x5b, 0x88, 0xc3, 0x69, 0x16, 0x87, 0x46, 0x2f, 0x44, 0xd1,
	0x66, 0x8a, 0x06, 0xb2, 0xb7, 0xb4, 0xdd, 0xea, 0xaf, 0xee, 0x7c, 0xe0, 0xd4, 0xf4, 0x92, 0xb3,
	0x78, 0x16, 0x9c, 0x20, 0xed, 0x3f, 0x2c, 0x80, 0xfb, 0x34, 0xf2, 0xf9, 0x34, 0xa0, 0xa1, 0x3a,
	0xe6, 0x2c, 0xdf, 0x86, 0x65, 0x19, 0x51, 0x37, 0xcd, 0xf2, 0x85, 0xda, 0xe3, 0xcd, 0x0f, 0x30,
	0x8c, 0xa8, 0x8b, 0x0d, 0x08, 0xdd, 0x85, 0x13, 0x52, 0x11, 0x15, 0x4b, 0x93, 0xdd, 0xd5, 0x9d,
	0xff, 0x37, 0x81, 0x1b, 0x00, 0x4e, 0x81, 0xf6, 0xcf, 0x4b, 0x70, 0x66, 0xbe, 0xb9, 0xcb, 0xc3,
	0x31, 0x53, 0xba, 0x97, 0x10, 0x2c, 0xab, 0x69, 0x44, 0x4d, 0x84, 0x5d, 0x6c, 0x7e, 0xa3, 0xb3,
	0xd9, 0xe7, 0x96, 0x8c, 0x35, 0x5d, 0x21, 0x0c, 0x6b, 0x3e, 0x91, 0xea, 0x20, 0x1a, 0x13, 0x45,
	0xf7, 0x59, 0x40, 0x7b, 0x27, 0xcc, 0x71, 0x2e, 0x36, 0xcb, 0x8b, 0x46, 0xe0, 0x12, 0x03, 0x7a,
	0x0e, 0x48, 0x5b, 0xf6, 0x05, 0x09, 0xa5, 0x39, 0x91, 0xe1, 0x5d, 0x79, 0x67, 0xde, 0x0a, 0x16,
	0x1d, 0x87, 0xa0, 0x44, 0xf2, 0xb0, 0xb7, 0x9c, 0xc4, 0x91, 0xac, 0x50, 0x0f, 0x56, 0x02, 0x2a,
	0x25, 0xf1, 0x68, 0xaf, 0x6d, 0x36, 0x66, 0x4b, 0xfb, 0x07, 0x0b, 0xd6, 0xe6, 0x59, 0x3a, 0xf6,
	0x26, 0xbd, 0x59, 0x6c, 0xd2, 0xff, 0x35, 0x28, 0xe3, 0xac, 0x39, 0x7f, 0x5d, 0x02, 0x94, 0xb3,
	0x72, 0xdf, 0x1f, 0x11, 0xf7, 0x50, 0x97, 0x2f, 0x24, 0x41, 0x56, 0x3e, 0xfd, 0x1b, 0x49, 0x40,
	0xb1, 0x49, 0xf0, 0xf8, 0x6e, 0x18, 0x72, 0x45, 0x74, 0x3e, 0x66, 0x9f, 0xdc, 0x6d, 0xf2, 0xc9,
	0x94, 0xdc, 0x39, 0x58, 0x60, 0x79, 0x10, 0x2a, 0x31, 0xc5, 0x15, 0xf4, 0xe8, 0x21, 0x80, 0x48,
	0x71, 0xfb, 0x3c, 0x6d, 0xd3, 0xfa, 0x2e, 0x9f, 0x7d, 0x62, 0x97, 0x87, 0x2f, 0x98, 0x87, 0x73,
	0xd0, 0xad, 0x07, 0xb0, 0x59, 0xf3, 0x5d, 0x74, 0x0a, 0x5a, 0x87, 0x74, 0x9a, 0xc6, 0xaa, 0x7f,
	0xa2, 0x0d, 0x68, 0x4f, 0x88, 0x1f, 0xd3, 0xb4, 0x51, 0x93, 0xc5, 0xad, 0xa5, 0x1b, 0x96, 0xfd,
	0x7a, 0x39, 0x5f, 0x49, 0x7d, 0x97, 0x92, 0x57, 0x2a, 0xf2, 0x99, 0x4b, 0xa4, 0xe1, 0x68, 0xe3,
	0x6c, 0x8d, 0x9e, 0x40, 0x47, 0x52, 0x9f, 0xba, 0x8a, 0x8b, 0xf4, 0x8a, 0x5e, 0x6b, 0x58, 0x65,
	0x32, 0xa2, 0xfe, 0x30, 0x85, 0xe2, 0x8c, 0x04, 0x7d, 0x04, 0x1d, 0x45, 0x83, 0xc8, 0x27, 0x8a,
	0xa6, 0xd9, 0x28, 0x54, 0x5b, 0x4f, 0x31, 0x0d, 0x7f, 0xca, 0xc7, 0xfb, 0xa9, 0x9b, 0xb9, 0xef,
	0x19, 0x08, 0x3d, 0x84, 0x8e, 0x54, 0x7a, 0x18, 0x78, 0x53, 0xd3, 0xbe, 0x47, 0xbd, 0x69, 0xf9,
	0x5b, 0x9f, 0x40, 0x70, 0x06, 0x46, 0x7d, 0x58, 0x0f, 0x58, 0x88, 0x29, 0x19, 0x4f, 0x87, 0xd4,
	0xe5, 0xe1, 0x58, 0x9a, 0xae, 0x6f, 0xe3, 0xb2, 0x19, 0xed, 0xc0, 0xc6, 0xec, 0xd9, 0xfe, 0x84,
	0x49, 0xc5, 0xc5, 0x74, 0x8f, 0x05, 0x4c, 0x99, 0x5b, 0xde, 0xc6, 0x95, 0x7b, 0xfa, 0x8e, 0x45,
	0x24, 0x96, 0x74, 0x6c, 0xee, 0x6c, 0x07, 0xa7, 0xab, 0x52, 0x3f, 0x74, 0xde, 0xbb, 0x1f, 0xd0,
	0x0d, 0xd8, 0x8c, 0x04, 0xf7, 0x04, 0x95, 0xf2, 0x3e, 0x25, 0x63, 0x9f, 0x85, 0x74, 0x16, 0x46,
	0xd7, 0x9c, 0xab, 0x6e, 0xdb, 0xfe, 0xae, 0x05, 0xa7, 0xca, 0xef, 0x21, 0x72, 0x00, 0xf1, 0x91,
	0xa4, 0x62, 0x42, 0xc7, 0x0f, 0x93, 0x69, 0xab, 0x87, 0x96, 0x65, 0x86, 0x56, 0xc5, 0x4e, 0xa1,
	0x69, 0x96, 0x4a, 0x4d, 0xd3, 0x87, 0xf5, 0xf4, 0x26, 0xe0, 0x99, 0x4b, 0x2b, 0xc9, 0x6c, 0xc9,
	0x8c, 0xce, 0xc1, 0x49, 0xa1, 0x33, 0x9d, 0xf9, 0xad, 0x18, 0xbf, 0xa2, 0x11, 0x5d, 0x82, 0xd3,
	0x64, 0x42, 0x98, 0x4f, 0x46, 0x3e, 0xcd, 0x3c, 0x97, 0x8d, 0xe7, 0xe2, 0x06, 0xba, 0x02, 0x67,
	0xe2, 0x70, 0xd1, 0x3f, 0xa9, 0x6d, 0xd5, 0x16, 0xda, 0x03, 0x70, 0x67, 0x0f, 0xbf, 0xec, 0x9d,
	0x30, 0x0f, 0xc2, 0xa5, 0x06, 0x4d, 0x95, 0x4d, 0x0b, 0x9c, 0xc3, 0xa3, 0xf3, 0xb0, 0xe6, 0x72,
	0xdf, 0x37, 0x2d, 0xb1, 0xcb, 0xe3, 0x50, 0x99, 0x2a, 0xb7, 0x71, 0xc9, 0x6a, 0xbf, 0xb6, 0xf2,
	0x2f, 0xd7, 0xac, 0x41, 0x2b, 0x07, 0xcf, 0x33, 0x38, 0xa9, 0x2b, 0xcf, 0x42, 0x2f, 0x79, 0x02,
	0xd2, 0xab, 0x78, 0xe5, 0xc8, 0xbe, 0xc9, 0xbc, 0x73, 0x2f, 0x58, 0x91, 0xc6, 0xbe, 0x04, 0x6b,
	0xc5, 0x0e, 0x2b, 0x28, 0x16, 0xab, 0xa4, 0x58, 0xde, 0x58, 0xb0, 0x59, 0x43, 0x8c, 0xbe, 0x80,
	0xb5, 0x80, 0xbc, 0x3a, 0x98, 0x27, 0xf7, 0xad, 0xd2, 0x40, 0xeb, 0x3b, 0x27, 0xd1, 0x77, 0xce,
	0xa7, 0xa1, 0x7a, 0x22, 0x86, 0x4a, 0xb0, 0xd0, 0xc3, 0x25, 0x1e, 0x23, 0x37, 0xc8, 0xab, 0x61,
	0x2c, 0xbc, 0xaa, 0xb0, 0x9b, 0x71, 0x66, 0x0c, 0xf6, 0xc7, 0xb0, 0x5d, 0x08, 0x41, 0x77, 0x3f,
	0x7d, 0x11, 0xfb, 0x43, 0x3a, 0xaf, 0xc0, 0x7f, 0xa1, 0x1b, 0x11, 0xa1, 0x58, 0x76, 0x03, 0xda,
	0x78, 0x6e, 0xb0, 0x7f, 0xb3, 0xa0, 0x3d, 0x74, 0x49, 0x7a, 0xb2, 0xe3, 0x13, 0x42, 0xd7, 0x0b,
	0x42, 0xc8, 0xae, 0x2d, 0xad, 0xf9, 0x76, 0x4e, 0x03, 0xdd, 0x29, 0x69, 0xa0, 0x73, 0x6f, 0x41,
	0x16, 0xe5, 0xcf, 0x05, 0xe8, 0x66, 0x84, 0x47, 0x0d, 0x02, 0xfb, 0x2f, 0x0b, 0x56, 0x73, 0x04,
	0x47, 0x0e, 0x8d, 0xc7, 0x85, 0xa1, 0xa1, 0x6f, 0xd3, 0x4e, 0x93, 0x43, 0x39, 0xb3, 0x71, 0x91,
	0x4c, 0xd3, 0xf9, 0xcc, 0x38, 0x0f, 0x6b, 0x8a, 0x08, 0x8f, 0xaa, 0x99, 0x83, 0x09, 0xb5, 0x8b,
	0x4b, 0xd6, 0xad, 0xdb, 0x70, 0xb2, 0x40, 0xf1, 0x4e, 0x83, 0xf1, 0x4f, 0x1d, 0xe0, 0xbc, 0x1b,
	0x8e, 0xb9, 0xba, 0x77, 0x0a, 0xd5, 0xed, 0xd7, 0xa7, 0x23, 0xd7, 0x8f, 0xf3, 0x1a, 0xdf, 0x2b,
	0xd5, 0xf8, 0x62, 0x23, 0x7c, 0xb1, 0xd2, 0xbf, 0x5b, 0xb0, 0x91, 0xdb, 0x7d, 0x3f, 0xa5, 0x5b,
	0xad, 0x4a, 0x5b, 0xff, 0x90, 0x2a, 0xfd, 0xd1, 0x82, 0xf5, 0x5c, 0x48, 0xc7, 0x2e, 0x4b, 0x6f,
	0x15, 0x65, 0xe9, 0xb9, 0x26, 0x59, 0x9f, 0xe9, 0xd2, 0x6f, 0x97, 0x0b, 0x67, 0xfb, 0x17, 0x0a,
	0xad, 0x2f, 0x61, 0x63, 0xc2, 0xfd, 0x38, 0xa0, 0xbb, 0x3e, 0x61, 0xc1, 0xcc, 0x49, 0x0f, 0xde,
	0x56, 0xf9, 0xaf, 0x56, 0x46, 0x46, 0x85, 0x64, 0x52, 0xd1, 0x50, 0x3d, 0x9b, 0x23, 0x71, 0x25,
	0x0d, 0xda, 0x86, 0x55, 0x2d, 0x2a, 0x98, 0x4b, 0x1f, 0x6b, 0xa1, 0x9e, 0x94, 0x36, 0x6f, 0xd2,
	0x83, 0x3c, 0xe2, 0xe3, 0x47, 0x24, 0x24, 0x1e, 0xd5, 0x43, 0xe6, 0x29, 0xf7, 0x99, 0x3b, 0x35,
	0xaa, 0xab, 0x8b, 0xab, 0xb6, 0xd0, 0x73, 0x58, 0x8b, 0xd3, 0x67, 0x3d, 0x55, 0x88, 0xc9, 0x1f,
	0xa6, 0x9d, 0x26, 0x95, 0x3b, 0x28, 0x20, 0x71, 0x89, 0xa9, 0x56, 0x04, 0x76, 0xea, 0x45, 0xa0,
	0xfd, 0x53, 0x0b, 0x4e, 0x2f, 0xdc, 0xc8, 0x63, 0x95, 0x5a, 0x0b, 0x02, 0xaa, 0x55, 0x25, 0xa0,
	0xfa, 0xb0, 0xee, 0xc6, 0x42, 0x68, 0x05, 0x50, 0x94, 0x4f, 0x65, 0x73, 0x95, 0x74, 0x6b, 0x57,
	0x4b, 0xb7, 0x3c, 0x67, 0x2a, 0x18, 0x92, 0xca, 0x94, 0xcd, 0xfa, 0xf9, 0x4e, 0xc0, 0x99, 0xe3,
	0x4a, 0xf2, 0x7c, 0x17, 0xad, 0x15, 0xc2, 0xa9, 0x5b, 0x25, 0x9c, 0xd0, 0xa3, 0x82, 0x5c, 0x03,
	0xd3, 0x8e, 0x97, 0x9b, 0x54, 0xb8, 0x52, 0xaf, 0xd9, 0xdf, 0x5b, 0xf0, 0x9f, 0xda, 0x36, 0xa8,
	0x7c, 0x1d, 0xbf, 0xaa, 0x96, 0x63, 0x37, 0x9b, 0xc9, 0xb1, 0x0a, 0xc9, 0x51, 0xd2, 0x65, 0xf7,
	0xba, 0xcf, 0x57, 0x52, 0xe8, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xe4, 0xb5, 0xbe, 0x49,
	0x14, 0x00, 0x00,
}
