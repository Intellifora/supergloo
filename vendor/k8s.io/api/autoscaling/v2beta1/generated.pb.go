// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/autoscaling/v2beta1/generated.proto

package v2beta1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "k8s.io/api/core/v1"
import resource "k8s.io/apimachinery/pkg/api/resource"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import _ "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// CrossVersionObjectReference contains enough information to let you identify the referred resource.
type CrossVersionObjectReference struct {
	// Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// API version of the referent
	// +optional
	ApiVersion           *string  `protobuf:"bytes,3,opt,name=apiVersion" json:"apiVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrossVersionObjectReference) Reset()         { *m = CrossVersionObjectReference{} }
func (m *CrossVersionObjectReference) String() string { return proto.CompactTextString(m) }
func (*CrossVersionObjectReference) ProtoMessage()    {}
func (*CrossVersionObjectReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{0}
}
func (m *CrossVersionObjectReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrossVersionObjectReference.Unmarshal(m, b)
}
func (m *CrossVersionObjectReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrossVersionObjectReference.Marshal(b, m, deterministic)
}
func (dst *CrossVersionObjectReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrossVersionObjectReference.Merge(dst, src)
}
func (m *CrossVersionObjectReference) XXX_Size() int {
	return xxx_messageInfo_CrossVersionObjectReference.Size(m)
}
func (m *CrossVersionObjectReference) XXX_DiscardUnknown() {
	xxx_messageInfo_CrossVersionObjectReference.DiscardUnknown(m)
}

var xxx_messageInfo_CrossVersionObjectReference proto.InternalMessageInfo

func (m *CrossVersionObjectReference) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *CrossVersionObjectReference) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CrossVersionObjectReference) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

// ExternalMetricSource indicates how to scale on a metric not associated with
// any Kubernetes object (for example length of queue in cloud
// messaging service, or QPS from loadbalancer running outside of cluster).
// Exactly one "target" type should be set.
type ExternalMetricSource struct {
	// metricName is the name of the metric in question.
	MetricName *string `protobuf:"bytes,1,opt,name=metricName" json:"metricName,omitempty"`
	// metricSelector is used to identify a specific time series
	// within a given metric.
	// +optional
	MetricSelector *v1.LabelSelector `protobuf:"bytes,2,opt,name=metricSelector" json:"metricSelector,omitempty"`
	// targetValue is the target value of the metric (as a quantity).
	// Mutually exclusive with TargetAverageValue.
	// +optional
	TargetValue *resource.Quantity `protobuf:"bytes,3,opt,name=targetValue" json:"targetValue,omitempty"`
	// targetAverageValue is the target per-pod value of global metric (as a quantity).
	// Mutually exclusive with TargetValue.
	// +optional
	TargetAverageValue   *resource.Quantity `protobuf:"bytes,4,opt,name=targetAverageValue" json:"targetAverageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ExternalMetricSource) Reset()         { *m = ExternalMetricSource{} }
func (m *ExternalMetricSource) String() string { return proto.CompactTextString(m) }
func (*ExternalMetricSource) ProtoMessage()    {}
func (*ExternalMetricSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{1}
}
func (m *ExternalMetricSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalMetricSource.Unmarshal(m, b)
}
func (m *ExternalMetricSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalMetricSource.Marshal(b, m, deterministic)
}
func (dst *ExternalMetricSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalMetricSource.Merge(dst, src)
}
func (m *ExternalMetricSource) XXX_Size() int {
	return xxx_messageInfo_ExternalMetricSource.Size(m)
}
func (m *ExternalMetricSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalMetricSource.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalMetricSource proto.InternalMessageInfo

func (m *ExternalMetricSource) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *ExternalMetricSource) GetMetricSelector() *v1.LabelSelector {
	if m != nil {
		return m.MetricSelector
	}
	return nil
}

func (m *ExternalMetricSource) GetTargetValue() *resource.Quantity {
	if m != nil {
		return m.TargetValue
	}
	return nil
}

func (m *ExternalMetricSource) GetTargetAverageValue() *resource.Quantity {
	if m != nil {
		return m.TargetAverageValue
	}
	return nil
}

// ExternalMetricStatus indicates the current value of a global metric
// not associated with any Kubernetes object.
type ExternalMetricStatus struct {
	// metricName is the name of a metric used for autoscaling in
	// metric system.
	MetricName *string `protobuf:"bytes,1,opt,name=metricName" json:"metricName,omitempty"`
	// metricSelector is used to identify a specific time series
	// within a given metric.
	// +optional
	MetricSelector *v1.LabelSelector `protobuf:"bytes,2,opt,name=metricSelector" json:"metricSelector,omitempty"`
	// currentValue is the current value of the metric (as a quantity)
	CurrentValue *resource.Quantity `protobuf:"bytes,3,opt,name=currentValue" json:"currentValue,omitempty"`
	// currentAverageValue is the current value of metric averaged over autoscaled pods.
	// +optional
	CurrentAverageValue  *resource.Quantity `protobuf:"bytes,4,opt,name=currentAverageValue" json:"currentAverageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ExternalMetricStatus) Reset()         { *m = ExternalMetricStatus{} }
func (m *ExternalMetricStatus) String() string { return proto.CompactTextString(m) }
func (*ExternalMetricStatus) ProtoMessage()    {}
func (*ExternalMetricStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{2}
}
func (m *ExternalMetricStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalMetricStatus.Unmarshal(m, b)
}
func (m *ExternalMetricStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalMetricStatus.Marshal(b, m, deterministic)
}
func (dst *ExternalMetricStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalMetricStatus.Merge(dst, src)
}
func (m *ExternalMetricStatus) XXX_Size() int {
	return xxx_messageInfo_ExternalMetricStatus.Size(m)
}
func (m *ExternalMetricStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalMetricStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalMetricStatus proto.InternalMessageInfo

func (m *ExternalMetricStatus) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *ExternalMetricStatus) GetMetricSelector() *v1.LabelSelector {
	if m != nil {
		return m.MetricSelector
	}
	return nil
}

func (m *ExternalMetricStatus) GetCurrentValue() *resource.Quantity {
	if m != nil {
		return m.CurrentValue
	}
	return nil
}

func (m *ExternalMetricStatus) GetCurrentAverageValue() *resource.Quantity {
	if m != nil {
		return m.CurrentAverageValue
	}
	return nil
}

// HorizontalPodAutoscaler is the configuration for a horizontal pod
// autoscaler, which automatically manages the replica count of any resource
// implementing the scale subresource based on the metrics specified.
type HorizontalPodAutoscaler struct {
	// metadata is the standard object metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// spec is the specification for the behaviour of the autoscaler.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
	// +optional
	Spec *HorizontalPodAutoscalerSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// status is the current information about the autoscaler.
	// +optional
	Status               *HorizontalPodAutoscalerStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *HorizontalPodAutoscaler) Reset()         { *m = HorizontalPodAutoscaler{} }
func (m *HorizontalPodAutoscaler) String() string { return proto.CompactTextString(m) }
func (*HorizontalPodAutoscaler) ProtoMessage()    {}
func (*HorizontalPodAutoscaler) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{3}
}
func (m *HorizontalPodAutoscaler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorizontalPodAutoscaler.Unmarshal(m, b)
}
func (m *HorizontalPodAutoscaler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorizontalPodAutoscaler.Marshal(b, m, deterministic)
}
func (dst *HorizontalPodAutoscaler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorizontalPodAutoscaler.Merge(dst, src)
}
func (m *HorizontalPodAutoscaler) XXX_Size() int {
	return xxx_messageInfo_HorizontalPodAutoscaler.Size(m)
}
func (m *HorizontalPodAutoscaler) XXX_DiscardUnknown() {
	xxx_messageInfo_HorizontalPodAutoscaler.DiscardUnknown(m)
}

var xxx_messageInfo_HorizontalPodAutoscaler proto.InternalMessageInfo

func (m *HorizontalPodAutoscaler) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *HorizontalPodAutoscaler) GetSpec() *HorizontalPodAutoscalerSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *HorizontalPodAutoscaler) GetStatus() *HorizontalPodAutoscalerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// HorizontalPodAutoscalerCondition describes the state of
// a HorizontalPodAutoscaler at a certain point.
type HorizontalPodAutoscalerCondition struct {
	// type describes the current condition
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// status is the status of the condition (True, False, Unknown)
	Status *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	// lastTransitionTime is the last time the condition transitioned from
	// one status to another
	// +optional
	LastTransitionTime *v1.Time `protobuf:"bytes,3,opt,name=lastTransitionTime" json:"lastTransitionTime,omitempty"`
	// reason is the reason for the condition's last transition.
	// +optional
	Reason *string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	// message is a human-readable explanation containing details about
	// the transition
	// +optional
	Message              *string  `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorizontalPodAutoscalerCondition) Reset()         { *m = HorizontalPodAutoscalerCondition{} }
func (m *HorizontalPodAutoscalerCondition) String() string { return proto.CompactTextString(m) }
func (*HorizontalPodAutoscalerCondition) ProtoMessage()    {}
func (*HorizontalPodAutoscalerCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{4}
}
func (m *HorizontalPodAutoscalerCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorizontalPodAutoscalerCondition.Unmarshal(m, b)
}
func (m *HorizontalPodAutoscalerCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorizontalPodAutoscalerCondition.Marshal(b, m, deterministic)
}
func (dst *HorizontalPodAutoscalerCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorizontalPodAutoscalerCondition.Merge(dst, src)
}
func (m *HorizontalPodAutoscalerCondition) XXX_Size() int {
	return xxx_messageInfo_HorizontalPodAutoscalerCondition.Size(m)
}
func (m *HorizontalPodAutoscalerCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_HorizontalPodAutoscalerCondition.DiscardUnknown(m)
}

var xxx_messageInfo_HorizontalPodAutoscalerCondition proto.InternalMessageInfo

func (m *HorizontalPodAutoscalerCondition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *HorizontalPodAutoscalerCondition) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *HorizontalPodAutoscalerCondition) GetLastTransitionTime() *v1.Time {
	if m != nil {
		return m.LastTransitionTime
	}
	return nil
}

func (m *HorizontalPodAutoscalerCondition) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *HorizontalPodAutoscalerCondition) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.
type HorizontalPodAutoscalerList struct {
	// metadata is the standard list metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// items is the list of horizontal pod autoscaler objects.
	Items                []*HorizontalPodAutoscaler `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *HorizontalPodAutoscalerList) Reset()         { *m = HorizontalPodAutoscalerList{} }
func (m *HorizontalPodAutoscalerList) String() string { return proto.CompactTextString(m) }
func (*HorizontalPodAutoscalerList) ProtoMessage()    {}
func (*HorizontalPodAutoscalerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{5}
}
func (m *HorizontalPodAutoscalerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorizontalPodAutoscalerList.Unmarshal(m, b)
}
func (m *HorizontalPodAutoscalerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorizontalPodAutoscalerList.Marshal(b, m, deterministic)
}
func (dst *HorizontalPodAutoscalerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorizontalPodAutoscalerList.Merge(dst, src)
}
func (m *HorizontalPodAutoscalerList) XXX_Size() int {
	return xxx_messageInfo_HorizontalPodAutoscalerList.Size(m)
}
func (m *HorizontalPodAutoscalerList) XXX_DiscardUnknown() {
	xxx_messageInfo_HorizontalPodAutoscalerList.DiscardUnknown(m)
}

var xxx_messageInfo_HorizontalPodAutoscalerList proto.InternalMessageInfo

func (m *HorizontalPodAutoscalerList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *HorizontalPodAutoscalerList) GetItems() []*HorizontalPodAutoscaler {
	if m != nil {
		return m.Items
	}
	return nil
}

// HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
type HorizontalPodAutoscalerSpec struct {
	// scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics
	// should be collected, as well as to actually change the replica count.
	ScaleTargetRef *CrossVersionObjectReference `protobuf:"bytes,1,opt,name=scaleTargetRef" json:"scaleTargetRef,omitempty"`
	// minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.
	// It defaults to 1 pod.
	// +optional
	MinReplicas *int32 `protobuf:"varint,2,opt,name=minReplicas" json:"minReplicas,omitempty"`
	// maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
	// It cannot be less that minReplicas.
	MaxReplicas *int32 `protobuf:"varint,3,opt,name=maxReplicas" json:"maxReplicas,omitempty"`
	// metrics contains the specifications for which to use to calculate the
	// desired replica count (the maximum replica count across all metrics will
	// be used).  The desired replica count is calculated multiplying the
	// ratio between the target value and the current value by the current
	// number of pods.  Ergo, metrics used must decrease as the pod count is
	// increased, and vice-versa.  See the individual metric source types for
	// more information about how each type of metric must respond.
	// +optional
	Metrics              []*MetricSpec `protobuf:"bytes,4,rep,name=metrics" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HorizontalPodAutoscalerSpec) Reset()         { *m = HorizontalPodAutoscalerSpec{} }
func (m *HorizontalPodAutoscalerSpec) String() string { return proto.CompactTextString(m) }
func (*HorizontalPodAutoscalerSpec) ProtoMessage()    {}
func (*HorizontalPodAutoscalerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{6}
}
func (m *HorizontalPodAutoscalerSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorizontalPodAutoscalerSpec.Unmarshal(m, b)
}
func (m *HorizontalPodAutoscalerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorizontalPodAutoscalerSpec.Marshal(b, m, deterministic)
}
func (dst *HorizontalPodAutoscalerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorizontalPodAutoscalerSpec.Merge(dst, src)
}
func (m *HorizontalPodAutoscalerSpec) XXX_Size() int {
	return xxx_messageInfo_HorizontalPodAutoscalerSpec.Size(m)
}
func (m *HorizontalPodAutoscalerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HorizontalPodAutoscalerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HorizontalPodAutoscalerSpec proto.InternalMessageInfo

func (m *HorizontalPodAutoscalerSpec) GetScaleTargetRef() *CrossVersionObjectReference {
	if m != nil {
		return m.ScaleTargetRef
	}
	return nil
}

func (m *HorizontalPodAutoscalerSpec) GetMinReplicas() int32 {
	if m != nil && m.MinReplicas != nil {
		return *m.MinReplicas
	}
	return 0
}

func (m *HorizontalPodAutoscalerSpec) GetMaxReplicas() int32 {
	if m != nil && m.MaxReplicas != nil {
		return *m.MaxReplicas
	}
	return 0
}

func (m *HorizontalPodAutoscalerSpec) GetMetrics() []*MetricSpec {
	if m != nil {
		return m.Metrics
	}
	return nil
}

// HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
type HorizontalPodAutoscalerStatus struct {
	// observedGeneration is the most recent generation observed by this autoscaler.
	// +optional
	ObservedGeneration *int64 `protobuf:"varint,1,opt,name=observedGeneration" json:"observedGeneration,omitempty"`
	// lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods,
	// used by the autoscaler to control how often the number of pods is changed.
	// +optional
	LastScaleTime *v1.Time `protobuf:"bytes,2,opt,name=lastScaleTime" json:"lastScaleTime,omitempty"`
	// currentReplicas is current number of replicas of pods managed by this autoscaler,
	// as last seen by the autoscaler.
	CurrentReplicas *int32 `protobuf:"varint,3,opt,name=currentReplicas" json:"currentReplicas,omitempty"`
	// desiredReplicas is the desired number of replicas of pods managed by this autoscaler,
	// as last calculated by the autoscaler.
	DesiredReplicas *int32 `protobuf:"varint,4,opt,name=desiredReplicas" json:"desiredReplicas,omitempty"`
	// currentMetrics is the last read state of the metrics used by this autoscaler.
	// +optional
	CurrentMetrics []*MetricStatus `protobuf:"bytes,5,rep,name=currentMetrics" json:"currentMetrics,omitempty"`
	// conditions is the set of conditions required for this autoscaler to scale its target,
	// and indicates whether or not those conditions are met.
	Conditions           []*HorizontalPodAutoscalerCondition `protobuf:"bytes,6,rep,name=conditions" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HorizontalPodAutoscalerStatus) Reset()         { *m = HorizontalPodAutoscalerStatus{} }
func (m *HorizontalPodAutoscalerStatus) String() string { return proto.CompactTextString(m) }
func (*HorizontalPodAutoscalerStatus) ProtoMessage()    {}
func (*HorizontalPodAutoscalerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{7}
}
func (m *HorizontalPodAutoscalerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorizontalPodAutoscalerStatus.Unmarshal(m, b)
}
func (m *HorizontalPodAutoscalerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorizontalPodAutoscalerStatus.Marshal(b, m, deterministic)
}
func (dst *HorizontalPodAutoscalerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorizontalPodAutoscalerStatus.Merge(dst, src)
}
func (m *HorizontalPodAutoscalerStatus) XXX_Size() int {
	return xxx_messageInfo_HorizontalPodAutoscalerStatus.Size(m)
}
func (m *HorizontalPodAutoscalerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HorizontalPodAutoscalerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HorizontalPodAutoscalerStatus proto.InternalMessageInfo

func (m *HorizontalPodAutoscalerStatus) GetObservedGeneration() int64 {
	if m != nil && m.ObservedGeneration != nil {
		return *m.ObservedGeneration
	}
	return 0
}

func (m *HorizontalPodAutoscalerStatus) GetLastScaleTime() *v1.Time {
	if m != nil {
		return m.LastScaleTime
	}
	return nil
}

func (m *HorizontalPodAutoscalerStatus) GetCurrentReplicas() int32 {
	if m != nil && m.CurrentReplicas != nil {
		return *m.CurrentReplicas
	}
	return 0
}

func (m *HorizontalPodAutoscalerStatus) GetDesiredReplicas() int32 {
	if m != nil && m.DesiredReplicas != nil {
		return *m.DesiredReplicas
	}
	return 0
}

func (m *HorizontalPodAutoscalerStatus) GetCurrentMetrics() []*MetricStatus {
	if m != nil {
		return m.CurrentMetrics
	}
	return nil
}

func (m *HorizontalPodAutoscalerStatus) GetConditions() []*HorizontalPodAutoscalerCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

// MetricSpec specifies how to scale based on a single metric
// (only `type` and one other matching field should be set at once).
type MetricSpec struct {
	// type is the type of metric source.  It should be one of "Object",
	// "Pods" or "Resource", each mapping to a matching field in the object.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// object refers to a metric describing a single kubernetes object
	// (for example, hits-per-second on an Ingress object).
	// +optional
	Object *ObjectMetricSource `protobuf:"bytes,2,opt,name=object" json:"object,omitempty"`
	// pods refers to a metric describing each pod in the current scale target
	// (for example, transactions-processed-per-second).  The values will be
	// averaged together before being compared to the target value.
	// +optional
	Pods *PodsMetricSource `protobuf:"bytes,3,opt,name=pods" json:"pods,omitempty"`
	// resource refers to a resource metric (such as those specified in
	// requests and limits) known to Kubernetes describing each pod in the
	// current scale target (e.g. CPU or memory). Such metrics are built in to
	// Kubernetes, and have special scaling options on top of those available
	// to normal per-pod metrics using the "pods" source.
	// +optional
	Resource *ResourceMetricSource `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	// external refers to a global metric that is not associated
	// with any Kubernetes object. It allows autoscaling based on information
	// coming from components running outside of cluster
	// (for example length of queue in cloud messaging service, or
	// QPS from loadbalancer running outside of cluster).
	// +optional
	External             *ExternalMetricSource `protobuf:"bytes,5,opt,name=external" json:"external,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MetricSpec) Reset()         { *m = MetricSpec{} }
func (m *MetricSpec) String() string { return proto.CompactTextString(m) }
func (*MetricSpec) ProtoMessage()    {}
func (*MetricSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{8}
}
func (m *MetricSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricSpec.Unmarshal(m, b)
}
func (m *MetricSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricSpec.Marshal(b, m, deterministic)
}
func (dst *MetricSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricSpec.Merge(dst, src)
}
func (m *MetricSpec) XXX_Size() int {
	return xxx_messageInfo_MetricSpec.Size(m)
}
func (m *MetricSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MetricSpec proto.InternalMessageInfo

func (m *MetricSpec) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *MetricSpec) GetObject() *ObjectMetricSource {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *MetricSpec) GetPods() *PodsMetricSource {
	if m != nil {
		return m.Pods
	}
	return nil
}

func (m *MetricSpec) GetResource() *ResourceMetricSource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *MetricSpec) GetExternal() *ExternalMetricSource {
	if m != nil {
		return m.External
	}
	return nil
}

// MetricStatus describes the last-read state of a single metric.
type MetricStatus struct {
	// type is the type of metric source.  It will be one of "Object",
	// "Pods" or "Resource", each corresponds to a matching field in the object.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// object refers to a metric describing a single kubernetes object
	// (for example, hits-per-second on an Ingress object).
	// +optional
	Object *ObjectMetricStatus `protobuf:"bytes,2,opt,name=object" json:"object,omitempty"`
	// pods refers to a metric describing each pod in the current scale target
	// (for example, transactions-processed-per-second).  The values will be
	// averaged together before being compared to the target value.
	// +optional
	Pods *PodsMetricStatus `protobuf:"bytes,3,opt,name=pods" json:"pods,omitempty"`
	// resource refers to a resource metric (such as those specified in
	// requests and limits) known to Kubernetes describing each pod in the
	// current scale target (e.g. CPU or memory). Such metrics are built in to
	// Kubernetes, and have special scaling options on top of those available
	// to normal per-pod metrics using the "pods" source.
	// +optional
	Resource *ResourceMetricStatus `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	// external refers to a global metric that is not associated
	// with any Kubernetes object. It allows autoscaling based on information
	// coming from components running outside of cluster
	// (for example length of queue in cloud messaging service, or
	// QPS from loadbalancer running outside of cluster).
	// +optional
	External             *ExternalMetricStatus `protobuf:"bytes,5,opt,name=external" json:"external,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MetricStatus) Reset()         { *m = MetricStatus{} }
func (m *MetricStatus) String() string { return proto.CompactTextString(m) }
func (*MetricStatus) ProtoMessage()    {}
func (*MetricStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{9}
}
func (m *MetricStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricStatus.Unmarshal(m, b)
}
func (m *MetricStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricStatus.Marshal(b, m, deterministic)
}
func (dst *MetricStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricStatus.Merge(dst, src)
}
func (m *MetricStatus) XXX_Size() int {
	return xxx_messageInfo_MetricStatus.Size(m)
}
func (m *MetricStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MetricStatus proto.InternalMessageInfo

func (m *MetricStatus) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *MetricStatus) GetObject() *ObjectMetricStatus {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *MetricStatus) GetPods() *PodsMetricStatus {
	if m != nil {
		return m.Pods
	}
	return nil
}

func (m *MetricStatus) GetResource() *ResourceMetricStatus {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *MetricStatus) GetExternal() *ExternalMetricStatus {
	if m != nil {
		return m.External
	}
	return nil
}

// ObjectMetricSource indicates how to scale on a metric describing a
// kubernetes object (for example, hits-per-second on an Ingress object).
type ObjectMetricSource struct {
	// target is the described Kubernetes object.
	Target *CrossVersionObjectReference `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	// metricName is the name of the metric in question.
	MetricName *string `protobuf:"bytes,2,opt,name=metricName" json:"metricName,omitempty"`
	// targetValue is the target value of the metric (as a quantity).
	TargetValue *resource.Quantity `protobuf:"bytes,3,opt,name=targetValue" json:"targetValue,omitempty"`
	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping
	// When unset, just the metricName will be used to gather metrics.
	// +optional
	Selector *v1.LabelSelector `protobuf:"bytes,4,opt,name=selector" json:"selector,omitempty"`
	// averageValue is the target value of the average of the
	// metric across all relevant pods (as a quantity)
	// +optional
	AverageValue         *resource.Quantity `protobuf:"bytes,5,opt,name=averageValue" json:"averageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ObjectMetricSource) Reset()         { *m = ObjectMetricSource{} }
func (m *ObjectMetricSource) String() string { return proto.CompactTextString(m) }
func (*ObjectMetricSource) ProtoMessage()    {}
func (*ObjectMetricSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{10}
}
func (m *ObjectMetricSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectMetricSource.Unmarshal(m, b)
}
func (m *ObjectMetricSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectMetricSource.Marshal(b, m, deterministic)
}
func (dst *ObjectMetricSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectMetricSource.Merge(dst, src)
}
func (m *ObjectMetricSource) XXX_Size() int {
	return xxx_messageInfo_ObjectMetricSource.Size(m)
}
func (m *ObjectMetricSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectMetricSource.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectMetricSource proto.InternalMessageInfo

func (m *ObjectMetricSource) GetTarget() *CrossVersionObjectReference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ObjectMetricSource) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *ObjectMetricSource) GetTargetValue() *resource.Quantity {
	if m != nil {
		return m.TargetValue
	}
	return nil
}

func (m *ObjectMetricSource) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *ObjectMetricSource) GetAverageValue() *resource.Quantity {
	if m != nil {
		return m.AverageValue
	}
	return nil
}

// ObjectMetricStatus indicates the current value of a metric describing a
// kubernetes object (for example, hits-per-second on an Ingress object).
type ObjectMetricStatus struct {
	// target is the described Kubernetes object.
	Target *CrossVersionObjectReference `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	// metricName is the name of the metric in question.
	MetricName *string `protobuf:"bytes,2,opt,name=metricName" json:"metricName,omitempty"`
	// currentValue is the current value of the metric (as a quantity).
	CurrentValue *resource.Quantity `protobuf:"bytes,3,opt,name=currentValue" json:"currentValue,omitempty"`
	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set in the ObjectMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
	// When unset, just the metricName will be used to gather metrics.
	// +optional
	Selector *v1.LabelSelector `protobuf:"bytes,4,opt,name=selector" json:"selector,omitempty"`
	// averageValue is the current value of the average of the
	// metric across all relevant pods (as a quantity)
	// +optional
	AverageValue         *resource.Quantity `protobuf:"bytes,5,opt,name=averageValue" json:"averageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ObjectMetricStatus) Reset()         { *m = ObjectMetricStatus{} }
func (m *ObjectMetricStatus) String() string { return proto.CompactTextString(m) }
func (*ObjectMetricStatus) ProtoMessage()    {}
func (*ObjectMetricStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{11}
}
func (m *ObjectMetricStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectMetricStatus.Unmarshal(m, b)
}
func (m *ObjectMetricStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectMetricStatus.Marshal(b, m, deterministic)
}
func (dst *ObjectMetricStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectMetricStatus.Merge(dst, src)
}
func (m *ObjectMetricStatus) XXX_Size() int {
	return xxx_messageInfo_ObjectMetricStatus.Size(m)
}
func (m *ObjectMetricStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectMetricStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectMetricStatus proto.InternalMessageInfo

func (m *ObjectMetricStatus) GetTarget() *CrossVersionObjectReference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ObjectMetricStatus) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *ObjectMetricStatus) GetCurrentValue() *resource.Quantity {
	if m != nil {
		return m.CurrentValue
	}
	return nil
}

func (m *ObjectMetricStatus) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *ObjectMetricStatus) GetAverageValue() *resource.Quantity {
	if m != nil {
		return m.AverageValue
	}
	return nil
}

// PodsMetricSource indicates how to scale on a metric describing each pod in
// the current scale target (for example, transactions-processed-per-second).
// The values will be averaged together before being compared to the target
// value.
type PodsMetricSource struct {
	// metricName is the name of the metric in question
	MetricName *string `protobuf:"bytes,1,opt,name=metricName" json:"metricName,omitempty"`
	// targetAverageValue is the target value of the average of the
	// metric across all relevant pods (as a quantity)
	TargetAverageValue *resource.Quantity `protobuf:"bytes,2,opt,name=targetAverageValue" json:"targetAverageValue,omitempty"`
	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping
	// When unset, just the metricName will be used to gather metrics.
	// +optional
	Selector             *v1.LabelSelector `protobuf:"bytes,3,opt,name=selector" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PodsMetricSource) Reset()         { *m = PodsMetricSource{} }
func (m *PodsMetricSource) String() string { return proto.CompactTextString(m) }
func (*PodsMetricSource) ProtoMessage()    {}
func (*PodsMetricSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{12}
}
func (m *PodsMetricSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodsMetricSource.Unmarshal(m, b)
}
func (m *PodsMetricSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodsMetricSource.Marshal(b, m, deterministic)
}
func (dst *PodsMetricSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodsMetricSource.Merge(dst, src)
}
func (m *PodsMetricSource) XXX_Size() int {
	return xxx_messageInfo_PodsMetricSource.Size(m)
}
func (m *PodsMetricSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PodsMetricSource.DiscardUnknown(m)
}

var xxx_messageInfo_PodsMetricSource proto.InternalMessageInfo

func (m *PodsMetricSource) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *PodsMetricSource) GetTargetAverageValue() *resource.Quantity {
	if m != nil {
		return m.TargetAverageValue
	}
	return nil
}

func (m *PodsMetricSource) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

// PodsMetricStatus indicates the current value of a metric describing each pod in
// the current scale target (for example, transactions-processed-per-second).
type PodsMetricStatus struct {
	// metricName is the name of the metric in question
	MetricName *string `protobuf:"bytes,1,opt,name=metricName" json:"metricName,omitempty"`
	// currentAverageValue is the current value of the average of the
	// metric across all relevant pods (as a quantity)
	CurrentAverageValue *resource.Quantity `protobuf:"bytes,2,opt,name=currentAverageValue" json:"currentAverageValue,omitempty"`
	// selector is the string-encoded form of a standard kubernetes label selector for the given metric
	// When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
	// When unset, just the metricName will be used to gather metrics.
	// +optional
	Selector             *v1.LabelSelector `protobuf:"bytes,3,opt,name=selector" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PodsMetricStatus) Reset()         { *m = PodsMetricStatus{} }
func (m *PodsMetricStatus) String() string { return proto.CompactTextString(m) }
func (*PodsMetricStatus) ProtoMessage()    {}
func (*PodsMetricStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{13}
}
func (m *PodsMetricStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodsMetricStatus.Unmarshal(m, b)
}
func (m *PodsMetricStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodsMetricStatus.Marshal(b, m, deterministic)
}
func (dst *PodsMetricStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodsMetricStatus.Merge(dst, src)
}
func (m *PodsMetricStatus) XXX_Size() int {
	return xxx_messageInfo_PodsMetricStatus.Size(m)
}
func (m *PodsMetricStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PodsMetricStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PodsMetricStatus proto.InternalMessageInfo

func (m *PodsMetricStatus) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *PodsMetricStatus) GetCurrentAverageValue() *resource.Quantity {
	if m != nil {
		return m.CurrentAverageValue
	}
	return nil
}

func (m *PodsMetricStatus) GetSelector() *v1.LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

// ResourceMetricSource indicates how to scale on a resource metric known to
// Kubernetes, as specified in requests and limits, describing each pod in the
// current scale target (e.g. CPU or memory).  The values will be averaged
// together before being compared to the target.  Such metrics are built in to
// Kubernetes, and have special scaling options on top of those available to
// normal per-pod metrics using the "pods" source.  Only one "target" type
// should be set.
type ResourceMetricSource struct {
	// name is the name of the resource in question.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// targetAverageUtilization is the target value of the average of the
	// resource metric across all relevant pods, represented as a percentage of
	// the requested value of the resource for the pods.
	// +optional
	TargetAverageUtilization *int32 `protobuf:"varint,2,opt,name=targetAverageUtilization" json:"targetAverageUtilization,omitempty"`
	// targetAverageValue is the target value of the average of the
	// resource metric across all relevant pods, as a raw value (instead of as
	// a percentage of the request), similar to the "pods" metric source type.
	// +optional
	TargetAverageValue   *resource.Quantity `protobuf:"bytes,3,opt,name=targetAverageValue" json:"targetAverageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ResourceMetricSource) Reset()         { *m = ResourceMetricSource{} }
func (m *ResourceMetricSource) String() string { return proto.CompactTextString(m) }
func (*ResourceMetricSource) ProtoMessage()    {}
func (*ResourceMetricSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{14}
}
func (m *ResourceMetricSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceMetricSource.Unmarshal(m, b)
}
func (m *ResourceMetricSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceMetricSource.Marshal(b, m, deterministic)
}
func (dst *ResourceMetricSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceMetricSource.Merge(dst, src)
}
func (m *ResourceMetricSource) XXX_Size() int {
	return xxx_messageInfo_ResourceMetricSource.Size(m)
}
func (m *ResourceMetricSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceMetricSource.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceMetricSource proto.InternalMessageInfo

func (m *ResourceMetricSource) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ResourceMetricSource) GetTargetAverageUtilization() int32 {
	if m != nil && m.TargetAverageUtilization != nil {
		return *m.TargetAverageUtilization
	}
	return 0
}

func (m *ResourceMetricSource) GetTargetAverageValue() *resource.Quantity {
	if m != nil {
		return m.TargetAverageValue
	}
	return nil
}

// ResourceMetricStatus indicates the current value of a resource metric known to
// Kubernetes, as specified in requests and limits, describing each pod in the
// current scale target (e.g. CPU or memory).  Such metrics are built in to
// Kubernetes, and have special scaling options on top of those available to
// normal per-pod metrics using the "pods" source.
type ResourceMetricStatus struct {
	// name is the name of the resource in question.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// currentAverageUtilization is the current value of the average of the
	// resource metric across all relevant pods, represented as a percentage of
	// the requested value of the resource for the pods.  It will only be
	// present if `targetAverageValue` was set in the corresponding metric
	// specification.
	// +optional
	CurrentAverageUtilization *int32 `protobuf:"varint,2,opt,name=currentAverageUtilization" json:"currentAverageUtilization,omitempty"`
	// currentAverageValue is the current value of the average of the
	// resource metric across all relevant pods, as a raw value (instead of as
	// a percentage of the request), similar to the "pods" metric source type.
	// It will always be set, regardless of the corresponding metric specification.
	CurrentAverageValue  *resource.Quantity `protobuf:"bytes,3,opt,name=currentAverageValue" json:"currentAverageValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ResourceMetricStatus) Reset()         { *m = ResourceMetricStatus{} }
func (m *ResourceMetricStatus) String() string { return proto.CompactTextString(m) }
func (*ResourceMetricStatus) ProtoMessage()    {}
func (*ResourceMetricStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_28f8b4a975393989, []int{15}
}
func (m *ResourceMetricStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceMetricStatus.Unmarshal(m, b)
}
func (m *ResourceMetricStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceMetricStatus.Marshal(b, m, deterministic)
}
func (dst *ResourceMetricStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceMetricStatus.Merge(dst, src)
}
func (m *ResourceMetricStatus) XXX_Size() int {
	return xxx_messageInfo_ResourceMetricStatus.Size(m)
}
func (m *ResourceMetricStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceMetricStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceMetricStatus proto.InternalMessageInfo

func (m *ResourceMetricStatus) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ResourceMetricStatus) GetCurrentAverageUtilization() int32 {
	if m != nil && m.CurrentAverageUtilization != nil {
		return *m.CurrentAverageUtilization
	}
	return 0
}

func (m *ResourceMetricStatus) GetCurrentAverageValue() *resource.Quantity {
	if m != nil {
		return m.CurrentAverageValue
	}
	return nil
}

func init() {
	proto.RegisterType((*CrossVersionObjectReference)(nil), "k8s.io.api.autoscaling.v2beta1.CrossVersionObjectReference")
	proto.RegisterType((*ExternalMetricSource)(nil), "k8s.io.api.autoscaling.v2beta1.ExternalMetricSource")
	proto.RegisterType((*ExternalMetricStatus)(nil), "k8s.io.api.autoscaling.v2beta1.ExternalMetricStatus")
	proto.RegisterType((*HorizontalPodAutoscaler)(nil), "k8s.io.api.autoscaling.v2beta1.HorizontalPodAutoscaler")
	proto.RegisterType((*HorizontalPodAutoscalerCondition)(nil), "k8s.io.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition")
	proto.RegisterType((*HorizontalPodAutoscalerList)(nil), "k8s.io.api.autoscaling.v2beta1.HorizontalPodAutoscalerList")
	proto.RegisterType((*HorizontalPodAutoscalerSpec)(nil), "k8s.io.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec")
	proto.RegisterType((*HorizontalPodAutoscalerStatus)(nil), "k8s.io.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus")
	proto.RegisterType((*MetricSpec)(nil), "k8s.io.api.autoscaling.v2beta1.MetricSpec")
	proto.RegisterType((*MetricStatus)(nil), "k8s.io.api.autoscaling.v2beta1.MetricStatus")
	proto.RegisterType((*ObjectMetricSource)(nil), "k8s.io.api.autoscaling.v2beta1.ObjectMetricSource")
	proto.RegisterType((*ObjectMetricStatus)(nil), "k8s.io.api.autoscaling.v2beta1.ObjectMetricStatus")
	proto.RegisterType((*PodsMetricSource)(nil), "k8s.io.api.autoscaling.v2beta1.PodsMetricSource")
	proto.RegisterType((*PodsMetricStatus)(nil), "k8s.io.api.autoscaling.v2beta1.PodsMetricStatus")
	proto.RegisterType((*ResourceMetricSource)(nil), "k8s.io.api.autoscaling.v2beta1.ResourceMetricSource")
	proto.RegisterType((*ResourceMetricStatus)(nil), "k8s.io.api.autoscaling.v2beta1.ResourceMetricStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/autoscaling/v2beta1/generated.proto", fileDescriptor_generated_28f8b4a975393989)
}

var fileDescriptor_generated_28f8b4a975393989 = []byte{
	// 1087 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x97, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xc7, 0xb5, 0x1f, 0x49, 0x9b, 0xb3, 0x25, 0xa0, 0xa1, 0x82, 0xa5, 0x15, 0x55, 0xe4, 0xab,
	0xa8, 0x02, 0xbb, 0x5d, 0x2a, 0x40, 0x7c, 0x48, 0x94, 0x16, 0x81, 0xaa, 0x84, 0x84, 0x49, 0xda,
	0x8b, 0x22, 0xa1, 0x4e, 0xec, 0xd3, 0xcd, 0x10, 0xdb, 0x63, 0xcd, 0xcc, 0xae, 0x9a, 0x5e, 0x21,
	0xae, 0x91, 0x78, 0x12, 0xee, 0x79, 0x01, 0x90, 0xe0, 0x01, 0x10, 0x17, 0xdc, 0x21, 0xde, 0x03,
	0xcd, 0x78, 0xd6, 0xf1, 0x7a, 0xd7, 0xd9, 0xed, 0xd6, 0xa8, 0xe2, 0xce, 0x33, 0x3e, 0xe7, 0xe7,
	0x99, 0xff, 0x39, 0x3e, 0x73, 0x06, 0xe8, 0x90, 0xeb, 0xe3, 0xd1, 0x91, 0x1f, 0x8a, 0x24, 0x50,
	0x22, 0x16, 0x6f, 0x73, 0x11, 0xa8, 0x51, 0x86, 0x72, 0x18, 0x0b, 0x11, 0x8c, 0x31, 0x8d, 0x84,
	0x0c, 0x4e, 0xde, 0x57, 0x3e, 0x17, 0x01, 0xcb, 0x78, 0xc0, 0x46, 0x5a, 0xa8, 0x90, 0xc5, 0x3c,
	0x1d, 0x06, 0xe3, 0xc1, 0x11, 0x6a, 0x76, 0x33, 0x18, 0x62, 0x8a, 0x92, 0x69, 0x8c, 0xfc, 0x4c,
	0x0a, 0x2d, 0xc8, 0xb5, 0xdc, 0xde, 0x67, 0x19, 0xf7, 0x4b, 0xf6, 0xbe, 0xb3, 0xbf, 0xe2, 0x95,
	0x78, 0xa1, 0x90, 0x18, 0x8c, 0x67, 0x18, 0x57, 0x6e, 0x9d, 0xd9, 0x24, 0x2c, 0x3c, 0xe6, 0x29,
	0xca, 0xd3, 0x20, 0x3b, 0x19, 0x5a, 0x27, 0x89, 0x4a, 0x8c, 0x64, 0x88, 0xcf, 0xe4, 0xa5, 0x82,
	0x04, 0x35, 0x9b, 0xf7, 0xad, 0xa0, 0xce, 0x4b, 0x8e, 0x52, 0xcd, 0x93, 0xd9, 0xcf, 0xbc, 0xbb,
	0xc8, 0x41, 0x85, 0xc7, 0x98, 0xb0, 0xaa, 0x9f, 0x87, 0x70, 0xf5, 0x8e, 0x14, 0x4a, 0x3d, 0x40,
	0xa9, 0xb8, 0x48, 0xf7, 0x8e, 0xbe, 0xc5, 0x50, 0x53, 0x7c, 0x8c, 0x12, 0xd3, 0x10, 0x09, 0x81,
	0xee, 0x09, 0x4f, 0xa3, 0x7e, 0x6b, 0xab, 0xb5, 0xbd, 0x41, 0xed, 0xb3, 0x99, 0x4b, 0x59, 0x82,
	0xfd, 0x76, 0x3e, 0x67, 0x9e, 0xc9, 0x35, 0x00, 0x96, 0x71, 0x07, 0xe9, 0x77, 0xec, 0x9b, 0xd2,
	0x8c, 0xf7, 0x4b, 0x1b, 0x2e, 0x7f, 0xf6, 0x44, 0xa3, 0x4c, 0x59, 0xbc, 0x8b, 0x5a, 0xf2, 0xf0,
	0xc0, 0xca, 0x65, 0x1c, 0x13, 0x3b, 0xfe, 0xd2, 0x20, 0xf3, 0xcf, 0x94, 0x66, 0xc8, 0xd7, 0xb0,
	0x99, 0x8f, 0x0e, 0x30, 0xc6, 0x50, 0x0b, 0x69, 0x3f, 0xdb, 0x1b, 0xbc, 0xe3, 0x9f, 0x45, 0xb4,
	0xd8, 0xb0, 0x9f, 0x9d, 0x0c, 0xcd, 0x84, 0xf2, 0x8d, 0xae, 0xfe, 0xf8, 0xa6, 0xbf, 0xc3, 0x8e,
	0x30, 0x9e, 0xb8, 0xd2, 0x0a, 0x8a, 0xec, 0x43, 0x4f, 0x33, 0x39, 0x44, 0xfd, 0x80, 0xc5, 0x23,
	0xb4, 0xcb, 0xee, 0x0d, 0xfc, 0xf3, 0xc8, 0xfe, 0x24, 0xce, 0xfe, 0x57, 0x23, 0x96, 0x6a, 0xae,
	0x4f, 0x69, 0x19, 0x41, 0xbe, 0x01, 0x92, 0x0f, 0x6f, 0x8f, 0x51, 0xb2, 0x21, 0xe6, 0xe0, 0xee,
	0x4a, 0xe0, 0x39, 0x24, 0xef, 0xb7, 0x59, 0x1d, 0x35, 0xd3, 0x23, 0xf5, 0x62, 0x75, 0xa4, 0x70,
	0x29, 0x1c, 0x49, 0x89, 0xe9, 0x73, 0x09, 0x39, 0xc5, 0x20, 0x8f, 0xe0, 0x55, 0x37, 0x6e, 0x40,
	0xca, 0x79, 0x28, 0xef, 0xc7, 0x36, 0xbc, 0xfe, 0x85, 0x90, 0xfc, 0xa9, 0x48, 0x35, 0x8b, 0xf7,
	0x45, 0x74, 0xdb, 0x15, 0x06, 0x94, 0x64, 0x07, 0x2e, 0x9a, 0xad, 0x47, 0x4c, 0x33, 0x2b, 0x66,
	0x6f, 0x70, 0x63, 0x39, 0xa1, 0xf2, 0x1f, 0x68, 0x17, 0x35, 0xa3, 0x05, 0x81, 0xec, 0x41, 0x57,
	0x65, 0x18, 0x3a, 0xc9, 0x3f, 0xf4, 0xcf, 0x2f, 0x46, 0x7e, 0xcd, 0xa2, 0x0e, 0x32, 0x0c, 0xa9,
	0x05, 0x91, 0xfb, 0xb0, 0xae, 0x6c, 0xdc, 0x9d, 0xd4, 0x1f, 0xaf, 0x8a, 0xb4, 0x10, 0xea, 0x60,
	0xde, 0x5f, 0x2d, 0xd8, 0xaa, 0xb1, 0xbc, 0x23, 0xd2, 0x88, 0x6b, 0x2e, 0x52, 0xf3, 0xfb, 0xeb,
	0xd3, 0x6c, 0x92, 0x63, 0xf6, 0x99, 0xbc, 0x56, 0xac, 0x27, 0x2f, 0x0a, 0x6e, 0x44, 0x1e, 0x02,
	0x89, 0x99, 0xd2, 0x87, 0x92, 0xa5, 0xca, 0x7a, 0x1f, 0xf2, 0x64, 0x92, 0x1e, 0xd7, 0x97, 0x13,
	0xd4, 0x78, 0xd0, 0x39, 0x14, 0xf3, 0x4d, 0x89, 0x4c, 0x89, 0xd4, 0xe6, 0xc4, 0x06, 0x75, 0x23,
	0xd2, 0x87, 0x0b, 0x09, 0x2a, 0xc5, 0x86, 0xd8, 0x5f, 0xb3, 0x2f, 0x26, 0x43, 0xef, 0xe7, 0x16,
	0x5c, 0xad, 0xd9, 0xde, 0x0e, 0x57, 0x9a, 0xdc, 0x9b, 0x09, 0xba, 0xbf, 0xe4, 0xdf, 0xc1, 0x55,
	0x35, 0xe4, 0xbb, 0xb0, 0xc6, 0x35, 0x26, 0x46, 0x90, 0xce, 0x76, 0x6f, 0xf0, 0xde, 0x8a, 0x01,
	0xa2, 0x39, 0xc5, 0xfb, 0xa1, 0x5d, 0xbb, 0x74, 0x93, 0x16, 0x24, 0x84, 0x4d, 0x3b, 0x3a, 0xb4,
	0x25, 0x83, 0xe2, 0x63, 0xb7, 0x81, 0x85, 0xb9, 0x76, 0x4e, 0xf1, 0xa7, 0x15, 0x24, 0xd9, 0x82,
	0x5e, 0xc2, 0x53, 0x8a, 0x59, 0xcc, 0x43, 0x96, 0x87, 0x7a, 0x8d, 0x96, 0xa7, 0xac, 0x05, 0x7b,
	0x52, 0x58, 0x74, 0x9c, 0xc5, 0xd9, 0x14, 0xb9, 0x6b, 0xa2, 0x63, 0x8a, 0x87, 0xea, 0x77, 0xad,
	0x32, 0xd7, 0x17, 0xad, 0xd0, 0x95, 0x39, 0x93, 0xfc, 0x13, 0x57, 0xef, 0xa7, 0x0e, 0xbc, 0x79,
	0x6e, 0x4a, 0x13, 0x1f, 0x88, 0x38, 0x52, 0x28, 0xc7, 0x18, 0x7d, 0x9e, 0x1f, 0x79, 0xe6, 0x60,
	0x32, 0xa2, 0x74, 0xe8, 0x9c, 0x37, 0x64, 0x1f, 0x5e, 0x32, 0x39, 0x76, 0x60, 0x77, 0xcc, 0xdd,
	0xe9, 0xf6, 0x6c, 0x49, 0x3a, 0x0d, 0x20, 0xdb, 0xf0, 0xb2, 0xab, 0x3a, 0x15, 0x3d, 0xaa, 0xd3,
	0xc6, 0x32, 0x42, 0xc5, 0x25, 0x46, 0x85, 0x65, 0x37, 0xb7, 0xac, 0x4c, 0x93, 0x43, 0xd8, 0x74,
	0xce, 0xbb, 0x4e, 0xc4, 0x35, 0x2b, 0xe2, 0x5b, 0x4b, 0x8a, 0x98, 0xff, 0xee, 0x15, 0x06, 0x79,
	0x04, 0x10, 0x4e, 0x7e, 0x6f, 0xd5, 0x5f, 0xb7, 0xc4, 0x4f, 0x56, 0x4c, 0xd8, 0xa2, 0x4e, 0xd0,
	0x12, 0xd3, 0xfb, 0xa3, 0x0d, 0x70, 0x16, 0xc7, 0xb9, 0x25, 0xe4, 0x1e, 0xac, 0x0b, 0x9b, 0x7f,
	0x4e, 0xf9, 0xc1, 0xa2, 0x05, 0x14, 0x95, 0xb6, 0x68, 0x26, 0xa8, 0x23, 0x90, 0xbb, 0xd0, 0xcd,
	0x44, 0x34, 0x29, 0x8e, 0x37, 0x16, 0x91, 0xf6, 0x45, 0xa4, 0xa6, 0x38, 0xd6, 0x9b, 0xec, 0xc3,
	0xc5, 0xc9, 0x49, 0xe2, 0x8e, 0x9d, 0x5b, 0x8b, 0x48, 0xd4, 0xd9, 0x4f, 0xd1, 0x0a, 0x8a, 0x21,
	0xa2, 0x3b, 0xbc, 0x6d, 0x6d, 0x5a, 0x82, 0x38, 0xaf, 0x69, 0xa2, 0x05, 0xc5, 0xfb, 0xb3, 0x0d,
	0x97, 0xa6, 0xfa, 0x80, 0xe6, 0xa5, 0x75, 0x47, 0xc4, 0x73, 0x4b, 0x9b, 0x73, 0x9a, 0x92, 0x36,
	0xa7, 0x35, 0x29, 0xad, 0x23, 0x16, 0xd2, 0x7e, 0xd7, 0x01, 0x32, 0x9b, 0x63, 0xe4, 0x00, 0xd6,
	0xf3, 0xbe, 0xac, 0x89, 0x0a, 0xeb, 0x50, 0x95, 0xee, 0xad, 0x3d, 0xd3, 0xbd, 0x35, 0xdf, 0xa8,
	0xee, 0xc1, 0x45, 0x35, 0xe9, 0x04, 0xbb, 0xab, 0x77, 0x82, 0x05, 0xc4, 0xf4, 0x80, 0xac, 0xdc,
	0xa8, 0xad, 0xad, 0xd6, 0x03, 0x96, 0x19, 0xde, 0xf7, 0xd5, 0x10, 0xe4, 0x39, 0xfe, 0x42, 0x42,
	0xf0, 0x5f, 0xf4, 0xb8, 0xff, 0x8b, 0x20, 0xfc, 0xdd, 0x82, 0x57, 0xaa, 0x15, 0x72, 0xe1, 0x75,
	0x63, 0xfe, 0x3d, 0xa8, 0xdd, 0xd4, 0x3d, 0x68, 0x4a, 0xb9, 0x4e, 0x03, 0xca, 0x79, 0xff, 0x4c,
	0xef, 0x72, 0xb9, 0x4b, 0x55, 0xcd, 0x1d, 0xa5, 0xdd, 0xd8, 0x1d, 0xa5, 0xf9, 0x7d, 0xfe, 0xda,
	0x82, 0xcb, 0xf3, 0x4e, 0xa9, 0xe2, 0x56, 0xdf, 0x2a, 0xdd, 0xea, 0x3f, 0x80, 0xfe, 0x94, 0xf6,
	0xf7, 0x35, 0x8f, 0xf9, 0xd3, 0xbc, 0x95, 0xca, 0xbb, 0xbf, 0xda, 0xf7, 0x35, 0x19, 0xd0, 0x69,
	0xec, 0x26, 0xfc, 0xfb, 0xec, 0x46, 0x8a, 0x13, 0x70, 0x66, 0x23, 0x1f, 0xc1, 0x1b, 0xd3, 0xea,
	0xce, 0xee, 0xa4, 0xde, 0xa0, 0x2e, 0xcc, 0x9d, 0xc6, 0xc2, 0xfc, 0xe9, 0xc6, 0xc3, 0x0b, 0xae,
	0x56, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xba, 0x34, 0x12, 0xf2, 0xfe, 0x12, 0x00, 0x00,
}
