// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/admission/v1beta1/generated.proto

package v1beta1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v11 "k8s.io/api/authentication/v1"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import runtime "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AdmissionRequest describes the admission.Attributes for the admission request.
type AdmissionRequest struct {
	// UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are
	// otherwise identical (parallel requests, requests when earlier requests did not modify etc)
	// The UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request.
	// It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
	Uid *string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// Kind is the type of object being manipulated.  For example: Pod
	Kind *v1.GroupVersionKind `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	// Resource is the name of the resource being requested.  This is not the kind.  For example: pods
	Resource *v1.GroupVersionResource `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
	// SubResource is the name of the subresource being requested.  This is a different resource, scoped to the parent
	// resource, but it may have a different kind. For instance, /pods has the resource "pods" and the kind "Pod", while
	// /pods/foo/status has the resource "pods", the sub resource "status", and the kind "Pod" (because status operates on
	// pods). The binding resource for a pod though may be /pods/foo/binding, which has resource "pods", subresource
	// "binding", and kind "Binding".
	// +optional
	SubResource *string `protobuf:"bytes,4,opt,name=subResource" json:"subResource,omitempty"`
	// Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and
	// rely on the server to generate the name.  If that is the case, this method will return the empty string.
	// +optional
	Name *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Namespace is the namespace associated with the request (if any).
	// +optional
	Namespace *string `protobuf:"bytes,6,opt,name=namespace" json:"namespace,omitempty"`
	// Operation is the operation being performed
	Operation *string `protobuf:"bytes,7,opt,name=operation" json:"operation,omitempty"`
	// UserInfo is information about the requesting user
	UserInfo *v11.UserInfo `protobuf:"bytes,8,opt,name=userInfo" json:"userInfo,omitempty"`
	// Object is the object from the incoming request prior to default values being applied
	// +optional
	Object *runtime.RawExtension `protobuf:"bytes,9,opt,name=object" json:"object,omitempty"`
	// OldObject is the existing object. Only populated for UPDATE requests.
	// +optional
	OldObject *runtime.RawExtension `protobuf:"bytes,10,opt,name=oldObject" json:"oldObject,omitempty"`
	// DryRun indicates that modifications will definitely not be persisted for this request.
	// Defaults to false.
	// +optional
	DryRun               *bool    `protobuf:"varint,11,opt,name=dryRun" json:"dryRun,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdmissionRequest) Reset()         { *m = AdmissionRequest{} }
func (m *AdmissionRequest) String() string { return proto.CompactTextString(m) }
func (*AdmissionRequest) ProtoMessage()    {}
func (*AdmissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_6931ff4bae6b2106, []int{0}
}
func (m *AdmissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdmissionRequest.Unmarshal(m, b)
}
func (m *AdmissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdmissionRequest.Marshal(b, m, deterministic)
}
func (dst *AdmissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdmissionRequest.Merge(dst, src)
}
func (m *AdmissionRequest) XXX_Size() int {
	return xxx_messageInfo_AdmissionRequest.Size(m)
}
func (m *AdmissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdmissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdmissionRequest proto.InternalMessageInfo

func (m *AdmissionRequest) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *AdmissionRequest) GetKind() *v1.GroupVersionKind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *AdmissionRequest) GetResource() *v1.GroupVersionResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *AdmissionRequest) GetSubResource() string {
	if m != nil && m.SubResource != nil {
		return *m.SubResource
	}
	return ""
}

func (m *AdmissionRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AdmissionRequest) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *AdmissionRequest) GetOperation() string {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return ""
}

func (m *AdmissionRequest) GetUserInfo() *v11.UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *AdmissionRequest) GetObject() *runtime.RawExtension {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *AdmissionRequest) GetOldObject() *runtime.RawExtension {
	if m != nil {
		return m.OldObject
	}
	return nil
}

func (m *AdmissionRequest) GetDryRun() bool {
	if m != nil && m.DryRun != nil {
		return *m.DryRun
	}
	return false
}

// AdmissionResponse describes an admission response.
type AdmissionResponse struct {
	// UID is an identifier for the individual request/response.
	// This should be copied over from the corresponding AdmissionRequest.
	Uid *string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// Allowed indicates whether or not the admission request was permitted.
	Allowed *bool `protobuf:"varint,2,opt,name=allowed" json:"allowed,omitempty"`
	// Result contains extra details into why an admission request was denied.
	// This field IS NOT consulted in any way if "Allowed" is "true".
	// +optional
	Status *v1.Status `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	// The patch body. Currently we only support "JSONPatch" which implements RFC 6902.
	// +optional
	Patch []byte `protobuf:"bytes,4,opt,name=patch" json:"patch,omitempty"`
	// The type of Patch. Currently we only allow "JSONPatch".
	// +optional
	PatchType *string `protobuf:"bytes,5,opt,name=patchType" json:"patchType,omitempty"`
	// AuditAnnotations is an unstructured key value map set by remote admission controller (e.g. error=image-blacklisted).
	// MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controller will prefix the keys with
	// admission webhook name (e.g. imagepolicy.example.com/error=image-blacklisted). AuditAnnotations will be provided by
	// the admission webhook to add additional context to the audit log for this request.
	// +optional
	AuditAnnotations     map[string]string `protobuf:"bytes,6,rep,name=auditAnnotations" json:"auditAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AdmissionResponse) Reset()         { *m = AdmissionResponse{} }
func (m *AdmissionResponse) String() string { return proto.CompactTextString(m) }
func (*AdmissionResponse) ProtoMessage()    {}
func (*AdmissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_6931ff4bae6b2106, []int{1}
}
func (m *AdmissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdmissionResponse.Unmarshal(m, b)
}
func (m *AdmissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdmissionResponse.Marshal(b, m, deterministic)
}
func (dst *AdmissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdmissionResponse.Merge(dst, src)
}
func (m *AdmissionResponse) XXX_Size() int {
	return xxx_messageInfo_AdmissionResponse.Size(m)
}
func (m *AdmissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdmissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdmissionResponse proto.InternalMessageInfo

func (m *AdmissionResponse) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *AdmissionResponse) GetAllowed() bool {
	if m != nil && m.Allowed != nil {
		return *m.Allowed
	}
	return false
}

func (m *AdmissionResponse) GetStatus() *v1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AdmissionResponse) GetPatch() []byte {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *AdmissionResponse) GetPatchType() string {
	if m != nil && m.PatchType != nil {
		return *m.PatchType
	}
	return ""
}

func (m *AdmissionResponse) GetAuditAnnotations() map[string]string {
	if m != nil {
		return m.AuditAnnotations
	}
	return nil
}

// AdmissionReview describes an admission review request/response.
type AdmissionReview struct {
	// Request describes the attributes for the admission request.
	// +optional
	Request *AdmissionRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	// Response describes the attributes for the admission response.
	// +optional
	Response             *AdmissionResponse `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AdmissionReview) Reset()         { *m = AdmissionReview{} }
func (m *AdmissionReview) String() string { return proto.CompactTextString(m) }
func (*AdmissionReview) ProtoMessage()    {}
func (*AdmissionReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_6931ff4bae6b2106, []int{2}
}
func (m *AdmissionReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdmissionReview.Unmarshal(m, b)
}
func (m *AdmissionReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdmissionReview.Marshal(b, m, deterministic)
}
func (dst *AdmissionReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdmissionReview.Merge(dst, src)
}
func (m *AdmissionReview) XXX_Size() int {
	return xxx_messageInfo_AdmissionReview.Size(m)
}
func (m *AdmissionReview) XXX_DiscardUnknown() {
	xxx_messageInfo_AdmissionReview.DiscardUnknown(m)
}

var xxx_messageInfo_AdmissionReview proto.InternalMessageInfo

func (m *AdmissionReview) GetRequest() *AdmissionRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *AdmissionReview) GetResponse() *AdmissionResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*AdmissionRequest)(nil), "k8s.io.api.admission.v1beta1.AdmissionRequest")
	proto.RegisterType((*AdmissionResponse)(nil), "k8s.io.api.admission.v1beta1.AdmissionResponse")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.api.admission.v1beta1.AdmissionResponse.AuditAnnotationsEntry")
	proto.RegisterType((*AdmissionReview)(nil), "k8s.io.api.admission.v1beta1.AdmissionReview")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/admission/v1beta1/generated.proto", fileDescriptor_generated_6931ff4bae6b2106)
}

var fileDescriptor_generated_6931ff4bae6b2106 = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcb, 0x6e, 0x53, 0x3d,
	0x10, 0xc7, 0x95, 0x36, 0xcd, 0xc5, 0xf9, 0xa4, 0xaf, 0x58, 0x80, 0xac, 0xaa, 0x8b, 0xa8, 0x0b,
	0x94, 0x45, 0x6b, 0xab, 0x15, 0xaa, 0xaa, 0xee, 0x5a, 0x88, 0xb8, 0x74, 0x01, 0x32, 0xd0, 0x05,
	0x3b, 0xe7, 0x9c, 0x21, 0x31, 0xc9, 0xb1, 0x5d, 0x5f, 0x52, 0xf2, 0x46, 0x88, 0xb7, 0xe3, 0x0d,
	0x90, 0x7d, 0x4e, 0x2e, 0xb4, 0x29, 0xb4, 0xac, 0x62, 0xcf, 0xcc, 0xff, 0x97, 0x33, 0xff, 0x19,
	0xa3, 0xf7, 0x43, 0xe9, 0x47, 0x61, 0x40, 0x33, 0x5d, 0x30, 0xa7, 0x27, 0xfa, 0x40, 0x6a, 0xe6,
	0x82, 0x01, 0x3b, 0x9c, 0x68, 0xcd, 0xa6, 0xa0, 0x72, 0x6d, 0xd9, 0xf8, 0xc4, 0x51, 0xa9, 0x99,
	0x30, 0x92, 0x89, 0xbc, 0x90, 0xce, 0x49, 0xad, 0xd8, 0xf4, 0x70, 0x00, 0x5e, 0x1c, 0xb2, 0x21,
	0x28, 0xb0, 0xc2, 0x43, 0x4e, 0x8d, 0xd5, 0x5e, 0xe3, 0xdd, 0xb2, 0x9a, 0x0a, 0x23, 0xe9, 0xa2,
	0x9a, 0x56, 0xd5, 0x3b, 0xfb, 0xab, 0xac, 0xe0, 0x47, 0xa0, 0xbc, 0xcc, 0x84, 0x2f, 0x81, 0x37,
	0x59, 0x3b, 0xcf, 0x97, 0xd5, 0x85, 0xc8, 0x46, 0x52, 0x81, 0x9d, 0x31, 0x33, 0x1e, 0xc6, 0x80,
	0x63, 0x05, 0x78, 0xb1, 0x4e, 0xc5, 0xee, 0x52, 0xd9, 0xa0, 0xbc, 0x2c, 0xe0, 0x96, 0xe0, 0xf8,
	0x6f, 0x02, 0x97, 0x8d, 0xa0, 0x10, 0x37, 0x75, 0x7b, 0x3f, 0xea, 0x68, 0xfb, 0x6c, 0xde, 0x22,
	0x87, 0xab, 0x00, 0xce, 0xe3, 0x6d, 0xb4, 0x19, 0x64, 0x4e, 0x6a, 0xdd, 0x5a, 0xaf, 0xcd, 0xe3,
	0x11, 0xbf, 0x45, 0xf5, 0xb1, 0x54, 0x39, 0xd9, 0xe8, 0xd6, 0x7a, 0x9d, 0xa3, 0x63, 0xba, 0x34,
	0x68, 0xf1, 0x6f, 0xd4, 0x8c, 0x87, 0x31, 0xe0, 0x68, 0x6c, 0x8a, 0x4e, 0x0f, 0xe9, 0x2b, 0xab,
	0x83, 0xb9, 0x04, 0x1b, 0xd1, 0x17, 0x52, 0xe5, 0x3c, 0x31, 0xf0, 0x25, 0x6a, 0x59, 0x70, 0x3a,
	0xd8, 0x0c, 0xc8, 0x66, 0xe2, 0x9d, 0x3e, 0x9c, 0xc7, 0x2b, 0x02, 0x5f, 0xb0, 0x70, 0x17, 0x75,
	0x5c, 0x18, 0xcc, 0x13, 0xa4, 0x9e, 0xbe, 0x7e, 0x35, 0x84, 0x31, 0xaa, 0x2b, 0x51, 0x00, 0xd9,
	0x4a, 0xa9, 0x74, 0xc6, 0xbb, 0xa8, 0x1d, 0x7f, 0x9d, 0x11, 0x19, 0x90, 0x46, 0x4a, 0x2c, 0x03,
	0x31, 0xab, 0x4d, 0x34, 0x4c, 0x6a, 0x45, 0x9a, 0x65, 0x76, 0x11, 0xc0, 0xe7, 0xa8, 0x15, 0x1c,
	0xd8, 0x37, 0xea, 0x8b, 0x26, 0xad, 0xd4, 0xc9, 0x33, 0xba, 0xba, 0x3a, 0xbf, 0x2d, 0x47, 0xec,
	0xe0, 0x53, 0x55, 0xcd, 0x17, 0x3a, 0xdc, 0x47, 0x0d, 0x3d, 0xf8, 0x0a, 0x99, 0x27, 0xed, 0x44,
	0x38, 0xb8, 0xd3, 0x8b, 0x6a, 0x92, 0x94, 0x8b, 0xeb, 0xfe, 0x37, 0x0f, 0x2a, 0xd9, 0x50, 0x89,
	0xf1, 0x05, 0x6a, 0xeb, 0x49, 0xfe, 0xae, 0x24, 0xa1, 0x7f, 0x21, 0x2d, 0xf5, 0xf8, 0x29, 0x6a,
	0xe4, 0x76, 0xc6, 0x83, 0x22, 0x9d, 0x6e, 0xad, 0xd7, 0xe2, 0xd5, 0x6d, 0xef, 0xe7, 0x06, 0x7a,
	0xb4, 0xb2, 0x2c, 0xce, 0x68, 0xe5, 0x60, 0xcd, 0xb6, 0x10, 0xd4, 0x14, 0x93, 0x89, 0xbe, 0x86,
	0x72, 0x61, 0x5a, 0x7c, 0x7e, 0xc5, 0x2f, 0x51, 0xc3, 0x79, 0xe1, 0x83, 0xab, 0x26, 0xbf, 0x7f,
	0xbf, 0xc9, 0x7f, 0x48, 0x1a, 0x5e, 0x69, 0xf1, 0x63, 0xb4, 0x65, 0x84, 0xcf, 0x46, 0x69, 0xc6,
	0xff, 0xf1, 0xf2, 0x12, 0x67, 0x95, 0x0e, 0x1f, 0x67, 0x66, 0x3e, 0xe2, 0x65, 0x00, 0x5f, 0xa1,
	0x6d, 0x11, 0x72, 0xe9, 0xcf, 0x94, 0xd2, 0x3e, 0x0d, 0xc4, 0x91, 0x46, 0x77, 0xb3, 0xd7, 0x39,
	0xea, 0xd3, 0x3f, 0x3d, 0x77, 0x7a, 0xab, 0x61, 0x7a, 0x76, 0x83, 0xd3, 0x57, 0xde, 0xce, 0xf8,
	0x2d, 0xfc, 0xce, 0x0b, 0xf4, 0x64, 0x6d, 0x69, 0x74, 0x6c, 0x0c, 0xb3, 0xb9, 0x63, 0x63, 0x98,
	0xc5, 0x8e, 0xa6, 0x62, 0x12, 0x20, 0xf9, 0xd5, 0xe6, 0xe5, 0xe5, 0x74, 0xe3, 0xa4, 0xb6, 0xf7,
	0xbd, 0x86, 0xfe, 0x5f, 0xf9, 0x84, 0xa9, 0x84, 0x6b, 0xfc, 0x1a, 0x35, 0x6d, 0xf9, 0x54, 0x13,
	0xa3, 0x73, 0x44, 0xef, 0xdd, 0x42, 0x52, 0xf1, 0xb9, 0x1c, 0x5f, 0xa4, 0xb7, 0x98, 0xda, 0xaa,
	0xde, 0x36, 0x7b, 0xa0, 0x1b, 0x7c, 0x01, 0x38, 0x6f, 0x7f, 0x6e, 0x56, 0x65, 0xbf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x8d, 0x7e, 0x26, 0x7e, 0x94, 0x05, 0x00, 0x00,
}
