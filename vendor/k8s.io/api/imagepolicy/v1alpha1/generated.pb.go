// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/imagepolicy/v1alpha1/generated.proto

package v1alpha1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import _ "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ImageReview checks if the set of images in a pod are allowed.
type ImageReview struct {
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Spec holds information about the pod being evaluated
	Spec *ImageReviewSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Status is filled in by the backend and indicates whether the pod should be allowed.
	// +optional
	Status               *ImageReviewStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ImageReview) Reset()         { *m = ImageReview{} }
func (m *ImageReview) String() string { return proto.CompactTextString(m) }
func (*ImageReview) ProtoMessage()    {}
func (*ImageReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_bc2e5812d9142724, []int{0}
}
func (m *ImageReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageReview.Unmarshal(m, b)
}
func (m *ImageReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageReview.Marshal(b, m, deterministic)
}
func (dst *ImageReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageReview.Merge(dst, src)
}
func (m *ImageReview) XXX_Size() int {
	return xxx_messageInfo_ImageReview.Size(m)
}
func (m *ImageReview) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageReview.DiscardUnknown(m)
}

var xxx_messageInfo_ImageReview proto.InternalMessageInfo

func (m *ImageReview) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ImageReview) GetSpec() *ImageReviewSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ImageReview) GetStatus() *ImageReviewStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// ImageReviewContainerSpec is a description of a container within the pod creation request.
type ImageReviewContainerSpec struct {
	// This can be in the form image:tag or image@SHA:012345679abcdef.
	// +optional
	Image                *string  `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageReviewContainerSpec) Reset()         { *m = ImageReviewContainerSpec{} }
func (m *ImageReviewContainerSpec) String() string { return proto.CompactTextString(m) }
func (*ImageReviewContainerSpec) ProtoMessage()    {}
func (*ImageReviewContainerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_bc2e5812d9142724, []int{1}
}
func (m *ImageReviewContainerSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageReviewContainerSpec.Unmarshal(m, b)
}
func (m *ImageReviewContainerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageReviewContainerSpec.Marshal(b, m, deterministic)
}
func (dst *ImageReviewContainerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageReviewContainerSpec.Merge(dst, src)
}
func (m *ImageReviewContainerSpec) XXX_Size() int {
	return xxx_messageInfo_ImageReviewContainerSpec.Size(m)
}
func (m *ImageReviewContainerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageReviewContainerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImageReviewContainerSpec proto.InternalMessageInfo

func (m *ImageReviewContainerSpec) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

// ImageReviewSpec is a description of the pod creation request.
type ImageReviewSpec struct {
	// Containers is a list of a subset of the information in each container of the Pod being created.
	// +optional
	Containers []*ImageReviewContainerSpec `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
	// Annotations is a list of key-value pairs extracted from the Pod's annotations.
	// It only includes keys which match the pattern `*.image-policy.k8s.io/*`.
	// It is up to each webhook backend to determine how to interpret these annotations, if at all.
	// +optional
	Annotations map[string]string `protobuf:"bytes,2,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Namespace is the namespace the pod is being created in.
	// +optional
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageReviewSpec) Reset()         { *m = ImageReviewSpec{} }
func (m *ImageReviewSpec) String() string { return proto.CompactTextString(m) }
func (*ImageReviewSpec) ProtoMessage()    {}
func (*ImageReviewSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_bc2e5812d9142724, []int{2}
}
func (m *ImageReviewSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageReviewSpec.Unmarshal(m, b)
}
func (m *ImageReviewSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageReviewSpec.Marshal(b, m, deterministic)
}
func (dst *ImageReviewSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageReviewSpec.Merge(dst, src)
}
func (m *ImageReviewSpec) XXX_Size() int {
	return xxx_messageInfo_ImageReviewSpec.Size(m)
}
func (m *ImageReviewSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageReviewSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImageReviewSpec proto.InternalMessageInfo

func (m *ImageReviewSpec) GetContainers() []*ImageReviewContainerSpec {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *ImageReviewSpec) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ImageReviewSpec) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

// ImageReviewStatus is the result of the review for the pod creation request.
type ImageReviewStatus struct {
	// Allowed indicates that all images were allowed to be run.
	Allowed *bool `protobuf:"varint,1,opt,name=allowed" json:"allowed,omitempty"`
	// Reason should be empty unless Allowed is false in which case it
	// may contain a short description of what is wrong.  Kubernetes
	// may truncate excessively long errors when displaying to the user.
	// +optional
	Reason *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	// AuditAnnotations will be added to the attributes object of the
	// admission controller request using 'AddAnnotation'.  The keys should
	// be prefix-less (i.e., the admission controller will add an
	// appropriate prefix).
	// +optional
	AuditAnnotations     map[string]string `protobuf:"bytes,3,rep,name=auditAnnotations" json:"auditAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImageReviewStatus) Reset()         { *m = ImageReviewStatus{} }
func (m *ImageReviewStatus) String() string { return proto.CompactTextString(m) }
func (*ImageReviewStatus) ProtoMessage()    {}
func (*ImageReviewStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_bc2e5812d9142724, []int{3}
}
func (m *ImageReviewStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageReviewStatus.Unmarshal(m, b)
}
func (m *ImageReviewStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageReviewStatus.Marshal(b, m, deterministic)
}
func (dst *ImageReviewStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageReviewStatus.Merge(dst, src)
}
func (m *ImageReviewStatus) XXX_Size() int {
	return xxx_messageInfo_ImageReviewStatus.Size(m)
}
func (m *ImageReviewStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageReviewStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ImageReviewStatus proto.InternalMessageInfo

func (m *ImageReviewStatus) GetAllowed() bool {
	if m != nil && m.Allowed != nil {
		return *m.Allowed
	}
	return false
}

func (m *ImageReviewStatus) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *ImageReviewStatus) GetAuditAnnotations() map[string]string {
	if m != nil {
		return m.AuditAnnotations
	}
	return nil
}

func init() {
	proto.RegisterType((*ImageReview)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReview")
	proto.RegisterType((*ImageReviewContainerSpec)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReviewContainerSpec")
	proto.RegisterType((*ImageReviewSpec)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReviewSpec")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReviewSpec.AnnotationsEntry")
	proto.RegisterType((*ImageReviewStatus)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReviewStatus")
	proto.RegisterMapType((map[string]string)(nil), "k8s.io.api.imagepolicy.v1alpha1.ImageReviewStatus.AuditAnnotationsEntry")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/imagepolicy/v1alpha1/generated.proto", fileDescriptor_generated_bc2e5812d9142724)
}

var fileDescriptor_generated_bc2e5812d9142724 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x8e, 0xd3, 0x3e,
	0x10, 0xc6, 0xd5, 0xf6, 0xff, 0x5f, 0xda, 0xe9, 0x81, 0x62, 0x01, 0x8a, 0x2a, 0x24, 0x56, 0x3d,
	0xed, 0x05, 0x7b, 0x5b, 0x21, 0xb4, 0x70, 0x40, 0x2a, 0x0b, 0x12, 0x20, 0x10, 0x92, 0xf7, 0x04,
	0xb7, 0x59, 0x77, 0x94, 0x9a, 0x26, 0xb6, 0x15, 0x3b, 0x59, 0xf5, 0xc6, 0x1b, 0xf1, 0x64, 0xbc,
	0x03, 0x8a, 0xdb, 0x6e, 0x43, 0xbb, 0x08, 0xe5, 0x96, 0x99, 0xf8, 0xfb, 0xcd, 0x37, 0x9f, 0x0d,
	0x57, 0xa9, 0x0e, 0xcb, 0xf2, 0x9a, 0x2b, 0x9b, 0x0b, 0x6f, 0x33, 0xfb, 0x4c, 0x5b, 0xe1, 0x4b,
	0x47, 0x45, 0x9a, 0x59, 0x2b, 0x2a, 0x32, 0x0b, 0x5b, 0x88, 0xd5, 0x85, 0xe7, 0xda, 0x0a, 0x74,
	0x5a, 0xe8, 0x1c, 0x53, 0x72, 0x36, 0xd3, 0x6a, 0x2d, 0xaa, 0x29, 0x66, 0x6e, 0x89, 0x53, 0x91,
	0x92, 0xa1, 0x02, 0x03, 0x2d, 0xb8, 0x2b, 0x6c, 0xb0, 0xec, 0xe9, 0x46, 0xc0, 0xd1, 0x69, 0xde,
	0x10, 0xf0, 0x9d, 0x60, 0xfc, 0x7c, 0x4f, 0xcc, 0x51, 0x2d, 0xb5, 0xa1, 0x62, 0x2d, 0xdc, 0x2a,
	0xad, 0x1b, 0x5e, 0xe4, 0x14, 0x50, 0x54, 0x47, 0xd8, 0xb1, 0xf8, 0x9b, 0xaa, 0x28, 0x4d, 0xd0,
	0x39, 0x1d, 0x09, 0x5e, 0xfc, 0x4b, 0xe0, 0xd5, 0x92, 0x72, 0x3c, 0xd4, 0x4d, 0x7e, 0x75, 0x60,
	0xf8, 0xa1, 0xf6, 0x2d, 0xa9, 0xd2, 0x74, 0xc3, 0x3e, 0x41, 0xbf, 0xf6, 0xb4, 0xc0, 0x80, 0x49,
	0xe7, 0xb4, 0x73, 0x36, 0x9c, 0x9d, 0xf3, 0xfd, 0x8a, 0xb7, 0x68, 0xee, 0x56, 0x69, 0xdd, 0xf0,
	0xbc, 0x3e, 0xcd, 0xab, 0x29, 0xff, 0x72, 0xfd, 0x9d, 0x54, 0xf8, 0x4c, 0x01, 0xe5, 0x2d, 0x81,
	0xbd, 0x85, 0xff, 0xbc, 0x23, 0x95, 0x74, 0x8f, 0x48, 0x77, 0x86, 0xc5, 0x1b, 0x4e, 0xae, 0x1c,
	0x29, 0x19, 0xd5, 0xec, 0x23, 0x9c, 0xf8, 0x80, 0xa1, 0xf4, 0x49, 0x2f, 0x72, 0x66, 0xad, 0x38,
	0x51, 0x29, 0xb7, 0x84, 0xc9, 0x39, 0x24, 0x8d, 0x9f, 0x97, 0xd6, 0x04, 0xac, 0x17, 0xaa, 0xa7,
	0xb1, 0x87, 0xf0, 0x7f, 0xa4, 0xc5, 0xc5, 0x07, 0x72, 0x53, 0x4c, 0x7e, 0x76, 0xe1, 0xfe, 0x81,
	0x2f, 0xf6, 0x15, 0x40, 0xed, 0xa4, 0x3e, 0xe9, 0x9c, 0xf6, 0xce, 0x86, 0xb3, 0x97, 0x6d, 0x5c,
	0xfd, 0x31, 0x58, 0x36, 0x60, 0x4c, 0xc1, 0x10, 0x8d, 0xb1, 0x01, 0x83, 0xb6, 0xc6, 0x27, 0xdd,
	0xc8, 0x9e, 0xb7, 0x4d, 0x8e, 0xcf, 0xf7, 0x8c, 0x77, 0x26, 0x14, 0x6b, 0xd9, 0xa4, 0xb2, 0x27,
	0x30, 0x30, 0x98, 0x93, 0x77, 0xa8, 0x28, 0x86, 0x3a, 0x90, 0xfb, 0xc6, 0xf8, 0x35, 0x8c, 0x0e,
	0xe5, 0x6c, 0x04, 0xbd, 0x15, 0xad, 0xb7, 0xc9, 0xd4, 0x9f, 0x75, 0x5a, 0x15, 0x66, 0x25, 0xc5,
	0xcb, 0x1d, 0xc8, 0x4d, 0xf1, 0xaa, 0x7b, 0xd1, 0x99, 0xfc, 0xe8, 0xc2, 0x83, 0xa3, 0x1b, 0x60,
	0x09, 0xdc, 0xc3, 0x2c, 0xb3, 0x37, 0xb4, 0x88, 0x94, 0xbe, 0xdc, 0x95, 0xec, 0x31, 0x9c, 0x14,
	0x84, 0xde, 0x9a, 0x2d, 0x6a, 0x5b, 0xb1, 0x00, 0x23, 0x2c, 0x17, 0x3a, 0x34, 0xcc, 0x24, 0xbd,
	0x98, 0xc7, 0xfb, 0xf6, 0x2f, 0x80, 0xcf, 0x0f, 0x50, 0x9b, 0x58, 0x8e, 0x26, 0x8c, 0x2f, 0xe1,
	0xd1, 0x9d, 0x47, 0xdb, 0x44, 0xf0, 0x06, 0xbe, 0xf5, 0x77, 0x56, 0x7e, 0x07, 0x00, 0x00, 0xff,
	0xff, 0xd3, 0x18, 0x42, 0x57, 0x78, 0x04, 0x00, 0x00,
}
