// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/vendor/k8s.io/api/rbac/v1alpha1/generated.proto

package v1alpha1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import _ "k8s.io/apimachinery/pkg/runtime"
import _ "k8s.io/apimachinery/pkg/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
type AggregationRule struct {
	// ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.
	// If any of the selectors match, then the ClusterRole's permissions will be added
	// +optional
	ClusterRoleSelectors []*v1.LabelSelector `protobuf:"bytes,1,rep,name=clusterRoleSelectors" json:"clusterRoleSelectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AggregationRule) Reset()         { *m = AggregationRule{} }
func (m *AggregationRule) String() string { return proto.CompactTextString(m) }
func (*AggregationRule) ProtoMessage()    {}
func (*AggregationRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{0}
}
func (m *AggregationRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregationRule.Unmarshal(m, b)
}
func (m *AggregationRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregationRule.Marshal(b, m, deterministic)
}
func (dst *AggregationRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregationRule.Merge(dst, src)
}
func (m *AggregationRule) XXX_Size() int {
	return xxx_messageInfo_AggregationRule.Size(m)
}
func (m *AggregationRule) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregationRule.DiscardUnknown(m)
}

var xxx_messageInfo_AggregationRule proto.InternalMessageInfo

func (m *AggregationRule) GetClusterRoleSelectors() []*v1.LabelSelector {
	if m != nil {
		return m.ClusterRoleSelectors
	}
	return nil
}

// ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
type ClusterRole struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Rules holds all the PolicyRules for this ClusterRole
	Rules []*PolicyRule `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	// AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.
	// If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be
	// stomped by the controller.
	// +optional
	AggregationRule      *AggregationRule `protobuf:"bytes,3,opt,name=aggregationRule" json:"aggregationRule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClusterRole) Reset()         { *m = ClusterRole{} }
func (m *ClusterRole) String() string { return proto.CompactTextString(m) }
func (*ClusterRole) ProtoMessage()    {}
func (*ClusterRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{1}
}
func (m *ClusterRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterRole.Unmarshal(m, b)
}
func (m *ClusterRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterRole.Marshal(b, m, deterministic)
}
func (dst *ClusterRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRole.Merge(dst, src)
}
func (m *ClusterRole) XXX_Size() int {
	return xxx_messageInfo_ClusterRole.Size(m)
}
func (m *ClusterRole) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRole.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRole proto.InternalMessageInfo

func (m *ClusterRole) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterRole) GetRules() []*PolicyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *ClusterRole) GetAggregationRule() *AggregationRule {
	if m != nil {
		return m.AggregationRule
	}
	return nil
}

// ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace,
// and adds who information via Subject.
type ClusterRoleBinding struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Subjects holds references to the objects the role applies to.
	// +optional
	Subjects []*Subject `protobuf:"bytes,2,rep,name=subjects" json:"subjects,omitempty"`
	// RoleRef can only reference a ClusterRole in the global namespace.
	// If the RoleRef cannot be resolved, the Authorizer must return an error.
	RoleRef              *RoleRef `protobuf:"bytes,3,opt,name=roleRef" json:"roleRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterRoleBinding) Reset()         { *m = ClusterRoleBinding{} }
func (m *ClusterRoleBinding) String() string { return proto.CompactTextString(m) }
func (*ClusterRoleBinding) ProtoMessage()    {}
func (*ClusterRoleBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{2}
}
func (m *ClusterRoleBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterRoleBinding.Unmarshal(m, b)
}
func (m *ClusterRoleBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterRoleBinding.Marshal(b, m, deterministic)
}
func (dst *ClusterRoleBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRoleBinding.Merge(dst, src)
}
func (m *ClusterRoleBinding) XXX_Size() int {
	return xxx_messageInfo_ClusterRoleBinding.Size(m)
}
func (m *ClusterRoleBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRoleBinding.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRoleBinding proto.InternalMessageInfo

func (m *ClusterRoleBinding) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterRoleBinding) GetSubjects() []*Subject {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *ClusterRoleBinding) GetRoleRef() *RoleRef {
	if m != nil {
		return m.RoleRef
	}
	return nil
}

// ClusterRoleBindingList is a collection of ClusterRoleBindings
type ClusterRoleBindingList struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is a list of ClusterRoleBindings
	Items                []*ClusterRoleBinding `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClusterRoleBindingList) Reset()         { *m = ClusterRoleBindingList{} }
func (m *ClusterRoleBindingList) String() string { return proto.CompactTextString(m) }
func (*ClusterRoleBindingList) ProtoMessage()    {}
func (*ClusterRoleBindingList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{3}
}
func (m *ClusterRoleBindingList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterRoleBindingList.Unmarshal(m, b)
}
func (m *ClusterRoleBindingList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterRoleBindingList.Marshal(b, m, deterministic)
}
func (dst *ClusterRoleBindingList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRoleBindingList.Merge(dst, src)
}
func (m *ClusterRoleBindingList) XXX_Size() int {
	return xxx_messageInfo_ClusterRoleBindingList.Size(m)
}
func (m *ClusterRoleBindingList) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRoleBindingList.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRoleBindingList proto.InternalMessageInfo

func (m *ClusterRoleBindingList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterRoleBindingList) GetItems() []*ClusterRoleBinding {
	if m != nil {
		return m.Items
	}
	return nil
}

// ClusterRoleList is a collection of ClusterRoles
type ClusterRoleList struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is a list of ClusterRoles
	Items                []*ClusterRole `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClusterRoleList) Reset()         { *m = ClusterRoleList{} }
func (m *ClusterRoleList) String() string { return proto.CompactTextString(m) }
func (*ClusterRoleList) ProtoMessage()    {}
func (*ClusterRoleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{4}
}
func (m *ClusterRoleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterRoleList.Unmarshal(m, b)
}
func (m *ClusterRoleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterRoleList.Marshal(b, m, deterministic)
}
func (dst *ClusterRoleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRoleList.Merge(dst, src)
}
func (m *ClusterRoleList) XXX_Size() int {
	return xxx_messageInfo_ClusterRoleList.Size(m)
}
func (m *ClusterRoleList) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRoleList.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRoleList proto.InternalMessageInfo

func (m *ClusterRoleList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterRoleList) GetItems() []*ClusterRole {
	if m != nil {
		return m.Items
	}
	return nil
}

// PolicyRule holds information that describes a policy rule, but does not contain information
// about who the rule applies to or which namespace the rule applies to.
type PolicyRule struct {
	// Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
	Verbs []string `protobuf:"bytes,1,rep,name=verbs" json:"verbs,omitempty"`
	// APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
	// the enumerated resources in any API group will be allowed.
	// +optional
	ApiGroups []string `protobuf:"bytes,3,rep,name=apiGroups" json:"apiGroups,omitempty"`
	// Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
	// +optional
	Resources []string `protobuf:"bytes,4,rep,name=resources" json:"resources,omitempty"`
	// ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
	// +optional
	ResourceNames []string `protobuf:"bytes,5,rep,name=resourceNames" json:"resourceNames,omitempty"`
	// NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
	// This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different.
	// Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
	// Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
	// +optional
	NonResourceURLs      []string `protobuf:"bytes,6,rep,name=nonResourceURLs" json:"nonResourceURLs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyRule) Reset()         { *m = PolicyRule{} }
func (m *PolicyRule) String() string { return proto.CompactTextString(m) }
func (*PolicyRule) ProtoMessage()    {}
func (*PolicyRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{5}
}
func (m *PolicyRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyRule.Unmarshal(m, b)
}
func (m *PolicyRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyRule.Marshal(b, m, deterministic)
}
func (dst *PolicyRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyRule.Merge(dst, src)
}
func (m *PolicyRule) XXX_Size() int {
	return xxx_messageInfo_PolicyRule.Size(m)
}
func (m *PolicyRule) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyRule.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyRule proto.InternalMessageInfo

func (m *PolicyRule) GetVerbs() []string {
	if m != nil {
		return m.Verbs
	}
	return nil
}

func (m *PolicyRule) GetApiGroups() []string {
	if m != nil {
		return m.ApiGroups
	}
	return nil
}

func (m *PolicyRule) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *PolicyRule) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

func (m *PolicyRule) GetNonResourceURLs() []string {
	if m != nil {
		return m.NonResourceURLs
	}
	return nil
}

// Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
type Role struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Rules holds all the PolicyRules for this Role
	Rules                []*PolicyRule `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{6}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (dst *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(dst, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Role) GetRules() []*PolicyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace.
// It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given
// namespace only have effect in that namespace.
type RoleBinding struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Subjects holds references to the objects the role applies to.
	// +optional
	Subjects []*Subject `protobuf:"bytes,2,rep,name=subjects" json:"subjects,omitempty"`
	// RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.
	// If the RoleRef cannot be resolved, the Authorizer must return an error.
	RoleRef              *RoleRef `protobuf:"bytes,3,opt,name=roleRef" json:"roleRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBinding) Reset()         { *m = RoleBinding{} }
func (m *RoleBinding) String() string { return proto.CompactTextString(m) }
func (*RoleBinding) ProtoMessage()    {}
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{7}
}
func (m *RoleBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBinding.Unmarshal(m, b)
}
func (m *RoleBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBinding.Marshal(b, m, deterministic)
}
func (dst *RoleBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBinding.Merge(dst, src)
}
func (m *RoleBinding) XXX_Size() int {
	return xxx_messageInfo_RoleBinding.Size(m)
}
func (m *RoleBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBinding.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBinding proto.InternalMessageInfo

func (m *RoleBinding) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RoleBinding) GetSubjects() []*Subject {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *RoleBinding) GetRoleRef() *RoleRef {
	if m != nil {
		return m.RoleRef
	}
	return nil
}

// RoleBindingList is a collection of RoleBindings
type RoleBindingList struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is a list of RoleBindings
	Items                []*RoleBinding `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoleBindingList) Reset()         { *m = RoleBindingList{} }
func (m *RoleBindingList) String() string { return proto.CompactTextString(m) }
func (*RoleBindingList) ProtoMessage()    {}
func (*RoleBindingList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{8}
}
func (m *RoleBindingList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingList.Unmarshal(m, b)
}
func (m *RoleBindingList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingList.Marshal(b, m, deterministic)
}
func (dst *RoleBindingList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingList.Merge(dst, src)
}
func (m *RoleBindingList) XXX_Size() int {
	return xxx_messageInfo_RoleBindingList.Size(m)
}
func (m *RoleBindingList) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingList.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingList proto.InternalMessageInfo

func (m *RoleBindingList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RoleBindingList) GetItems() []*RoleBinding {
	if m != nil {
		return m.Items
	}
	return nil
}

// RoleList is a collection of Roles
type RoleList struct {
	// Standard object's metadata.
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is a list of Roles
	Items                []*Role  `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleList) Reset()         { *m = RoleList{} }
func (m *RoleList) String() string { return proto.CompactTextString(m) }
func (*RoleList) ProtoMessage()    {}
func (*RoleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{9}
}
func (m *RoleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleList.Unmarshal(m, b)
}
func (m *RoleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleList.Marshal(b, m, deterministic)
}
func (dst *RoleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleList.Merge(dst, src)
}
func (m *RoleList) XXX_Size() int {
	return xxx_messageInfo_RoleList.Size(m)
}
func (m *RoleList) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleList.DiscardUnknown(m)
}

var xxx_messageInfo_RoleList proto.InternalMessageInfo

func (m *RoleList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RoleList) GetItems() []*Role {
	if m != nil {
		return m.Items
	}
	return nil
}

// RoleRef contains information that points to the role being used
type RoleRef struct {
	// APIGroup is the group for the resource being referenced
	ApiGroup *string `protobuf:"bytes,1,opt,name=apiGroup" json:"apiGroup,omitempty"`
	// Kind is the type of resource being referenced
	Kind *string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	// Name is the name of resource being referenced
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleRef) Reset()         { *m = RoleRef{} }
func (m *RoleRef) String() string { return proto.CompactTextString(m) }
func (*RoleRef) ProtoMessage()    {}
func (*RoleRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{10}
}
func (m *RoleRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleRef.Unmarshal(m, b)
}
func (m *RoleRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleRef.Marshal(b, m, deterministic)
}
func (dst *RoleRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleRef.Merge(dst, src)
}
func (m *RoleRef) XXX_Size() int {
	return xxx_messageInfo_RoleRef.Size(m)
}
func (m *RoleRef) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleRef.DiscardUnknown(m)
}

var xxx_messageInfo_RoleRef proto.InternalMessageInfo

func (m *RoleRef) GetApiGroup() string {
	if m != nil && m.ApiGroup != nil {
		return *m.ApiGroup
	}
	return ""
}

func (m *RoleRef) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *RoleRef) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
// or a value for non-objects such as user and group names.
type Subject struct {
	// Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
	// If the Authorizer does not recognized the kind value, the Authorizer should report an error.
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// APIVersion holds the API group and version of the referenced subject.
	// Defaults to "v1" for ServiceAccount subjects.
	// Defaults to "rbac.authorization.k8s.io/v1alpha1" for User and Group subjects.
	// +k8s:conversion-gen=false
	// +optional
	ApiVersion *string `protobuf:"bytes,2,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// Name of the object being referenced.
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
	// the Authorizer should report an error.
	// +optional
	Namespace            *string  `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_generated_d9b063e81ff90872, []int{11}
}
func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (dst *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(dst, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *Subject) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

func (m *Subject) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Subject) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func init() {
	proto.RegisterType((*AggregationRule)(nil), "k8s.io.api.rbac.v1alpha1.AggregationRule")
	proto.RegisterType((*ClusterRole)(nil), "k8s.io.api.rbac.v1alpha1.ClusterRole")
	proto.RegisterType((*ClusterRoleBinding)(nil), "k8s.io.api.rbac.v1alpha1.ClusterRoleBinding")
	proto.RegisterType((*ClusterRoleBindingList)(nil), "k8s.io.api.rbac.v1alpha1.ClusterRoleBindingList")
	proto.RegisterType((*ClusterRoleList)(nil), "k8s.io.api.rbac.v1alpha1.ClusterRoleList")
	proto.RegisterType((*PolicyRule)(nil), "k8s.io.api.rbac.v1alpha1.PolicyRule")
	proto.RegisterType((*Role)(nil), "k8s.io.api.rbac.v1alpha1.Role")
	proto.RegisterType((*RoleBinding)(nil), "k8s.io.api.rbac.v1alpha1.RoleBinding")
	proto.RegisterType((*RoleBindingList)(nil), "k8s.io.api.rbac.v1alpha1.RoleBindingList")
	proto.RegisterType((*RoleList)(nil), "k8s.io.api.rbac.v1alpha1.RoleList")
	proto.RegisterType((*RoleRef)(nil), "k8s.io.api.rbac.v1alpha1.RoleRef")
	proto.RegisterType((*Subject)(nil), "k8s.io.api.rbac.v1alpha1.Subject")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/vendor/k8s.io/api/rbac/v1alpha1/generated.proto", fileDescriptor_generated_d9b063e81ff90872)
}

var fileDescriptor_generated_d9b063e81ff90872 = []byte{
	// 635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x54, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0x66, 0xdb, 0xc4, 0x26, 0x27, 0x48, 0x60, 0x28, 0xb2, 0x14, 0x29, 0x75, 0xa9, 0x50, 0x41,
	0x67, 0x6c, 0x2d, 0x22, 0x16, 0x2f, 0xac, 0x17, 0x82, 0xa4, 0x2a, 0x53, 0xf4, 0xc2, 0xbb, 0xc9,
	0xe6, 0xb8, 0x19, 0xb3, 0x3b, 0xb3, 0xcc, 0xcc, 0x06, 0xea, 0x33, 0x78, 0xe1, 0xb5, 0x4f, 0xe0,
	0x95, 0xaf, 0xe3, 0x9d, 0x4f, 0xe0, 0x43, 0xc8, 0xee, 0x66, 0xf3, 0x1f, 0x9b, 0x8b, 0x16, 0xc4,
	0xab, 0xec, 0x7c, 0xe7, 0x7c, 0x67, 0xbf, 0x6f, 0xf6, 0x7c, 0x81, 0x4e, 0x24, 0x5d, 0x3f, 0xeb,
	0xd2, 0x50, 0x27, 0xcc, 0xea, 0x58, 0x3f, 0x90, 0x9a, 0xd9, 0x2c, 0x45, 0x13, 0xc5, 0x5a, 0xb3,
	0x21, 0xaa, 0x9e, 0x36, 0x6c, 0xf0, 0xc4, 0x52, 0xa9, 0x99, 0x48, 0x25, 0x33, 0x5d, 0x11, 0xb2,
	0xe1, 0xa1, 0x88, 0xd3, 0xbe, 0x38, 0x64, 0x11, 0x2a, 0x34, 0xc2, 0x61, 0x8f, 0xa6, 0x46, 0x3b,
	0x4d, 0xfc, 0xb2, 0x93, 0x8a, 0x54, 0xd2, 0xbc, 0x93, 0x56, 0x9d, 0x3b, 0xc7, 0x93, 0x19, 0x89,
	0x08, 0xfb, 0x52, 0xa1, 0xb9, 0x60, 0xe9, 0x20, 0xca, 0x01, 0xcb, 0x12, 0x74, 0x82, 0x0d, 0x17,
	0xe6, 0xed, 0xb0, 0x55, 0x2c, 0x93, 0x29, 0x27, 0x13, 0x5c, 0x20, 0x3c, 0xbe, 0x8c, 0x60, 0xc3,
	0x3e, 0x26, 0x62, 0x9e, 0x17, 0x7c, 0x86, 0xf6, 0xf3, 0x28, 0x32, 0x18, 0x09, 0x27, 0xb5, 0xe2,
	0x59, 0x8c, 0x24, 0x82, 0xed, 0x30, 0xce, 0xac, 0x43, 0xc3, 0x75, 0x8c, 0xe7, 0x18, 0x63, 0xe8,
	0xb4, 0xb1, 0xbe, 0xb7, 0xb7, 0x79, 0xd0, 0x3a, 0x7a, 0x44, 0x27, 0x56, 0xc7, 0x6f, 0xa2, 0xe9,
	0x20, 0xca, 0x01, 0x4b, 0x73, 0x43, 0x74, 0x78, 0x48, 0x3b, 0xa2, 0x8b, 0x71, 0xc5, 0xe5, 0x4b,
	0x07, 0x06, 0xbf, 0x3d, 0x68, 0xbd, 0x98, 0x14, 0x48, 0x07, 0x1a, 0x39, 0xbd, 0x27, 0x9c, 0xf0,
	0xbd, 0x3d, 0xef, 0xa0, 0x75, 0xf4, 0x70, 0xbd, 0x97, 0xbd, 0xe9, 0x7e, 0xc2, 0xd0, 0x9d, 0xa1,
	0x13, 0x7c, 0x3c, 0x81, 0x3c, 0x85, 0xba, 0xc9, 0x62, 0xb4, 0xfe, 0x46, 0xa1, 0x7b, 0x9f, 0xae,
	0xfa, 0x44, 0xf4, 0xad, 0x8e, 0x65, 0x78, 0x91, 0x7b, 0xe7, 0x25, 0x85, 0x9c, 0x43, 0x5b, 0xcc,
	0xde, 0x8a, 0xbf, 0x59, 0x08, 0xba, 0xb7, 0x7a, 0xca, 0xdc, 0x35, 0xf2, 0xf9, 0x09, 0xc1, 0x2f,
	0x0f, 0xc8, 0x94, 0xdd, 0x53, 0xa9, 0x7a, 0x52, 0x45, 0x57, 0xec, 0xfa, 0x19, 0x34, 0x6c, 0x56,
	0x14, 0x2a, 0xe3, 0x77, 0x56, 0x4b, 0x3e, 0x2f, 0x3b, 0xf9, 0x98, 0x42, 0x4e, 0x60, 0xcb, 0xe8,
	0x18, 0x39, 0x7e, 0x1c, 0x19, 0xfe, 0x0b, 0x9b, 0x97, 0x8d, 0xbc, 0x62, 0x04, 0xdf, 0x3d, 0xb8,
	0xb5, 0x68, 0xb0, 0x23, 0xad, 0x23, 0xaf, 0x16, 0x4c, 0xd2, 0x35, 0xf7, 0x48, 0xda, 0x79, 0x8b,
	0xa7, 0x50, 0x97, 0x0e, 0x93, 0xca, 0xdf, 0xfd, 0xd5, 0x0a, 0x17, 0xc5, 0xf0, 0x92, 0x1a, 0x7c,
	0xf3, 0xa0, 0x3d, 0x55, 0xbd, 0x72, 0x8d, 0x27, 0xb3, 0x1a, 0xef, 0xae, 0xa5, 0xb1, 0x12, 0xf7,
	0xc3, 0x03, 0x98, 0xec, 0x24, 0xd9, 0x86, 0xfa, 0x10, 0x4d, 0xb7, 0x0c, 0x60, 0x93, 0x97, 0x07,
	0x72, 0x1b, 0x9a, 0x22, 0x95, 0x2f, 0x8d, 0xce, 0x52, 0xeb, 0x6f, 0x16, 0x95, 0x09, 0x90, 0x57,
	0x0d, 0x5a, 0x9d, 0x99, 0x10, 0xad, 0x5f, 0x2b, 0xab, 0x63, 0x80, 0xec, 0xc3, 0xcd, 0xea, 0xf0,
	0x5a, 0x24, 0x68, 0xfd, 0x7a, 0xd1, 0x31, 0x0b, 0x92, 0x03, 0x68, 0x2b, 0xad, 0xf8, 0x08, 0x7b,
	0xc7, 0x3b, 0xd6, 0xbf, 0x51, 0xf4, 0xcd, 0xc3, 0xc1, 0x57, 0x0f, 0x6a, 0xff, 0x56, 0x82, 0x83,
	0x9f, 0x1e, 0xb4, 0xfe, 0xcf, 0x94, 0xe5, 0xab, 0x7b, 0x9d, 0xf1, 0x5a, 0x7f, 0x75, 0x97, 0xe4,
	0xea, 0x8b, 0x07, 0x8d, 0x6b, 0x09, 0xd4, 0xf1, 0xac, 0xaa, 0xdd, 0x4b, 0x2e, 0x6c, 0x24, 0xe7,
	0x0c, 0xb6, 0x46, 0xf7, 0x47, 0x76, 0xa0, 0x51, 0xc5, 0xa3, 0x10, 0xd3, 0xe4, 0xe3, 0x33, 0x21,
	0x50, 0x1b, 0x48, 0xd5, 0xf3, 0x37, 0x0a, 0xbc, 0x78, 0xce, 0x31, 0x25, 0x92, 0xf2, 0x7f, 0xbf,
	0xc9, 0x8b, 0xe7, 0x40, 0xc3, 0xd6, 0xe8, 0x63, 0x8e, 0x29, 0xde, 0x14, 0x65, 0x17, 0x40, 0xa4,
	0xf2, 0x3d, 0x1a, 0x2b, 0xb5, 0x1a, 0x0d, 0x9b, 0x42, 0x96, 0x8d, 0xcc, 0x83, 0x9a, 0xff, 0xda,
	0x54, 0x84, 0xe8, 0xd7, 0x8a, 0xc2, 0x04, 0x38, 0x85, 0x0f, 0x8d, 0xca, 0xd7, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x3d, 0xfd, 0x7c, 0x14, 0xb1, 0x08, 0x00, 0x00,
}
