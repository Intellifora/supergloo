// Code generated by MockGen. DO NOT EDIT.
// Source: pod.go

// Package mock_kube is a generated GoMock package.
package mock_kube

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPodClient is a mock of PodClient interface
type MockPodClient struct {
	ctrl     *gomock.Controller
	recorder *MockPodClientMockRecorder
}

// MockPodClientMockRecorder is the mock recorder for MockPodClient
type MockPodClientMockRecorder struct {
	mock *MockPodClient
}

// NewMockPodClient creates a new mock instance
func NewMockPodClient(ctrl *gomock.Controller) *MockPodClient {
	mock := &MockPodClient{ctrl: ctrl}
	mock.recorder = &MockPodClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPodClient) EXPECT() *MockPodClientMockRecorder {
	return m.recorder
}

// RestartPods mocks base method
func (m *MockPodClient) RestartPods(namespace string, selector map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestartPods", namespace, selector)
	ret0, _ := ret[0].(error)
	return ret0
}

// RestartPods indicates an expected call of RestartPods
func (mr *MockPodClientMockRecorder) RestartPods(namespace, selector interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestartPods", reflect.TypeOf((*MockPodClient)(nil).RestartPods), namespace, selector)
}
